Model: <class 'multiagent.mappo.MAPPOAgent'>, Dir: 5_vs_5
num_envs: 16,
state_size: [(1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115)],
action_size: [[1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19]],
action_space: [MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19])],
envs: <class 'utils.envs.EnvManager'>,
reward_shape: True,
icm: True,

import torch
import random
import numpy as np
from models.ppo import PPONetwork, PPOCritic
from models.rand import MultiagentReplayBuffer2
from utils.network import PTNetwork, PTACNetwork, PTACAgent, Conv, ACTOR_HIDDEN, CRITIC_HIDDEN, LEARN_RATE, NUM_STEPS, MultiheadAttention, one_hot_from_indices

PPO_EPOCHS = 4					# Number of iterations to sample batches for training
BATCH_SIZE = 32000				# Number of samples to train on for each train step
TIME_BUFFER = 3000				# Number of time steps for RNN BPTT
EPISODE_BUFFER = 64  	    	# Sets the maximum length of the replay buffer
CLIP_PARAM = 0.1				# The limit of the ratio of new action probabilities to old probabilities
EPS_MAX = 0.5                 	# The starting weight for the entropy term of the Actor loss
EPS_MIN = 0.001               	# The lower weight for the entropy term of the Actor loss
EPS_DECAY = 0.9             	# The rate at which eps decays from EPS_MAX to EPS_MIN

class MAPPOActor(torch.nn.Module):
	def __init__(self, state_size, action_size):
		super().__init__()
		self.norm1 = torch.nn.LayerNorm(ACTOR_HIDDEN)
		self.norm2 = torch.nn.LayerNorm(ACTOR_HIDDEN)
		self.layer1 = torch.nn.Linear(state_size[-1], ACTOR_HIDDEN)
		self.layer2 = torch.nn.Linear(ACTOR_HIDDEN, ACTOR_HIDDEN)
		self.recurrent = torch.nn.GRUCell(ACTOR_HIDDEN, ACTOR_HIDDEN)
		self.attention = MultiheadAttention(ACTOR_HIDDEN, 1, 1)
		self.action_mu = torch.nn.Linear(ACTOR_HIDDEN, action_size[-1])
		self.action_sig = torch.nn.Parameter(torch.zeros(action_size[-1]))
		self.apply(lambda m: torch.nn.init.xavier_normal_(m.weight) if type(m) in [torch.nn.Conv2d, torch.nn.Linear] else None)

	def forward(self, state, action=None, sample=True):
		state = self.layer1(state).relu()
		state = self.layer2(state).relu()
		action_probs = self.action_mu(state).softmax(-1)
		dist = torch.distributions.Categorical(action_probs)
		action_in = dist.sample() if action is None else action.argmax(-1)
		action = one_hot_from_indices(action_in, action_probs.size(-1))
		log_prob = dist.log_prob(action_in)
		entropy = dist.entropy()
		return action, log_prob, entropy

class MAPPONetwork(PTNetwork):
	def __init__(self, state_size, action_size, lr=LEARN_RATE, gpu=True, load=None):
		super().__init__(gpu=gpu, name="mappo")
		self.state_size = state_size
		self.action_size = action_size
		self.critic = lambda s,a: PPOCritic([np.sum([np.prod(s) for s in self.state_size])], [np.sum([np.prod(a) for a in self.action_size])])
		self.models = [PPONetwork(s_size, a_size, MAPPOActor, self.critic, lr=lr/len(state_size), gpu=gpu, load=load) for s_size,a_size in zip(self.state_size, self.action_size)]
		if load: self.load_model(load)

	def get_action_probs(self, state, action_in=None, grad=False, numpy=False, sample=True):
		with torch.enable_grad() if grad else torch.no_grad():
			action_in = [None] * len(state) if action_in is None else action_in
			action_or_entropy, log_prob = map(list, zip(*[model.get_action_probs(s, a, grad=grad, numpy=numpy, sample=sample) for s,a,model in zip(state, action_in, self.models)]))
			return action_or_entropy, log_prob

	def get_value(self, state, grad=False):
		with torch.enable_grad() if grad else torch.no_grad():
			q_value = [model.get_value(state, grad) for model in self.models]
			return q_value

	def optimize(self, states, actions, old_log_probs, targets, advantages, clip_param=CLIP_PARAM, e_weight=EPS_MIN, scale=1):
		stats = []
		states_joint = torch.cat([s.view(*s.size()[:-len(s_size)], np.prod(s_size)) for s,s_size in zip(states, self.state_size)], dim=-1)
		for model, state, action, old_log_prob, target, advantage in zip(self.models, states, actions, old_log_probs, targets, advantages):		
			values = model.get_value(states_joint, grad=True)
			critic_error = values - target.detach()
			critic_loss = critic_error.pow(2)
			model.step(model.critic_optimizer, critic_loss.mean(), model.critic_local.parameters())

			entropy, new_log_prob = model.get_action_probs(state, action, grad=True, numpy=False)
			ratio = (new_log_prob - old_log_prob).exp()
			ratio_clipped = torch.clamp(ratio, 1.0-clip_param, 1.0+clip_param)
			advantage = advantage.view(*advantage.shape, *[1]*(len(ratio.shape)-len(advantage.shape)))
			actor_loss = -(torch.min(ratio*advantage, ratio_clipped*advantage) + e_weight*entropy) * scale
			model.step(model.actor_optimizer, actor_loss.mean(), model.actor_local.parameters())
			stats.append([x.mean().detach().cpu().numpy() for x in [critic_loss, actor_loss, entropy]])
		return np.mean(stats, axis=0)

	def save_model(self, dirname="pytorch", name="checkpoint"):
		[PTACNetwork.save_model(model, self.name, dirname, f"{name}_{i}") for i,model in enumerate(self.models)]
		
	def load_model(self, dirname="pytorch", name="checkpoint"):
		[PTACNetwork.load_model(model, self.name, dirname, f"{name}_{i}") for i,model in enumerate(self.models)]

class MAPPOAgent(PTACAgent):
	def __init__(self, state_size, action_size, lr=LEARN_RATE, update_freq=NUM_STEPS, eps=EPS_MAX, decay=EPS_DECAY, gpu=True, load=None):
		super().__init__(state_size, action_size, MAPPONetwork, lr=lr, update_freq=update_freq, eps=eps, decay=decay, gpu=gpu, load=load)
		self.replay_buffer = MultiagentReplayBuffer2(int(EPISODE_BUFFER*TIME_BUFFER), state_size, action_size)
		self.stats = []

	def get_action(self, state, eps=None, sample=True, numpy=True):
		action, self.log_prob = self.network.get_action_probs(self.to_tensor(state), numpy=True, sample=sample)
		return action

	def train(self, state, action, next_state, reward, done):
		self.buffer.append((state, action, self.log_prob, reward, done))
		if np.any(done[0]) or len(self.buffer) >= TIME_BUFFER:
			states, actions, log_probs, rewards, dones = map(lambda x: self.to_tensor(x), zip(*self.buffer))
			self.buffer.clear()
			states = [torch.cat([s, ns.unsqueeze(0)], dim=0) for s,ns in zip(states, self.to_tensor(next_state))]
			states_joint = torch.cat([s.view(*s.size()[:-len(s_size)], np.prod(s_size)) for s,s_size in zip(states, self.state_size)], dim=-1)
			values = self.network.get_value(states_joint)
			targets, advantages = zip(*[self.compute_gae(value[-1], reward.unsqueeze(-1), done.unsqueeze(-1), value[:-1]) for value,reward,done in zip(values, rewards, dones)])
			states, actions, log_probs, targets, advantages = [[t.reshape(-1,*t.shape[2:]).cpu().numpy() for t in x] for x in [[s[:-1] for s in states], actions, log_probs, targets, advantages]]
			self.replay_buffer.add(states, actions, log_probs, targets, advantages)
		if len(self.replay_buffer) == self.replay_buffer.max_steps:
			stats = []
			for _ in range((len(self.replay_buffer)*PPO_EPOCHS)//BATCH_SIZE):
				states, actions, log_probs, targets, advantages = self.replay_buffer.sample(BATCH_SIZE, device=self.network.device)
				stats.append(self.network.optimize(states, actions, log_probs, targets, advantages, e_weight=self.eps))
			self.eps = max(self.eps * self.decay, EPS_MIN)
			self.stats.append(np.mean(stats, axis=0))
			self.replay_buffer.clear()

	def get_stats(self):
		stats = {k:v for k,v in zip(["critic_loss", "actor_loss", "entropy"], np.mean(self.stats, axis=0))} if len(self.stats)>0 else {}
		self.stats = []
		return {**stats, **super().get_stats()}

REG_LAMBDA = 1e-6             	# Penalty multiplier to apply for the size of the network weights
LEARN_RATE = 0.0003           	# Sets how much we want to update the network weights at each training step
TARGET_UPDATE_RATE = 0.001   	# How frequently we want to copy the local network to the target network (for double DQNs)
INPUT_LAYER = 256				# The number of output nodes from the first layer to Actor and Critic networks
ACTOR_HIDDEN = 256				# The number of nodes in the hidden layers of the Actor network
CRITIC_HIDDEN = 512				# The number of nodes in the hidden layers of the Critic networks
DISCOUNT_RATE = 0.998			# The discount rate to use in the Bellman Equation
NUM_STEPS = 500					# The number of steps to collect experience in sequence for each GAE calculation
EPS_MAX = 1.0                 	# The starting proportion of random to greedy actions to take
EPS_MIN = 0.001               	# The lower limit proportion of random to greedy actions to take
EPS_DECAY = 0.980             	# The rate at which eps decays from EPS_MAX to EPS_MIN
ADVANTAGE_DECAY = 0.95			# The discount factor for the cumulative GAE calculation
MAX_BUFFER_SIZE = 1000000      	# Sets the maximum length of the replay buffer
REPLAY_BATCH_SIZE = 32        	# How many experience tuples to sample from the buffer for each train step

import gym
import argparse
import numpy as np
import particle_envs.make_env as pgym
import football.gfootball.env as ggym
from models.ppo import PPOAgent
from models.sac import SACAgent
from models.ddqn import DDQNAgent
from models.ddpg import DDPGAgent
from models.rand import RandomAgent
from multiagent.coma import COMAAgent
from multiagent.maddpg import MADDPGAgent
from multiagent.mappo import MAPPOAgent
from utils.wrappers import ParallelAgent, DoubleAgent, SelfPlayAgent, ParticleTeamEnv, FootballTeamEnv, TrainEnv
from utils.envs import EnsembleEnv, EnvManager, EnvWorker, MPI_SIZE, MPI_RANK
from utils.misc import Logger, rollout
np.set_printoptions(precision=3, sign=' ', floatmode="fixed")

gym_envs = ["CartPole-v0", "MountainCar-v0", "Acrobot-v1", "Pendulum-v0", "MountainCarContinuous-v0", "CarRacing-v0", "BipedalWalker-v2", "BipedalWalkerHardcore-v2", "LunarLander-v2", "LunarLanderContinuous-v2"]
gfb_envs = ["academy_empty_goal_close", "academy_empty_goal", "academy_run_to_score", "academy_run_to_score_with_keeper", "academy_single_goal_versus_lazy", "academy_3_vs_1_with_keeper", "1_vs_1_easy", "3_vs_3_custom", "5_vs_5", "11_vs_11_stochastic", "test_example_multiagent"]
ptc_envs = ["simple_adversary", "simple_speaker_listener", "simple_tag", "simple_spread", "simple_push"]
env_name = gym_envs[0]
env_name = gfb_envs[-3]
# env_name = ptc_envs[-2]

def make_env(env_name=env_name, log=False, render=False, reward_shape=False):
	if env_name in gym_envs: return TrainEnv(gym.make(env_name))
	if env_name in ptc_envs: return ParticleTeamEnv(pgym.make_env(env_name))
	ballr = lambda x,y: (np.maximum if x>0 else np.minimum)(x - np.abs(y)*np.sign(x), 0.5*x)
	reward_fn = lambda obs,reward: [(ballr(o[0,88], o[0,89]) + o[0,95]-o[0,96] + 2*r)/4 for o,r in zip(obs,reward)]
	return FootballTeamEnv(ggym, env_name, reward_fn if reward_shape else None)

def run(model, steps=10000, ports=16, env_name=env_name, trial_at=10000, save_at=10, checkpoint=True, save_best=False, log=True, render=False, reward_shape=False, icm=False):
	envs = (EnvManager if type(ports) == list or MPI_SIZE > 1 else EnsembleEnv)(lambda: make_env(env_name, reward_shape=reward_shape), ports)
	agent = (DoubleAgent if envs.env.self_play else ParallelAgent)(envs.state_size, envs.action_size, model, envs.num_envs, load="", gpu=True, agent2=RandomAgent, save_dir=env_name, icm=icm) 
	logger = Logger(model, env_name, num_envs=envs.num_envs, state_size=agent.state_size, action_size=envs.action_size, action_space=envs.env.action_space, envs=type(envs), reward_shape=reward_shape, icm=icm)
	states = envs.reset(train=True)
	total_rewards = []
	for s in range(steps):
		env_actions, actions, states = agent.get_env_action(envs.env, states)
		next_states, rewards, dones, _ = envs.step(env_actions, train=True)
		agent.train(states, actions, next_states, rewards, dones)
		states = next_states
		if s%trial_at == 0:
			rollouts = rollout(envs, agent, render=render)
			total_rewards.append(np.mean(rollouts, axis=-1))
			if checkpoint and len(total_rewards) % save_at==0: agent.save_model(env_name, "checkpoint")
			if save_best and np.all(total_rewards[-1] >= np.max(total_rewards, axis=-1)): agent.save_model(env_name)
			if log: logger.log(f"Step: {s:7d}, Reward: {total_rewards[-1]} [{np.std(rollouts):4.3f}], Avg: {np.mean(total_rewards, axis=0)} ({agent.get_stats()})")

def trial(model, env_name, render):
	envs = EnsembleEnv(lambda: make_env(env_name, log=True, render=render), 0)
	agent = (DoubleAgent if envs.env.self_play else ParallelAgent)(envs.state_size, envs.action_size, model, gpu=False, load=f"{env_name}", agent2=RandomAgent, save_dir=env_name)
	print(f"Reward: {np.mean([rollout(envs.env, agent, eps=0.0, render=True) for _ in range(5)], axis=0)}")
	envs.close()

def parse_args():
	parser = argparse.ArgumentParser(description="A3C Trainer")
	parser.add_argument("--workerports", type=int, default=[4], nargs="+", help="The list of worker ports to connect to")
	parser.add_argument("--selfport", type=int, default=None, help="Which port to listen on (as a worker server)")
	parser.add_argument("--model", type=str, default="maddpg", help="Which reinforcement learning algorithm to use")
	parser.add_argument("--steps", type=int, default=100000, help="Number of steps to train the agent")
	parser.add_argument("--reward_shape", action="store_true", help="Whether to shape rewards for football")
	parser.add_argument("--icm", action="store_true", help="Whether to use intrinsic motivation")
	parser.add_argument("--render", action="store_true", help="Whether to render during training")
	parser.add_argument("--trial", action="store_true", help="Whether to show a trial run")
	parser.add_argument("--env", type=str, default="", help="Name of env to use")
	return parser.parse_args()

if __name__ == "__main__":
	args = parse_args()
	env_name = env_name if args.env not in [*gym_envs, *gfb_envs, *ptc_envs] else args.env
	models = {"ddpg":DDPGAgent, "ppo":PPOAgent, "sac":SACAgent, "ddqn":DDQNAgent, "maddpg":MADDPGAgent, "mappo":MAPPOAgent, "coma":COMAAgent, "rand":RandomAgent}
	model = models[args.model] if args.model in models else RandomAgent
	if args.trial:
		trial(model=model, env_name=env_name, render=args.render)
	elif args.selfport is not None or MPI_RANK>0 :
		EnvWorker(self_port=args.selfport, make_env=make_env).start()
	else:
		run(model=model, steps=args.steps, ports=args.workerports[0] if len(args.workerports)==1 else args.workerports, env_name=env_name, render=args.render, reward_shape=args.reward_shape, icm=args.icm)


Step:       0, Reward: [-0.438 -0.438 -0.438 -0.438 -0.438  0.438  0.438  0.438  0.438  0.438] [0.829], Avg: [-0.438 -0.438 -0.438 -0.438 -0.438  0.438  0.438  0.438  0.438  0.438] ({'r_i': '[ 0.130  0.135  0.160  0.164  0.148]', 'r_t': '[ 0.000  0.000  0.000  0.000  0.000]', 'eps': 0.5})
Step:   10000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [0.901], Avg: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'eps': 0.5})
Step:   20000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.901], Avg: [-0.104 -0.104 -0.104 -0.104 -0.104  0.104  0.104  0.104  0.104  0.104] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.312 -0.312 -0.312 -0.312 -0.312]', 'critic_loss': 0.026102953, 'actor_loss': -1.9365336, 'entropy': 2.902688, 'eps': 0.45})
Step:   30000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.791], Avg: [-0.078 -0.078 -0.078 -0.078 -0.078  0.078  0.078  0.078  0.078  0.078] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'critic_loss': 0.056173902, 'actor_loss': -1.7752334, 'entropy': 2.9184635, 'eps': 0.405})
Step:   40000, Reward: [-0.250 -0.250 -0.250 -0.250 -0.250  0.250  0.250  0.250  0.250  0.250] [1.118], Avg: [-0.112 -0.112 -0.112 -0.112 -0.112  0.112  0.112  0.112  0.112  0.112] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'critic_loss': 0.047929753, 'actor_loss': -1.6301918, 'entropy': 2.928258, 'eps': 0.36450000000000005})
Step:   50000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.750], Avg: [-0.042 -0.042 -0.042 -0.042 -0.042  0.042  0.042  0.042  0.042  0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.562 -0.562 -0.562 -0.562 -0.562]', 'critic_loss': 0.047668744, 'actor_loss': -1.4936033, 'entropy': 2.9354372, 'eps': 0.32805000000000006})
Step:   60000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.031], Avg: [-0.080 -0.080 -0.080 -0.080 -0.080  0.080  0.080  0.080  0.080  0.080] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.250 -0.250 -0.250 -0.250 -0.250]', 'critic_loss': 0.0491422, 'actor_loss': -1.3709458, 'entropy': 2.9391432, 'eps': 0.2952450000000001})
Step:   70000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [1.090], Avg: [-0.016 -0.016 -0.016 -0.016 -0.016  0.016  0.016  0.016  0.016  0.016] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.250  0.250  0.250  0.250  0.250]', 'eps': 0.2952450000000001})
Step:   80000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.458], Avg: [-0.014 -0.014 -0.014 -0.014 -0.014  0.014  0.014  0.014  0.014  0.014] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.050659303, 'actor_loss': -1.2566355, 'entropy': 2.9411898, 'eps': 0.2657205000000001})
Step:   90000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.866], Avg: [-0.013 -0.013 -0.013 -0.013 -0.013  0.013  0.013  0.013  0.013  0.013] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.250 -0.250 -0.250 -0.250 -0.250]', 'critic_loss': 0.05858338, 'actor_loss': -1.15103, 'entropy': 2.9420874, 'eps': 0.23914845000000007})
Step:  100000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.750], Avg: [-0.017 -0.017 -0.017 -0.017 -0.017  0.017  0.017  0.017  0.017  0.017] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.750 -0.750 -0.750 -0.750 -0.750]', 'critic_loss': 0.059656158, 'actor_loss': -1.0532265, 'entropy': 2.942487, 'eps': 0.21523360500000008})
Step:  110000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.146], Avg: [-0.042 -0.042 -0.042 -0.042 -0.042  0.042  0.042  0.042  0.042  0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.375 -0.375 -0.375 -0.375 -0.375]', 'critic_loss': 0.07071088, 'actor_loss': -0.96632695, 'entropy': 2.9427373, 'eps': 0.19371024450000007})
Step:  120000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.118], Avg: [-0.019 -0.019 -0.019 -0.019 -0.019  0.019  0.019  0.019  0.019  0.019] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.250  0.250  0.250  0.250  0.250]', 'critic_loss': 0.07434789, 'actor_loss': -0.88794225, 'entropy': 2.9427946, 'eps': 0.17433922005000008})
Step:  130000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.146], Avg: [-0.031 -0.031 -0.031 -0.031 -0.031  0.031  0.031  0.031  0.031  0.031] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.750  0.750  0.750  0.750  0.750]', 'eps': 0.17433922005000008})
Step:  140000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.090], Avg: [-0.042 -0.042 -0.042 -0.042 -0.042  0.042  0.042  0.042  0.042  0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.000  0.000  0.000  0.000  0.000]', 'critic_loss': 0.08560258, 'actor_loss': -0.8158658, 'entropy': 2.9428701, 'eps': 0.15690529804500009})
Step:  150000, Reward: [-0.250 -0.250 -0.250 -0.250 -0.250  0.250  0.250  0.250  0.250  0.250] [0.791], Avg: [-0.055 -0.055 -0.055 -0.055 -0.055  0.055  0.055  0.055  0.055  0.055] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.688  0.688  0.688  0.688  0.688]', 'critic_loss': 0.093620785, 'actor_loss': -0.7484079, 'entropy': 2.9428918, 'eps': 0.14121476824050008})
Step:  160000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.768], Avg: [-0.015 -0.015 -0.015 -0.015 -0.015  0.015  0.015  0.015  0.015  0.015] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.125 -0.125 -0.125 -0.125 -0.125]', 'critic_loss': 0.10096107, 'actor_loss': -0.68769735, 'entropy': 2.9429724, 'eps': 0.12709329141645007})
Step:  170000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.346], Avg: [-0.003 -0.003 -0.003 -0.003 -0.003  0.003  0.003  0.003  0.003  0.003] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.812  0.812  0.812  0.812  0.812]', 'critic_loss': 0.10826802, 'actor_loss': -0.6344728, 'entropy': 2.942937, 'eps': 0.11438396227480506})
Step:  180000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.061], Avg: [-0.003 -0.003 -0.003 -0.003 -0.003  0.003  0.003  0.003  0.003  0.003] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.375 -0.375 -0.375 -0.375 -0.375]', 'critic_loss': 0.114981435, 'actor_loss': -0.5846113, 'entropy': 2.9429033, 'eps': 0.10294556604732455})
Step:  190000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [1.323], Avg: [ 0.016  0.016  0.016  0.016  0.016 -0.016 -0.016 -0.016 -0.016 -0.016] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.500 -0.500 -0.500 -0.500 -0.500]', 'eps': 0.10294556604732455})
Step:  200000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.968], Avg: [ 0.036  0.036  0.036  0.036  0.036 -0.036 -0.036 -0.036 -0.036 -0.036] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.000  0.000  0.000  0.000  0.000]', 'critic_loss': 0.12487123, 'actor_loss': -0.53975147, 'entropy': 2.9428174, 'eps': 0.0926510094425921})
Step:  210000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.118], Avg: [ 0.040  0.040  0.040  0.040  0.040 -0.040 -0.040 -0.040 -0.040 -0.040] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.125 -0.125 -0.125 -0.125 -0.125]', 'critic_loss': 0.1326479, 'actor_loss': -0.5001021, 'entropy': 2.9428215, 'eps': 0.08338590849833288})
Step:  220000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.479], Avg: [ 0.024  0.024  0.024  0.024  0.024 -0.024 -0.024 -0.024 -0.024 -0.024] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.125 -0.125 -0.125 -0.125 -0.125]', 'critic_loss': 0.13648766, 'actor_loss': -0.4630572, 'entropy': 2.9427347, 'eps': 0.0750473176484996})
Step:  230000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.323], Avg: [ 0.023  0.023  0.023  0.023  0.023 -0.023 -0.023 -0.023 -0.023 -0.023] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.14344837, 'actor_loss': -0.4290143, 'entropy': 2.942646, 'eps': 0.06754258588364964})
Step:  240000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.038  0.038  0.038  0.038  0.038 -0.038 -0.038 -0.038 -0.038 -0.038] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.14822567, 'actor_loss': -0.39849553, 'entropy': 2.942517, 'eps': 0.06078832729528468})
Step:  250000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.199], Avg: [ 0.024  0.024  0.024  0.024  0.024 -0.024 -0.024 -0.024 -0.024 -0.024] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'eps': 0.06078832729528468})
Step:  260000, Reward: [-0.375 -0.375 -0.375 -0.375 -0.375  0.375  0.375  0.375  0.375  0.375] [1.732], Avg: [ 0.009  0.009  0.009  0.009  0.009 -0.009 -0.009 -0.009 -0.009 -0.009] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.125 -0.125 -0.125 -0.125 -0.125]', 'critic_loss': 0.156617, 'actor_loss': -0.37013027, 'entropy': 2.9423978, 'eps': 0.05470949456575622})
Step:  270000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.000], Avg: [ 0.013  0.013  0.013  0.013  0.013 -0.013 -0.013 -0.013 -0.013 -0.013] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.000  1.000  1.000  1.000  1.000]', 'critic_loss': 0.16367577, 'actor_loss': -0.34516704, 'entropy': 2.9422543, 'eps': 0.0492385451091806})
Step:  280000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.559], Avg: [ 0.011  0.011  0.011  0.011  0.011 -0.011 -0.011 -0.011 -0.011 -0.011] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.500  0.500  0.500  0.500  0.500]', 'critic_loss': 0.16847537, 'actor_loss': -0.32146618, 'entropy': 2.942104, 'eps': 0.04431469059826254})
Step:  290000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.061], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.17483093, 'actor_loss': -0.2979255, 'entropy': 2.942085, 'eps': 0.039883221538436285})
Step:  300000, Reward: [-0.500 -0.500 -0.500 -0.500 -0.500  0.500  0.500  0.500  0.500  0.500] [1.118], Avg: [-0.006 -0.006 -0.006 -0.006 -0.006  0.006  0.006  0.006  0.006  0.006] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.500 -0.500 -0.500 -0.500 -0.500]', 'critic_loss': 0.18762189, 'actor_loss': -0.27461705, 'entropy': 2.9420836, 'eps': 0.03589489938459266})
Step:  310000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.581], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'eps': 0.03589489938459266})
Step:  320000, Reward: [-0.438 -0.438 -0.438 -0.438 -0.438  0.438  0.438  0.438  0.438  0.438] [0.968], Avg: [-0.004 -0.004 -0.004 -0.004 -0.004  0.004  0.004  0.004  0.004  0.004] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.250 -0.250 -0.250 -0.250 -0.250]', 'critic_loss': 0.19337668, 'actor_loss': -0.25718883, 'entropy': 2.9419773, 'eps': 0.032305409446133394})
Step:  330000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.173], Avg: [-0.004 -0.004 -0.004 -0.004 -0.004  0.004  0.004  0.004  0.004  0.004] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.750 -0.750 -0.750 -0.750 -0.750]', 'critic_loss': 0.20227046, 'actor_loss': -0.23754497, 'entropy': 2.9414072, 'eps': 0.029074868501520055})
Step:  340000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [1.000], Avg: [ 0.007  0.007  0.007  0.007  0.007 -0.007 -0.007 -0.007 -0.007 -0.007] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.125  1.125  1.125  1.125  1.125]', 'critic_loss': 0.20849197, 'actor_loss': -0.2236978, 'entropy': 2.9410975, 'eps': 0.02616738165136805})
Step:  350000, Reward: [-0.500 -0.500 -0.500 -0.500 -0.500  0.500  0.500  0.500  0.500  0.500] [1.323], Avg: [-0.007 -0.007 -0.007 -0.007 -0.007  0.007  0.007  0.007  0.007  0.007] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.2112, 'actor_loss': -0.20991309, 'entropy': 2.9409435, 'eps': 0.023550643486231246})
Step:  360000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.414], Avg: [-0.003 -0.003 -0.003 -0.003 -0.003  0.003  0.003  0.003  0.003  0.003] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.21480493, 'actor_loss': -0.19775082, 'entropy': 2.940396, 'eps': 0.021195579137608122})
Step:  370000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.414], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.500 -0.500 -0.500 -0.500 -0.500]', 'eps': 0.021195579137608122})
Step:  380000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.829], Avg: [ 0.018  0.018  0.018  0.018  0.018 -0.018 -0.018 -0.018 -0.018 -0.018] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.562 -0.562 -0.562 -0.562 -0.562]', 'critic_loss': 0.2208895, 'actor_loss': -0.18441308, 'entropy': 2.9400918, 'eps': 0.01907602122384731})
Step:  390000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.225], Avg: [ 0.014  0.014  0.014  0.014  0.014 -0.014 -0.014 -0.014 -0.014 -0.014] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.22437072, 'actor_loss': -0.17404474, 'entropy': 2.9399192, 'eps': 0.01716841910146258})
Step:  400000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.866], Avg: [ 0.014  0.014  0.014  0.014  0.014 -0.014 -0.014 -0.014 -0.014 -0.014] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.062 -0.062 -0.062 -0.062 -0.062]', 'critic_loss': 0.22949862, 'actor_loss': -0.16299121, 'entropy': 2.939785, 'eps': 0.015451577191316321})
Step:  410000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [0.829], Avg: [ 0.006  0.006  0.006  0.006  0.006 -0.006 -0.006 -0.006 -0.006 -0.006] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'critic_loss': 0.23689355, 'actor_loss': -0.15312058, 'entropy': 2.9397266, 'eps': 0.01390641947218469})
Step:  420000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.829], Avg: [ 0.007  0.007  0.007  0.007  0.007 -0.007 -0.007 -0.007 -0.007 -0.007] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.250  0.250  0.250  0.250  0.250]', 'critic_loss': 0.24755436, 'actor_loss': -0.14233224, 'entropy': 2.9396622, 'eps': 0.012515777524966222})
Step:  430000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.392], Avg: [ 0.023  0.023  0.023  0.023  0.023 -0.023 -0.023 -0.023 -0.023 -0.023] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.688  0.688  0.688  0.688  0.688]', 'eps': 0.012515777524966222})
Step:  440000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [1.090], Avg: [ 0.032  0.032  0.032  0.032  0.032 -0.032 -0.032 -0.032 -0.032 -0.032] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.562  0.562  0.562  0.562  0.562]', 'critic_loss': 0.2430773, 'actor_loss': -0.13633288, 'entropy': 2.939204, 'eps': 0.0112641997724696})
Step:  450000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.061], Avg: [ 0.029  0.029  0.029  0.029  0.029 -0.029 -0.029 -0.029 -0.029 -0.029] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-1.438 -1.438 -1.438 -1.438 -1.438]', 'critic_loss': 0.253183, 'actor_loss': -0.12657541, 'entropy': 2.938469, 'eps': 0.010137779795222639})
Step:  460000, Reward: [-0.688 -0.688 -0.688 -0.688 -0.688  0.688  0.688  0.688  0.688  0.688] [1.031], Avg: [ 0.013  0.013  0.013  0.013  0.013 -0.013 -0.013 -0.013 -0.013 -0.013] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.25511563, 'actor_loss': -0.11848899, 'entropy': 2.9373538, 'eps': 0.009124001815700375})
Step:  470000, Reward: [-0.250 -0.250 -0.250 -0.250 -0.250  0.250  0.250  0.250  0.250  0.250] [1.061], Avg: [ 0.008  0.008  0.008  0.008  0.008 -0.008 -0.008 -0.008 -0.008 -0.008] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.000  1.000  1.000  1.000  1.000]', 'critic_loss': 0.2577471, 'actor_loss': -0.11367541, 'entropy': 2.9370003, 'eps': 0.008211601634130337})
Step:  480000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [1.199], Avg: [ 0.017  0.017  0.017  0.017  0.017 -0.017 -0.017 -0.017 -0.017 -0.017] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.062 -0.062 -0.062 -0.062 -0.062]', 'critic_loss': 0.26258075, 'actor_loss': -0.10751442, 'entropy': 2.9369962, 'eps': 0.007390441470717304})
Step:  490000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [1.199], Avg: [ 0.015  0.015  0.015  0.015  0.015 -0.015 -0.015 -0.015 -0.015 -0.015] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.625 -0.625 -0.625 -0.625 -0.625]', 'eps': 0.007390441470717304})
Step:  500000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.022  0.022  0.022  0.022  0.022 -0.022 -0.022 -0.022 -0.022 -0.022] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.250  0.250  0.250  0.250  0.250]', 'critic_loss': 0.26524284, 'actor_loss': -0.101740174, 'entropy': 2.9363823, 'eps': 0.006651397323645574})
Step:  510000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.090], Avg: [ 0.018  0.018  0.018  0.018  0.018 -0.018 -0.018 -0.018 -0.018 -0.018] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'critic_loss': 0.271457, 'actor_loss': -0.09794244, 'entropy': 2.9354465, 'eps': 0.005986257591281016})
Step:  520000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [0.559], Avg: [ 0.014  0.014  0.014  0.014  0.014 -0.014 -0.014 -0.014 -0.014 -0.014] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.27172932, 'actor_loss': -0.09094069, 'entropy': 2.9348109, 'eps': 0.005387631832152915})
Step:  530000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.000], Avg: [ 0.016  0.016  0.016  0.016  0.016 -0.016 -0.016 -0.016 -0.016 -0.016] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.562  0.562  0.562  0.562  0.562]', 'critic_loss': 0.28373113, 'actor_loss': -0.0888882, 'entropy': 2.9339523, 'eps': 0.004848868648937623})
Step:  540000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.323], Avg: [ 0.020  0.020  0.020  0.020  0.020 -0.020 -0.020 -0.020 -0.020 -0.020] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.000  0.000  0.000  0.000  0.000]', 'critic_loss': 0.28059193, 'actor_loss': -0.08351352, 'entropy': 2.9328492, 'eps': 0.004363981784043861})
Step:  550000, Reward: [-0.625 -0.625 -0.625 -0.625 -0.625  0.625  0.625  0.625  0.625  0.625] [1.118], Avg: [ 0.009  0.009  0.009  0.009  0.009 -0.009 -0.009 -0.009 -0.009 -0.009] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.250 -0.250 -0.250 -0.250 -0.250]', 'eps': 0.004363981784043861})
Step:  560000, Reward: [-0.562 -0.562 -0.562 -0.562 -0.562  0.562  0.562  0.562  0.562  0.562] [1.090], Avg: [-0.001 -0.001 -0.001 -0.001 -0.001  0.001  0.001  0.001  0.001  0.001] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.28677505, 'actor_loss': -0.07987582, 'entropy': 2.932477, 'eps': 0.003927583605639475})
Step:  570000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.299], Avg: [-0.006 -0.006 -0.006 -0.006 -0.006  0.006  0.006  0.006  0.006  0.006] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.562 -0.562 -0.562 -0.562 -0.562]', 'critic_loss': 0.28508803, 'actor_loss': -0.07834647, 'entropy': 2.9327986, 'eps': 0.0035348252450755277})
Step:  580000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.436], Avg: [-0.001 -0.001 -0.001 -0.001 -0.001  0.001  0.001  0.001  0.001  0.001] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.28946808, 'actor_loss': -0.07274967, 'entropy': 2.9312637, 'eps': 0.003181342720567975})
Step:  590000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.146], Avg: [ 0.004  0.004  0.004  0.004  0.004 -0.004 -0.004 -0.004 -0.004 -0.004] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.500 -0.500 -0.500 -0.500 -0.500]', 'critic_loss': 0.29255983, 'actor_loss': -0.06964701, 'entropy': 2.9319088, 'eps': 0.0028632084485111773})
Step:  600000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.829], Avg: [ 0.005  0.005  0.005  0.005  0.005 -0.005 -0.005 -0.005 -0.005 -0.005] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.562 -0.562 -0.562 -0.562 -0.562]', 'critic_loss': 0.2917976, 'actor_loss': -0.06848944, 'entropy': 2.9320714, 'eps': 0.00257688760366006})
Step:  610000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.031], Avg: [ 0.006  0.006  0.006  0.006  0.006 -0.006 -0.006 -0.006 -0.006 -0.006] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.688  0.688  0.688  0.688  0.688]', 'eps': 0.00257688760366006})
Step:  620000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.090], Avg: [ 0.009  0.009  0.009  0.009  0.009 -0.009 -0.009 -0.009 -0.009 -0.009] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.375  0.375  0.375  0.375  0.375]', 'critic_loss': 0.28821263, 'actor_loss': -0.069300465, 'entropy': 2.9326394, 'eps': 0.0023191988432940537})
Step:  630000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.968], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.29657617, 'actor_loss': -0.06438289, 'entropy': 2.9311821, 'eps': 0.0020872789589646483})
Step:  640000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.118], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.29510638, 'actor_loss': -0.06279284, 'entropy': 2.9296005, 'eps': 0.0018785510630681835})
Step:  650000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.829], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.688 -0.688 -0.688 -0.688 -0.688]', 'critic_loss': 0.30151394, 'actor_loss': -0.059001252, 'entropy': 2.9290893, 'eps': 0.001690695956761365})
Step:  660000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.436], Avg: [ 0.013  0.013  0.013  0.013  0.013 -0.013 -0.013 -0.013 -0.013 -0.013] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.3066362, 'actor_loss': -0.058952287, 'entropy': 2.929394, 'eps': 0.0015216263610852287})
Step:  670000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.031], Avg: [ 0.008  0.008  0.008  0.008  0.008 -0.008 -0.008 -0.008 -0.008 -0.008] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.625  0.625  0.625  0.625  0.625]', 'eps': 0.0015216263610852287})
Step:  680000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.935], Avg: [ 0.014  0.014  0.014  0.014  0.014 -0.014 -0.014 -0.014 -0.014 -0.014] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.562 -0.562 -0.562 -0.562 -0.562]', 'critic_loss': 0.2972496, 'actor_loss': -0.05999745, 'entropy': 2.9295146, 'eps': 0.0013694637249767059})
Step:  690000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.173], Avg: [ 0.021  0.021  0.021  0.021  0.021 -0.021 -0.021 -0.021 -0.021 -0.021] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.438 -0.438 -0.438 -0.438 -0.438]', 'critic_loss': 0.30732056, 'actor_loss': -0.05534563, 'entropy': 2.9290087, 'eps': 0.0012325173524790354})
Step:  700000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.612], Avg: [ 0.020  0.020  0.020  0.020  0.020 -0.020 -0.020 -0.020 -0.020 -0.020] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.375  0.375  0.375  0.375  0.375]', 'critic_loss': 0.31019458, 'actor_loss': -0.05509354, 'entropy': 2.9281728, 'eps': 0.0011092656172311318})
Step:  710000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.225], Avg: [ 0.027  0.027  0.027  0.027  0.027 -0.027 -0.027 -0.027 -0.027 -0.027] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.625  0.625  0.625  0.625  0.625]', 'critic_loss': 0.29927632, 'actor_loss': -0.056950163, 'entropy': 2.9277756, 'eps': 0.001})
Step:  720000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [1.436], Avg: [ 0.026  0.026  0.026  0.026  0.026 -0.026 -0.026 -0.026 -0.026 -0.026] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.125 -0.125 -0.125 -0.125 -0.125]', 'critic_loss': 0.305126, 'actor_loss': -0.05477817, 'entropy': 2.926818, 'eps': 0.001})
Step:  730000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.090], Avg: [ 0.023  0.023  0.023  0.023  0.023 -0.023 -0.023 -0.023 -0.023 -0.023] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'eps': 0.001})
Step:  740000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [0.935], Avg: [ 0.021  0.021  0.021  0.021  0.021 -0.021 -0.021 -0.021 -0.021 -0.021] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.688  0.688  0.688  0.688  0.688]', 'critic_loss': 0.3042681, 'actor_loss': -0.053811193, 'entropy': 2.9259121, 'eps': 0.001})
Step:  750000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.707], Avg: [ 0.022  0.022  0.022  0.022  0.022 -0.022 -0.022 -0.022 -0.022 -0.022] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.062  1.062  1.062  1.062  1.062]', 'critic_loss': 0.30521908, 'actor_loss': -0.05493404, 'entropy': 2.9250584, 'eps': 0.001})
Step:  760000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.250], Avg: [ 0.032  0.032  0.032  0.032  0.032 -0.032 -0.032 -0.032 -0.032 -0.032] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.312 -0.312 -0.312 -0.312 -0.312]', 'critic_loss': 0.307242, 'actor_loss': -0.05349666, 'entropy': 2.9245784, 'eps': 0.001})
Step:  770000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.968], Avg: [ 0.033  0.033  0.033  0.033  0.033 -0.033 -0.033 -0.033 -0.033 -0.033] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.750  0.750  0.750  0.750  0.750]', 'critic_loss': 0.30233026, 'actor_loss': -0.054222282, 'entropy': 2.9261284, 'eps': 0.001})
Step:  780000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.031], Avg: [ 0.030  0.030  0.030  0.030  0.030 -0.030 -0.030 -0.030 -0.030 -0.030] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.30561158, 'actor_loss': -0.054001346, 'entropy': 2.924964, 'eps': 0.001})
Step:  790000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [0.829], Avg: [ 0.027  0.027  0.027  0.027  0.027 -0.027 -0.027 -0.027 -0.027 -0.027] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'eps': 0.001})
Step:  800000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.968], Avg: [ 0.029  0.029  0.029  0.029  0.029 -0.029 -0.029 -0.029 -0.029 -0.029] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.30703664, 'actor_loss': -0.05284411, 'entropy': 2.923693, 'eps': 0.001})
Step:  810000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [0.661], Avg: [ 0.025  0.025  0.025  0.025  0.025 -0.025 -0.025 -0.025 -0.025 -0.025] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.375 -0.375 -0.375 -0.375 -0.375]', 'critic_loss': 0.30806622, 'actor_loss': -0.05220053, 'entropy': 2.9232264, 'eps': 0.001})
Step:  820000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.000], Avg: [ 0.023  0.023  0.023  0.023  0.023 -0.023 -0.023 -0.023 -0.023 -0.023] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.125 -0.125 -0.125 -0.125 -0.125]', 'critic_loss': 0.29826942, 'actor_loss': -0.051752526, 'entropy': 2.9219027, 'eps': 0.001})
Step:  830000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.118], Avg: [ 0.022  0.022  0.022  0.022  0.022 -0.022 -0.022 -0.022 -0.022 -0.022] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.000  0.000  0.000  0.000  0.000]', 'critic_loss': 0.30551866, 'actor_loss': -0.051795494, 'entropy': 2.9179127, 'eps': 0.001})
Step:  840000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.785], Avg: [ 0.018  0.018  0.018  0.018  0.018 -0.018 -0.018 -0.018 -0.018 -0.018] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.30504942, 'actor_loss': -0.051588695, 'entropy': 2.9152572, 'eps': 0.001})
Step:  850000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [0.968], Avg: [ 0.015  0.015  0.015  0.015  0.015 -0.015 -0.015 -0.015 -0.015 -0.015] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.625  0.625  0.625  0.625  0.625]', 'eps': 0.001})
Step:  860000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.791], Avg: [ 0.015  0.015  0.015  0.015  0.015 -0.015 -0.015 -0.015 -0.015 -0.015] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-1.000 -1.000 -1.000 -1.000 -1.000]', 'critic_loss': 0.31034678, 'actor_loss': -0.050831858, 'entropy': 2.915233, 'eps': 0.001})
Step:  870000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.901], Avg: [ 0.016  0.016  0.016  0.016  0.016 -0.016 -0.016 -0.016 -0.016 -0.016] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.500 -0.500 -0.500 -0.500 -0.500]', 'critic_loss': 0.306608, 'actor_loss': -0.049751658, 'entropy': 2.9171495, 'eps': 0.001})
Step:  880000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.901], Avg: [ 0.015  0.015  0.015  0.015  0.015 -0.015 -0.015 -0.015 -0.015 -0.015] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.938 -0.938 -0.938 -0.938 -0.938]', 'critic_loss': 0.30927107, 'actor_loss': -0.048188906, 'entropy': 2.9162033, 'eps': 0.001})
Step:  890000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [0.791], Avg: [ 0.013  0.013  0.013  0.013  0.013 -0.013 -0.013 -0.013 -0.013 -0.013] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.750  0.750  0.750  0.750  0.750]', 'critic_loss': 0.3115288, 'actor_loss': -0.050115127, 'entropy': 2.916422, 'eps': 0.001})
Step:  900000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.017  0.017  0.017  0.017  0.017 -0.017 -0.017 -0.017 -0.017 -0.017] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.938 -0.938 -0.938 -0.938 -0.938]', 'critic_loss': 0.3046966, 'actor_loss': -0.047878254, 'entropy': 2.91592, 'eps': 0.001})
Step:  910000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.275], Avg: [ 0.017  0.017  0.017  0.017  0.017 -0.017 -0.017 -0.017 -0.017 -0.017] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.625 -0.625 -0.625 -0.625 -0.625]', 'eps': 0.001})
Step:  920000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.968], Avg: [ 0.016  0.016  0.016  0.016  0.016 -0.016 -0.016 -0.016 -0.016 -0.016] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.30870238, 'actor_loss': -0.047806587, 'entropy': 2.9166338, 'eps': 0.001})
Step:  930000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.436], Avg: [ 0.013  0.013  0.013  0.013  0.013 -0.013 -0.013 -0.013 -0.013 -0.013] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.625 -0.625 -0.625 -0.625 -0.625]', 'critic_loss': 0.3098774, 'actor_loss': -0.04813203, 'entropy': 2.9172554, 'eps': 0.001})
Step:  940000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [0.791], Avg: [ 0.011  0.011  0.011  0.011  0.011 -0.011 -0.011 -0.011 -0.011 -0.011] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.062 -0.062 -0.062 -0.062 -0.062]', 'critic_loss': 0.3164886, 'actor_loss': -0.04488781, 'entropy': 2.9137657, 'eps': 0.001})
Step:  950000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.000], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'critic_loss': 0.31634966, 'actor_loss': -0.04649781, 'entropy': 2.9125688, 'eps': 0.001})
Step:  960000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [0.829], Avg: [ 0.008  0.008  0.008  0.008  0.008 -0.008 -0.008 -0.008 -0.008 -0.008] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.500  0.500  0.500  0.500  0.500]', 'critic_loss': 0.31530917, 'actor_loss': -0.04752006, 'entropy': 2.9118001, 'eps': 0.001})
Step:  970000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.562  0.562  0.562  0.562  0.562]', 'eps': 0.001})
Step:  980000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.791], Avg: [ 0.010  0.010  0.010  0.010  0.010 -0.010 -0.010 -0.010 -0.010 -0.010] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'critic_loss': 0.3161044, 'actor_loss': -0.0461271, 'entropy': 2.9106255, 'eps': 0.001})
Step:  990000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.118], Avg: [ 0.009  0.009  0.009  0.009  0.009 -0.009 -0.009 -0.009 -0.009 -0.009] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.32428357, 'actor_loss': -0.044331465, 'entropy': 2.907945, 'eps': 0.001})
Step: 1000000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.750], Avg: [ 0.009  0.009  0.009  0.009  0.009 -0.009 -0.009 -0.009 -0.009 -0.009] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.625  0.625  0.625  0.625  0.625]', 'critic_loss': 0.30631122, 'actor_loss': -0.04631059, 'entropy': 2.9104211, 'eps': 0.001})
Step: 1010000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.750], Avg: [ 0.012  0.012  0.012  0.012  0.012 -0.012 -0.012 -0.012 -0.012 -0.012] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.3221854, 'actor_loss': -0.045824025, 'entropy': 2.912948, 'eps': 0.001})
Step: 1020000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.346], Avg: [ 0.013  0.013  0.013  0.013  0.013 -0.013 -0.013 -0.013 -0.013 -0.013] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'critic_loss': 0.30776665, 'actor_loss': -0.046174716, 'entropy': 2.9139621, 'eps': 0.001})
Step: 1030000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.968], Avg: [ 0.013  0.013  0.013  0.013  0.013 -0.013 -0.013 -0.013 -0.013 -0.013] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'eps': 0.001})
Step: 1040000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.346], Avg: [ 0.015  0.015  0.015  0.015  0.015 -0.015 -0.015 -0.015 -0.015 -0.015] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.625  0.625  0.625  0.625  0.625]', 'critic_loss': 0.3143665, 'actor_loss': -0.045061305, 'entropy': 2.913345, 'eps': 0.001})
Step: 1050000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.935], Avg: [ 0.015  0.015  0.015  0.015  0.015 -0.015 -0.015 -0.015 -0.015 -0.015] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.062 -0.062 -0.062 -0.062 -0.062]', 'critic_loss': 0.3182672, 'actor_loss': -0.044639174, 'entropy': 2.91576, 'eps': 0.001})
Step: 1060000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.017  0.017  0.017  0.017  0.017 -0.017 -0.017 -0.017 -0.017 -0.017] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.625  0.625  0.625  0.625  0.625]', 'critic_loss': 0.3150654, 'actor_loss': -0.046042424, 'entropy': 2.915762, 'eps': 0.001})
Step: 1070000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.901], Avg: [ 0.017  0.017  0.017  0.017  0.017 -0.017 -0.017 -0.017 -0.017 -0.017] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.688 -0.688 -0.688 -0.688 -0.688]', 'critic_loss': 0.31560573, 'actor_loss': -0.043633744, 'entropy': 2.9180698, 'eps': 0.001})
Step: 1080000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.225], Avg: [ 0.019  0.019  0.019  0.019  0.019 -0.019 -0.019 -0.019 -0.019 -0.019] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.000  0.000  0.000  0.000  0.000]', 'critic_loss': 0.3165978, 'actor_loss': -0.043204587, 'entropy': 2.9172423, 'eps': 0.001})
Step: 1090000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [0.866], Avg: [ 0.018  0.018  0.018  0.018  0.018 -0.018 -0.018 -0.018 -0.018 -0.018] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'eps': 0.001})
Step: 1100000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.661], Avg: [ 0.019  0.019  0.019  0.019  0.019 -0.019 -0.019 -0.019 -0.019 -0.019] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.250 -0.250 -0.250 -0.250 -0.250]', 'critic_loss': 0.31505153, 'actor_loss': -0.042937208, 'entropy': 2.9160435, 'eps': 0.001})
Step: 1110000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.031], Avg: [ 0.020  0.020  0.020  0.020  0.020 -0.020 -0.020 -0.020 -0.020 -0.020] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.000  0.000  0.000  0.000  0.000]', 'critic_loss': 0.32041466, 'actor_loss': -0.042309154, 'entropy': 2.9147575, 'eps': 0.001})
Step: 1120000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.299], Avg: [ 0.017  0.017  0.017  0.017  0.017 -0.017 -0.017 -0.017 -0.017 -0.017] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.750  0.750  0.750  0.750  0.750]', 'critic_loss': 0.31748, 'actor_loss': -0.042075824, 'entropy': 2.91265, 'eps': 0.001})
Step: 1130000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [1.225], Avg: [ 0.020  0.020  0.020  0.020  0.020 -0.020 -0.020 -0.020 -0.020 -0.020] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.32491866, 'actor_loss': -0.04204905, 'entropy': 2.9121246, 'eps': 0.001})
Step: 1140000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.935], Avg: [ 0.020  0.020  0.020  0.020  0.020 -0.020 -0.020 -0.020 -0.020 -0.020] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'critic_loss': 0.3189826, 'actor_loss': -0.041289087, 'entropy': 2.910574, 'eps': 0.001})
Step: 1150000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.031], Avg: [ 0.018  0.018  0.018  0.018  0.018 -0.018 -0.018 -0.018 -0.018 -0.018] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.312 -0.312 -0.312 -0.312 -0.312]', 'eps': 0.001})
Step: 1160000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.968], Avg: [ 0.019  0.019  0.019  0.019  0.019 -0.019 -0.019 -0.019 -0.019 -0.019] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.500  0.500  0.500  0.500  0.500]', 'critic_loss': 0.31852162, 'actor_loss': -0.040584926, 'entropy': 2.9121053, 'eps': 0.001})
Step: 1170000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.829], Avg: [ 0.018  0.018  0.018  0.018  0.018 -0.018 -0.018 -0.018 -0.018 -0.018] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.062 -0.062 -0.062 -0.062 -0.062]', 'critic_loss': 0.33326384, 'actor_loss': -0.0374219, 'entropy': 2.913634, 'eps': 0.001})
Step: 1180000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.791], Avg: [ 0.019  0.019  0.019  0.019  0.019 -0.019 -0.019 -0.019 -0.019 -0.019] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.250  0.250  0.250  0.250  0.250]', 'critic_loss': 0.32630226, 'actor_loss': -0.03650655, 'entropy': 2.9126594, 'eps': 0.001})
Step: 1190000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [0.829], Avg: [ 0.016  0.016  0.016  0.016  0.016 -0.016 -0.016 -0.016 -0.016 -0.016] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.312 -0.312 -0.312 -0.312 -0.312]', 'critic_loss': 0.32578573, 'actor_loss': -0.03683572, 'entropy': 2.9107673, 'eps': 0.001})
Step: 1200000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.968], Avg: [ 0.020  0.020  0.020  0.020  0.020 -0.020 -0.020 -0.020 -0.020 -0.020] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.625  0.625  0.625  0.625  0.625]', 'critic_loss': 0.3239577, 'actor_loss': -0.037563246, 'entropy': 2.9110882, 'eps': 0.001})
Step: 1210000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.118], Avg: [ 0.018  0.018  0.018  0.018  0.018 -0.018 -0.018 -0.018 -0.018 -0.018] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'eps': 0.001})
Step: 1220000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.968], Avg: [ 0.022  0.022  0.022  0.022  0.022 -0.022 -0.022 -0.022 -0.022 -0.022] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.3213869, 'actor_loss': -0.0369222, 'entropy': 2.9133835, 'eps': 0.001})
Step: 1230000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.968], Avg: [ 0.022  0.022  0.022  0.022  0.022 -0.022 -0.022 -0.022 -0.022 -0.022] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.32736984, 'actor_loss': -0.03494714, 'entropy': 2.9128513, 'eps': 0.001})
Step: 1240000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.000], Avg: [ 0.021  0.021  0.021  0.021  0.021 -0.021 -0.021 -0.021 -0.021 -0.021] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.125 -0.125 -0.125 -0.125 -0.125]', 'critic_loss': 0.32914793, 'actor_loss': -0.032811332, 'entropy': 2.9081078, 'eps': 0.001})
Step: 1250000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.031], Avg: [ 0.022  0.022  0.022  0.022  0.022 -0.022 -0.022 -0.022 -0.022 -0.022] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.32677862, 'actor_loss': -0.033085056, 'entropy': 2.904424, 'eps': 0.001})
Step: 1260000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.031], Avg: [ 0.021  0.021  0.021  0.021  0.021 -0.021 -0.021 -0.021 -0.021 -0.021] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.3329822, 'actor_loss': -0.032824084, 'entropy': 2.9056013, 'eps': 0.001})
Step: 1270000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.750], Avg: [ 0.020  0.020  0.020  0.020  0.020 -0.020 -0.020 -0.020 -0.020 -0.020] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'eps': 0.001})
Step: 1280000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.750], Avg: [ 0.020  0.020  0.020  0.020  0.020 -0.020 -0.020 -0.020 -0.020 -0.020] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.250  0.250  0.250  0.250  0.250]', 'critic_loss': 0.3252326, 'actor_loss': -0.03336165, 'entropy': 2.9076173, 'eps': 0.001})
Step: 1290000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [1.090], Avg: [ 0.024  0.024  0.024  0.024  0.024 -0.024 -0.024 -0.024 -0.024 -0.024] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.750  0.750  0.750  0.750  0.750]', 'critic_loss': 0.3294659, 'actor_loss': -0.033397287, 'entropy': 2.9095972, 'eps': 0.001})
Step: 1300000, Reward: [-0.250 -0.250 -0.250 -0.250 -0.250  0.250  0.250  0.250  0.250  0.250] [0.935], Avg: [ 0.021  0.021  0.021  0.021  0.021 -0.021 -0.021 -0.021 -0.021 -0.021] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.250  0.250  0.250  0.250  0.250]', 'critic_loss': 0.33505186, 'actor_loss': -0.033531565, 'entropy': 2.9095657, 'eps': 0.001})
Step: 1310000, Reward: [-0.500 -0.500 -0.500 -0.500 -0.500  0.500  0.500  0.500  0.500  0.500] [1.000], Avg: [ 0.018  0.018  0.018  0.018  0.018 -0.018 -0.018 -0.018 -0.018 -0.018] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'critic_loss': 0.3308932, 'actor_loss': -0.03156326, 'entropy': 2.9094706, 'eps': 0.001})
Step: 1320000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [1.299], Avg: [ 0.022  0.022  0.022  0.022  0.022 -0.022 -0.022 -0.022 -0.022 -0.022] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.33791387, 'actor_loss': -0.030626856, 'entropy': 2.9112566, 'eps': 0.001})
Step: 1330000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.146], Avg: [ 0.022  0.022  0.022  0.022  0.022 -0.022 -0.022 -0.022 -0.022 -0.022] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'eps': 0.001})
Step: 1340000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [1.090], Avg: [ 0.025  0.025  0.025  0.025  0.025 -0.025 -0.025 -0.025 -0.025 -0.025] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.3399168, 'actor_loss': -0.031442896, 'entropy': 2.9124715, 'eps': 0.001})
Step: 1350000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.000], Avg: [ 0.026  0.026  0.026  0.026  0.026 -0.026 -0.026 -0.026 -0.026 -0.026] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.250 -0.250 -0.250 -0.250 -0.250]', 'critic_loss': 0.33019266, 'actor_loss': -0.02975414, 'entropy': 2.9126797, 'eps': 0.001})
Step: 1360000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.173], Avg: [ 0.031  0.031  0.031  0.031  0.031 -0.031 -0.031 -0.031 -0.031 -0.031] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.375  0.375  0.375  0.375  0.375]', 'critic_loss': 0.33259687, 'actor_loss': -0.031212213, 'entropy': 2.9144728, 'eps': 0.001})
Step: 1370000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.791], Avg: [ 0.032  0.032  0.032  0.032  0.032 -0.032 -0.032 -0.032 -0.032 -0.032] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.33751097, 'actor_loss': -0.02944841, 'entropy': 2.9143898, 'eps': 0.001})
Step: 1380000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.750], Avg: [ 0.033  0.033  0.033  0.033  0.033 -0.033 -0.033 -0.033 -0.033 -0.033] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.125 -0.125 -0.125 -0.125 -0.125]', 'critic_loss': 0.34114972, 'actor_loss': -0.027258, 'entropy': 2.914158, 'eps': 0.001})
Step: 1390000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.250], Avg: [ 0.031  0.031  0.031  0.031  0.031 -0.031 -0.031 -0.031 -0.031 -0.031] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.250 -0.250 -0.250 -0.250 -0.250]', 'eps': 0.001})
Step: 1400000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.061], Avg: [ 0.033  0.033  0.033  0.033  0.033 -0.033 -0.033 -0.033 -0.033 -0.033] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.562  0.562  0.562  0.562  0.562]', 'critic_loss': 0.33376813, 'actor_loss': -0.028533846, 'entropy': 2.9139082, 'eps': 0.001})
Step: 1410000, Reward: [-0.375 -0.375 -0.375 -0.375 -0.375  0.375  0.375  0.375  0.375  0.375] [1.061], Avg: [ 0.030  0.030  0.030  0.030  0.030 -0.030 -0.030 -0.030 -0.030 -0.030] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'critic_loss': 0.33948553, 'actor_loss': -0.02771137, 'entropy': 2.9147327, 'eps': 0.001})
Step: 1420000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.968], Avg: [ 0.030  0.030  0.030  0.030  0.030 -0.030 -0.030 -0.030 -0.030 -0.030] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.312  1.312  1.312  1.312  1.312]', 'critic_loss': 0.3383318, 'actor_loss': -0.027890317, 'entropy': 2.9154174, 'eps': 0.001})
Step: 1430000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.118], Avg: [ 0.031  0.031  0.031  0.031  0.031 -0.031 -0.031 -0.031 -0.031 -0.031] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.188  1.188  1.188  1.188  1.188]', 'critic_loss': 0.34349465, 'actor_loss': -0.027451096, 'entropy': 2.9146538, 'eps': 0.001})
Step: 1440000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.829], Avg: [ 0.031  0.031  0.031  0.031  0.031 -0.031 -0.031 -0.031 -0.031 -0.031] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.812  0.812  0.812  0.812  0.812]', 'critic_loss': 0.34249973, 'actor_loss': -0.025924748, 'entropy': 2.9135563, 'eps': 0.001})
Step: 1450000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.146], Avg: [ 0.031  0.031  0.031  0.031  0.031 -0.031 -0.031 -0.031 -0.031 -0.031] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.812  0.812  0.812  0.812  0.812]', 'eps': 0.001})
Step: 1460000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.935], Avg: [ 0.032  0.032  0.032  0.032  0.032 -0.032 -0.032 -0.032 -0.032 -0.032] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.562  0.562  0.562  0.562  0.562]', 'critic_loss': 0.33668378, 'actor_loss': -0.027688006, 'entropy': 2.9114516, 'eps': 0.001})
Step: 1470000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.225], Avg: [ 0.033  0.033  0.033  0.033  0.033 -0.033 -0.033 -0.033 -0.033 -0.033] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.250  0.250  0.250  0.250  0.250]', 'critic_loss': 0.34724832, 'actor_loss': -0.02428302, 'entropy': 2.9129353, 'eps': 0.001})
Step: 1480000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.346], Avg: [ 0.035  0.035  0.035  0.035  0.035 -0.035 -0.035 -0.035 -0.035 -0.035] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'critic_loss': 0.34861624, 'actor_loss': -0.025472878, 'entropy': 2.9135702, 'eps': 0.001})
Step: 1490000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.275], Avg: [ 0.035  0.035  0.035  0.035  0.035 -0.035 -0.035 -0.035 -0.035 -0.035] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.33583903, 'actor_loss': -0.02438911, 'entropy': 2.91411, 'eps': 0.001})
Step: 1500000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.036  0.036  0.036  0.036  0.036 -0.036 -0.036 -0.036 -0.036 -0.036] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.375  0.375  0.375  0.375  0.375]', 'critic_loss': 0.3524115, 'actor_loss': -0.021408334, 'entropy': 2.9170892, 'eps': 0.001})
Step: 1510000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.061], Avg: [ 0.040  0.040  0.040  0.040  0.040 -0.040 -0.040 -0.040 -0.040 -0.040] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.500  0.500  0.500  0.500  0.500]', 'eps': 0.001})
Step: 1520000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.225], Avg: [ 0.042  0.042  0.042  0.042  0.042 -0.042 -0.042 -0.042 -0.042 -0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.812  0.812  0.812  0.812  0.812]', 'critic_loss': 0.3526424, 'actor_loss': -0.021077847, 'entropy': 2.9187176, 'eps': 0.001})
Step: 1530000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.000], Avg: [ 0.042  0.042  0.042  0.042  0.042 -0.042 -0.042 -0.042 -0.042 -0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.34791014, 'actor_loss': -0.021995813, 'entropy': 2.9192793, 'eps': 0.001})
Step: 1540000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.661], Avg: [ 0.042  0.042  0.042  0.042  0.042 -0.042 -0.042 -0.042 -0.042 -0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.062 -0.062 -0.062 -0.062 -0.062]', 'critic_loss': 0.3525062, 'actor_loss': -0.020967731, 'entropy': 2.9189856, 'eps': 0.001})
Step: 1550000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.866], Avg: [ 0.042  0.042  0.042  0.042  0.042 -0.042 -0.042 -0.042 -0.042 -0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.688  1.688  1.688  1.688  1.688]', 'critic_loss': 0.3500565, 'actor_loss': -0.022283643, 'entropy': 2.9169655, 'eps': 0.001})
Step: 1560000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.118], Avg: [ 0.043  0.043  0.043  0.043  0.043 -0.043 -0.043 -0.043 -0.043 -0.043] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.062  1.062  1.062  1.062  1.062]', 'critic_loss': 0.3445258, 'actor_loss': -0.019720107, 'entropy': 2.9165258, 'eps': 0.001})
Step: 1570000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.045  0.045  0.045  0.045  0.045 -0.045 -0.045 -0.045 -0.045 -0.045] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'eps': 0.001})
Step: 1580000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.968], Avg: [ 0.046  0.046  0.046  0.046  0.046 -0.046 -0.046 -0.046 -0.046 -0.046] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.000  1.000  1.000  1.000  1.000]', 'critic_loss': 0.35618198, 'actor_loss': -0.016857853, 'entropy': 2.9175234, 'eps': 0.001})
Step: 1590000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.750], Avg: [ 0.047  0.047  0.047  0.047  0.047 -0.047 -0.047 -0.047 -0.047 -0.047] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.750  0.750  0.750  0.750  0.750]', 'critic_loss': 0.35054496, 'actor_loss': -0.020845026, 'entropy': 2.9164736, 'eps': 0.001})
Step: 1600000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [0.968], Avg: [ 0.045  0.045  0.045  0.045  0.045 -0.045 -0.045 -0.045 -0.045 -0.045] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'critic_loss': 0.35359418, 'actor_loss': -0.01757725, 'entropy': 2.9156845, 'eps': 0.001})
Step: 1610000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.935], Avg: [ 0.046  0.046  0.046  0.046  0.046 -0.046 -0.046 -0.046 -0.046 -0.046] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.361864, 'actor_loss': -0.018233817, 'entropy': 2.9159229, 'eps': 0.001})
Step: 1620000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.061], Avg: [ 0.048  0.048  0.048  0.048  0.048 -0.048 -0.048 -0.048 -0.048 -0.048] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.062  1.062  1.062  1.062  1.062]', 'critic_loss': 0.34956196, 'actor_loss': -0.018658616, 'entropy': 2.9146492, 'eps': 0.001})
Step: 1630000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.750], Avg: [ 0.048  0.048  0.048  0.048  0.048 -0.048 -0.048 -0.048 -0.048 -0.048] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'eps': 0.001})
Step: 1640000, Reward: [-0.250 -0.250 -0.250 -0.250 -0.250  0.250  0.250  0.250  0.250  0.250] [1.118], Avg: [ 0.046  0.046  0.046  0.046  0.046 -0.046 -0.046 -0.046 -0.046 -0.046] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.500  0.500  0.500  0.500  0.500]', 'critic_loss': 0.3444297, 'actor_loss': -0.018711785, 'entropy': 2.9142368, 'eps': 0.001})
Step: 1650000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.146], Avg: [ 0.046  0.046  0.046  0.046  0.046 -0.046 -0.046 -0.046 -0.046 -0.046] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.188  1.188  1.188  1.188  1.188]', 'critic_loss': 0.363844, 'actor_loss': -0.01584734, 'entropy': 2.9147558, 'eps': 0.001})
Step: 1660000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.369], Avg: [ 0.045  0.045  0.045  0.045  0.045 -0.045 -0.045 -0.045 -0.045 -0.045] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.625  0.625  0.625  0.625  0.625]', 'critic_loss': 0.35062537, 'actor_loss': -0.017547892, 'entropy': 2.914531, 'eps': 0.001})
Step: 1670000, Reward: [-0.250 -0.250 -0.250 -0.250 -0.250  0.250  0.250  0.250  0.250  0.250] [1.369], Avg: [ 0.043  0.043  0.043  0.043  0.043 -0.043 -0.043 -0.043 -0.043 -0.043] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.812  0.812  0.812  0.812  0.812]', 'critic_loss': 0.35402918, 'actor_loss': -0.016230224, 'entropy': 2.9151294, 'eps': 0.001})
Step: 1680000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [1.346], Avg: [ 0.046  0.046  0.046  0.046  0.046 -0.046 -0.046 -0.046 -0.046 -0.046] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.35227287, 'actor_loss': -0.01635423, 'entropy': 2.914485, 'eps': 0.001})
Step: 1690000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.199], Avg: [ 0.047  0.047  0.047  0.047  0.047 -0.047 -0.047 -0.047 -0.047 -0.047] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.312 -0.312 -0.312 -0.312 -0.312]', 'eps': 0.001})
Step: 1700000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.118], Avg: [ 0.047  0.047  0.047  0.047  0.047 -0.047 -0.047 -0.047 -0.047 -0.047] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 1.125  1.125  1.125  1.125  1.125]', 'critic_loss': 0.35619855, 'actor_loss': -0.015722878, 'entropy': 2.9160717, 'eps': 0.001})
Step: 1710000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.935], Avg: [ 0.049  0.049  0.049  0.049  0.049 -0.049 -0.049 -0.049 -0.049 -0.049] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.3615059, 'actor_loss': -0.017318362, 'entropy': 2.9151192, 'eps': 0.001})
Step: 1720000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.323], Avg: [ 0.049  0.049  0.049  0.049  0.049 -0.049 -0.049 -0.049 -0.049 -0.049] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'critic_loss': 0.3578566, 'actor_loss': -0.016060146, 'entropy': 2.9154823, 'eps': 0.001})
Step: 1730000, Reward: [-0.250 -0.250 -0.250 -0.250 -0.250  0.250  0.250  0.250  0.250  0.250] [0.791], Avg: [ 0.047  0.047  0.047  0.047  0.047 -0.047 -0.047 -0.047 -0.047 -0.047] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.35186413, 'actor_loss': -0.01575267, 'entropy': 2.9150803, 'eps': 0.001})
Step: 1740000, Reward: [-0.375 -0.375 -0.375 -0.375 -0.375  0.375  0.375  0.375  0.375  0.375] [1.061], Avg: [ 0.045  0.045  0.045  0.045  0.045 -0.045 -0.045 -0.045 -0.045 -0.045] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.125  0.125  0.125  0.125  0.125]', 'critic_loss': 0.35347876, 'actor_loss': -0.016192647, 'entropy': 2.9150257, 'eps': 0.001})
Step: 1750000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.935], Avg: [ 0.045  0.045  0.045  0.045  0.045 -0.045 -0.045 -0.045 -0.045 -0.045] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.500  0.500  0.500  0.500  0.500]', 'eps': 0.001})
Step: 1760000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.901], Avg: [ 0.044  0.044  0.044  0.044  0.044 -0.044 -0.044 -0.044 -0.044 -0.044] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.34823725, 'actor_loss': -0.017489113, 'entropy': 2.9164288, 'eps': 0.001})
Step: 1770000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.346], Avg: [ 0.046  0.046  0.046  0.046  0.046 -0.046 -0.046 -0.046 -0.046 -0.046] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.500  0.500  0.500  0.500  0.500]', 'critic_loss': 0.36201552, 'actor_loss': -0.015532833, 'entropy': 2.9147952, 'eps': 0.001})
Step: 1780000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [1.392], Avg: [ 0.045  0.045  0.045  0.045  0.045 -0.045 -0.045 -0.045 -0.045 -0.045] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.875  0.875  0.875  0.875  0.875]', 'critic_loss': 0.3524582, 'actor_loss': -0.018760303, 'entropy': 2.9163313, 'eps': 0.001})
Step: 1790000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.968], Avg: [ 0.047  0.047  0.047  0.047  0.047 -0.047 -0.047 -0.047 -0.047 -0.047] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.188  0.188  0.188  0.188  0.188]', 'critic_loss': 0.3564813, 'actor_loss': -0.016924461, 'entropy': 2.916518, 'eps': 0.001})
Step: 1800000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.935], Avg: [ 0.049  0.049  0.049  0.049  0.049 -0.049 -0.049 -0.049 -0.049 -0.049] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.688 -0.688 -0.688 -0.688 -0.688]', 'critic_loss': 0.34513572, 'actor_loss': -0.016847873, 'entropy': 2.9141943, 'eps': 0.001})
Step: 1810000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.250], Avg: [ 0.047  0.047  0.047  0.047  0.047 -0.047 -0.047 -0.047 -0.047 -0.047] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.688 -0.688 -0.688 -0.688 -0.688]', 'eps': 0.001})
Step: 1820000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.275], Avg: [ 0.047  0.047  0.047  0.047  0.047 -0.047 -0.047 -0.047 -0.047 -0.047] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.375  0.375  0.375  0.375  0.375]', 'critic_loss': 0.3485522, 'actor_loss': -0.016656602, 'entropy': 2.9143965, 'eps': 0.001})
Step: 1830000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.061], Avg: [ 0.047  0.047  0.047  0.047  0.047 -0.047 -0.047 -0.047 -0.047 -0.047] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.500 -0.500 -0.500 -0.500 -0.500]', 'critic_loss': 0.35645625, 'actor_loss': -0.01692503, 'entropy': 2.913515, 'eps': 0.001})
Step: 1840000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.031], Avg: [ 0.046  0.046  0.046  0.046  0.046 -0.046 -0.046 -0.046 -0.046 -0.046] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.812  0.812  0.812  0.812  0.812]', 'critic_loss': 0.35726383, 'actor_loss': -0.017045632, 'entropy': 2.9146616, 'eps': 0.001})
Step: 1850000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.031], Avg: [ 0.044  0.044  0.044  0.044  0.044 -0.044 -0.044 -0.044 -0.044 -0.044] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.062 -0.062 -0.062 -0.062 -0.062]', 'critic_loss': 0.34856328, 'actor_loss': -0.017924076, 'entropy': 2.9128025, 'eps': 0.001})
Step: 1860000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.000], Avg: [ 0.044  0.044  0.044  0.044  0.044 -0.044 -0.044 -0.044 -0.044 -0.044] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.500 -0.500 -0.500 -0.500 -0.500]', 'critic_loss': 0.3531357, 'actor_loss': -0.01690373, 'entropy': 2.913554, 'eps': 0.001})
Step: 1870000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.612], Avg: [ 0.044  0.044  0.044  0.044  0.044 -0.044 -0.044 -0.044 -0.044 -0.044] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.875  0.875  0.875  0.875  0.875]', 'eps': 0.001})
Step: 1880000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [1.346], Avg: [ 0.043  0.043  0.043  0.043  0.043 -0.043 -0.043 -0.043 -0.043 -0.043] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.188 -0.188 -0.188 -0.188 -0.188]', 'critic_loss': 0.35393894, 'actor_loss': -0.020127248, 'entropy': 2.912671, 'eps': 0.001})
Step: 1890000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.791], Avg: [ 0.043  0.043  0.043  0.043  0.043 -0.043 -0.043 -0.043 -0.043 -0.043] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.375  0.375  0.375  0.375  0.375]', 'critic_loss': 0.35554624, 'actor_loss': -0.017367613, 'entropy': 2.9121664, 'eps': 0.001})
Step: 1900000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.829], Avg: [ 0.042  0.042  0.042  0.042  0.042 -0.042 -0.042 -0.042 -0.042 -0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.33795035, 'actor_loss': -0.021738833, 'entropy': 2.9112642, 'eps': 0.001})
Step: 1910000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.299], Avg: [ 0.043  0.043  0.043  0.043  0.043 -0.043 -0.043 -0.043 -0.043 -0.043] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.688  0.688  0.688  0.688  0.688]', 'critic_loss': 0.33730552, 'actor_loss': -0.021449856, 'entropy': 2.9112036, 'eps': 0.001})
Step: 1920000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [1.090], Avg: [ 0.042  0.042  0.042  0.042  0.042 -0.042 -0.042 -0.042 -0.042 -0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.3509071, 'actor_loss': -0.020051284, 'entropy': 2.9125473, 'eps': 0.001})
Step: 1930000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [0.935], Avg: [ 0.042  0.042  0.042  0.042  0.042 -0.042 -0.042 -0.042 -0.042 -0.042] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.375  0.375  0.375  0.375  0.375]', 'eps': 0.001})
Step: 1940000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.829], Avg: [ 0.043  0.043  0.043  0.043  0.043 -0.043 -0.043 -0.043 -0.043 -0.043] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.312 -0.312 -0.312 -0.312 -0.312]', 'critic_loss': 0.35111085, 'actor_loss': -0.018677155, 'entropy': 2.912305, 'eps': 0.001})
Step: 1950000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.118], Avg: [ 0.043  0.043  0.043  0.043  0.043 -0.043 -0.043 -0.043 -0.043 -0.043] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.062  0.062  0.062  0.062  0.062]', 'critic_loss': 0.3472835, 'actor_loss': -0.017528057, 'entropy': 2.9149742, 'eps': 0.001})
Step: 1960000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.031], Avg: [ 0.043  0.043  0.043  0.043  0.043 -0.043 -0.043 -0.043 -0.043 -0.043] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[-0.250 -0.250 -0.250 -0.250 -0.250]', 'critic_loss': 0.34599817, 'actor_loss': -0.016974172, 'entropy': 2.9153316, 'eps': 0.001})
Step: 1970000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.146], Avg: [ 0.044  0.044  0.044  0.044  0.044 -0.044 -0.044 -0.044 -0.044 -0.044] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'critic_loss': 0.3543644, 'actor_loss': -0.016141178, 'entropy': 2.91345, 'eps': 0.001})
Step: 1980000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.935], Avg: [ 0.044  0.044  0.044  0.044  0.044 -0.044 -0.044 -0.044 -0.044 -0.044] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.438  0.438  0.438  0.438  0.438]', 'critic_loss': 0.35275796, 'actor_loss': -0.016038936, 'entropy': 2.9109716, 'eps': 0.001})
Step: 1990000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.000], Avg: [ 0.045  0.045  0.045  0.045  0.045 -0.045 -0.045 -0.045 -0.045 -0.045] ({'r_i': '[ 0.025  0.025  0.025  0.025  0.025]', 'r_t': '[ 0.312  0.312  0.312  0.312  0.312]', 'eps': 0.001})

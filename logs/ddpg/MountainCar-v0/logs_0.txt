Model: <class 'models.ddpg.DDPGAgent'>, Dir: MountainCar-v0
num_envs: 16,

import os
import math
import torch
import random
import numpy as np
from models.rand import RandomAgent, PrioritizedReplayBuffer, ReplayBuffer
from utils.network import PTACNetwork, PTACAgent, Conv, INPUT_LAYER, ACTOR_HIDDEN, CRITIC_HIDDEN, LEARN_RATE, NUM_STEPS

EPS_MIN = 0.020               	# The lower limit proportion of random to greedy actions to take
EPS_DECAY = 0.98             	# The rate at which eps decays from EPS_MAX to EPS_MIN
REPLAY_BATCH_SIZE = 32        	# How many experience tuples to sample from the buffer for each train step

class DDPGActor(torch.nn.Module):
	def __init__(self, state_size, action_size):
		super().__init__()
		self.layer1 = torch.nn.Linear(state_size[-1], INPUT_LAYER) if len(state_size)==1 else Conv(state_size, INPUT_LAYER)
		self.layer2 = torch.nn.Linear(INPUT_LAYER, ACTOR_HIDDEN)
		self.layer3 = torch.nn.Linear(ACTOR_HIDDEN, ACTOR_HIDDEN)
		self.action_mu = torch.nn.Linear(ACTOR_HIDDEN, *action_size)
		self.action_sig = torch.nn.Linear(ACTOR_HIDDEN, *action_size)
		self.apply(lambda m: torch.nn.init.xavier_normal_(m.weight) if type(m) in [torch.nn.Conv2d, torch.nn.Linear] else None)

	def forward(self, state, sample=True):
		state = self.layer1(state).relu() 
		state = self.layer2(state).relu() 
		state = self.layer3(state).relu() 
		action_mu = self.action_mu(state)
		action_sig = self.action_sig(state).exp()
		epsilon = torch.randn_like(action_sig)
		action = action_mu + epsilon.mul(action_sig) if sample else action_mu
		return action.tanh()
	
class DDPGCritic(torch.nn.Module):
	def __init__(self, state_size, action_size):
		super().__init__()
		self.net_state = torch.nn.Linear(state_size[-1], INPUT_LAYER) if len(state_size)==1 else Conv(state_size, INPUT_LAYER)
		self.net_action = torch.nn.Linear(*action_size, INPUT_LAYER)
		self.net_layer1 = torch.nn.Linear(2*INPUT_LAYER, CRITIC_HIDDEN)
		self.net_layer2 = torch.nn.Linear(CRITIC_HIDDEN, CRITIC_HIDDEN)
		self.q_value = torch.nn.Linear(CRITIC_HIDDEN, 1)
		self.apply(lambda m: torch.nn.init.xavier_normal_(m.weight) if type(m) in [torch.nn.Conv2d, torch.nn.Linear] else None)

	def forward(self, state, action):
		state = self.net_state(state).relu()
		net_action = self.net_action(action).relu()
		net_layer = torch.cat([state, net_action], dim=-1)
		net_layer = self.net_layer1(net_layer).relu()
		net_layer = self.net_layer2(net_layer).relu()
		q_value = self.q_value(net_layer)
		return q_value

class DDPGNetwork(PTACNetwork):
	def __init__(self, state_size, action_size, lr=LEARN_RATE, gpu=True, load=None): 
		super().__init__(state_size, action_size, DDPGActor, DDPGCritic, lr=lr, gpu=gpu, load=load)

	def get_action(self, state, use_target=False, numpy=True, sample=True):
		with torch.no_grad():
			actor = self.actor_local if not use_target else self.actor_target
			return actor(state, sample).cpu().numpy() if numpy else actor(state, sample)

	def get_q_value(self, state, action, use_target=False, numpy=True):
		with torch.no_grad():
			critic = self.critic_local if not use_target else self.critic_target
			return critic(state, action).cpu().numpy() if numpy else critic(state, action)
	
	def optimize(self, states, actions, q_targets, importances=1):
		q_values = self.critic_local(states, actions)
		critic_error = q_values - q_targets.detach()
		critic_loss = importances.to(self.device) * critic_error.pow(2)
		self.step(self.critic_optimizer, critic_loss.mean())

		q_actions = self.critic_local(states, self.actor_local(states))
		actor_loss = -(q_actions - q_values.detach())
		self.step(self.actor_optimizer, actor_loss.mean())
		
		self.soft_copy(self.actor_local, self.actor_target)
		self.soft_copy(self.critic_local, self.critic_target)
		return critic_error.cpu().detach().numpy().squeeze(-1)
	
	def save_model(self, dirname="pytorch", name="best"):
		super().save_model("ddpg", dirname, name)
		
	def load_model(self, dirname="pytorch", name="best"):
		super().load_model("ddpg", dirname, name)

class DDPGAgent(PTACAgent):
	def __init__(self, state_size, action_size, decay=EPS_DECAY, lr=LEARN_RATE, update_freq=NUM_STEPS, gpu=True, load=None):
		super().__init__(state_size, action_size, DDPGNetwork, lr=lr, update_freq=update_freq, decay=decay, gpu=gpu, load=load)

	def get_action(self, state, eps=None, sample=True, e_greedy=False):
		eps = self.eps if eps is None else eps
		action_random = super().get_action(state, eps)
		if e_greedy and random.random() < eps: return action_random
		action_greedy = self.network.get_action(self.to_tensor(state), sample=sample)
		action = action_greedy if e_greedy else np.clip((1-eps)*action_greedy + eps*action_random, -1, 1)
		return action
		
	def train(self, state, action, next_state, reward, done):
		self.buffer.append((state, action, reward, done))
		if len(self.buffer) >= int(self.update_freq * (1 - self.eps + EPS_MIN)**0.5):
			states, actions, rewards, dones = map(self.to_tensor, zip(*self.buffer))
			self.buffer.clear()	
			next_state = self.to_tensor(next_state)
			next_action = self.network.get_action(next_state, use_target=True, numpy=False)
			values = self.network.get_q_value(states, actions, use_target=True, numpy=False)
			next_value = self.network.get_q_value(next_state, next_action, use_target=True, numpy=False)
			targets, _ = self.compute_gae(next_value, rewards.unsqueeze(-1), dones.unsqueeze(-1), values)
			states, actions, targets = [x.view(x.size(0)*x.size(1), *x.size()[2:]).cpu().numpy() for x in (states, actions, targets)]
			self.replay_buffer.extend(list(zip(states, actions, targets)), shuffle=True)	
		if len(self.replay_buffer) > 0:
			(states, actions, targets), indices, importances = self.replay_buffer.sample(REPLAY_BATCH_SIZE, dtype=self.to_tensor)
			errors = self.network.optimize(states, actions, targets, importances**(1-self.eps))
			self.replay_buffer.update_priorities(indices, errors)
			if done[0]: self.eps = max(self.eps * self.decay, EPS_MIN)

REG_LAMBDA = 1e-6             	# Penalty multiplier to apply for the size of the network weights
LEARN_RATE = 0.0002           	# Sets how much we want to update the network weights at each training step
TARGET_UPDATE_RATE = 0.0004   	# How frequently we want to copy the local network to the target network (for double DQNs)
INPUT_LAYER = 512				# The number of output nodes from the first layer to Actor and Critic networks
ACTOR_HIDDEN = 256				# The number of nodes in the hidden layers of the Actor network
CRITIC_HIDDEN = 1024			# The number of nodes in the hidden layers of the Critic networks
DISCOUNT_RATE = 0.99			# The discount rate to use in the Bellman Equation
NUM_STEPS = 1000 				# The number of steps to collect experience in sequence for each GAE calculation
EPS_MAX = 1.0                 	# The starting proportion of random to greedy actions to take
EPS_MIN = 0.020               	# The lower limit proportion of random to greedy actions to take
EPS_DECAY = 0.980             	# The rate at which eps decays from EPS_MAX to EPS_MIN
ADVANTAGE_DECAY = 0.95			# The discount factor for the cumulative GAE calculation
MAX_BUFFER_SIZE = 100000      	# Sets the maximum length of the replay buffer

import gym
import argparse
import numpy as np
# import gfootball.env as ggym
from collections import deque
from models.ppo import PPOAgent
from models.ddqn import DDQNAgent
from models.ddpg import DDPGAgent
from models.rand import RandomAgent
from utils.envs import EnsembleEnv, EnvManager, EnvWorker, ImgStack, RawStack
from utils.misc import Logger, rollout

parser = argparse.ArgumentParser(description="A3C Trainer")
parser.add_argument("--workerports", type=int, default=[16], nargs="+", help="The list of worker ports to connect to")
parser.add_argument("--selfport", type=int, default=None, help="Which port to listen on (as a worker server)")
parser.add_argument("--model", type=str, default="ddqn", choices=["ddqn", "ddpg", "ppo", "rand"], help="Which reinforcement learning algorithm to use")
parser.add_argument("--steps", type=int, default=100000, help="Number of steps to train the agent")
args = parser.parse_args()

gym_envs = ["CartPole-v0", "MountainCar-v0", "Acrobot-v1", "Pendulum-v0", "MountainCarContinuous-v0", "CarRacing-v0", "BipedalWalker-v2", "LunarLander-v2"]
gfb_envs = ["11_vs_11_stochastic", "academy_empty_goal_close"]
env_name = gym_envs[1]

def make_env(env_name=env_name, log=False):
	if env_name in gym_envs: return gym.make(env_name)
	reps = ["pixels", "pixels_gray", "extracted", "simple115"]
	env = ggym.create_environment(env_name=env_name, representation=reps[3], logdir='/football/logs/', render=False)
	env.spec = gym.envs.registration.EnvSpec(env_name + "-v0", max_episode_steps=env.unwrapped._config._scenario_cfg.game_duration)
	if log: print(f"State space: {env.observation_space.shape} \nAction space: {env.action_space.n}")
	return env

class PixelAgent(RandomAgent):
	def __init__(self, state_size, action_size, num_envs, agent, load="", gpu=True, train=True):
		super().__init__(state_size, action_size)
		statemodel = RawStack if len(state_size) == 1 else ImgStack
		self.stack = statemodel(state_size, num_envs, load=load, gpu=gpu)
		self.agent = agent(self.stack.state_size, action_size, load="" if train else load, gpu=gpu)

	def get_env_action(self, env, state, eps=None, sample=True):
		state = self.stack.get_state(state)
		env_action, action = self.agent.get_env_action(env, state, eps, sample)
		return env_action, action, state

	def train(self, state, action, next_state, reward, done):
		next_state = self.stack.get_state(next_state)
		self.agent.train(state, action, next_state, reward, done)

	def reset(self, num_envs=None):
		num_envs = self.stack.num_envs if num_envs is None else num_envs
		self.stack.reset(num_envs, restore=False)
		return self

	def save_model(self, dirname="pytorch", name="best"):
		if hasattr(self.agent, "network"): self.agent.network.save_model(dirname, name)

def run(model, steps=10000, ports=16, eval_at=1000):
	num_envs = len(ports) if type(ports) == list else min(ports, 64)
	logger = Logger(model, env_name, num_envs=num_envs)
	envs = EnvManager(make_env, ports) if type(ports) == list else EnsembleEnv(make_env, ports)
	agent = PixelAgent(envs.state_size, envs.action_size, num_envs, model)
	states = envs.reset()
	total_rewards = []
	for s in range(steps):
		agent.reset(num_envs)
		env_actions, actions, states = agent.get_env_action(envs.env, states)
		next_states, rewards, dones, _ = envs.step(env_actions)
		agent.train(states, actions, next_states, rewards, dones)
		states = next_states
		if dones[0] or s+1 % envs.env.spec.max_episode_steps == 0:
			rollouts = [rollout(envs.env, agent.reset(1)) for _ in range(5)]
			test_reward = np.mean(rollouts) - np.std(rollouts)
			total_rewards.append(test_reward)
			agent.save_model(env_name, "checkpoint")
			if env_name in gfb_envs and total_rewards[-1] >= max(total_rewards): agent.save_model(env_name)
			logger.log(f"Step: {s}, Reward: {test_reward+np.std(rollouts):.4f} [{np.std(rollouts):.2f}], Avg: {np.mean(total_rewards):.4f} ({agent.agent.eps:.3f})")

if __name__ == "__main__":
	model = DDPGAgent if args.model == "ddpg" else PPOAgent if args.model == "ppo" else DDQNAgent if args.model == "ddqn" else RandomAgent
	if args.selfport is not None:
		EnvWorker(args.selfport, make_env).start()
	else:
		if len(args.workerports) == 1: args.workerports = args.workerports[0]
		run(model, args.steps, args.workerports)
	print(f"Training finished")

Step: 199, Reward: -200.0000 [0.00], Avg: -200.0000 (0.980)
Step: 399, Reward: -200.0000 [0.00], Avg: -200.0000 (0.960)
Step: 599, Reward: -200.0000 [0.00], Avg: -200.0000 (0.941)
Step: 799, Reward: -200.0000 [0.00], Avg: -200.0000 (0.922)
Step: 999, Reward: -200.0000 [0.00], Avg: -200.0000 (0.904)
Step: 1199, Reward: -200.0000 [0.00], Avg: -200.0000 (0.886)
Step: 1399, Reward: -200.0000 [0.00], Avg: -200.0000 (0.868)
Step: 1599, Reward: -200.0000 [0.00], Avg: -200.0000 (0.851)
Step: 1799, Reward: -200.0000 [0.00], Avg: -200.0000 (0.834)
Step: 1999, Reward: -200.0000 [0.00], Avg: -200.0000 (0.817)
Step: 2199, Reward: -200.0000 [0.00], Avg: -200.0000 (0.801)
Step: 2399, Reward: -200.0000 [0.00], Avg: -200.0000 (0.785)
Step: 2599, Reward: -200.0000 [0.00], Avg: -200.0000 (0.769)
Step: 2799, Reward: -200.0000 [0.00], Avg: -200.0000 (0.754)
Step: 2999, Reward: -200.0000 [0.00], Avg: -200.0000 (0.739)
Step: 3199, Reward: -200.0000 [0.00], Avg: -200.0000 (0.724)
Step: 3399, Reward: -200.0000 [0.00], Avg: -200.0000 (0.709)
Step: 3557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.695)
Step: 3757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.681)
Step: 3957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.668)
Step: 4157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.654)
Step: 4357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.641)
Step: 4557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.628)
Step: 4757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.616)
Step: 4957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.603)
Step: 5157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.591)
Step: 5357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.580)
Step: 5557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.568)
Step: 5757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.557)
Step: 5957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.545)
Step: 6157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.535)
Step: 6357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.524)
Step: 6557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.513)
Step: 6757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.503)
Step: 6957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.493)
Step: 7157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.483)
Step: 7357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.474)
Step: 7557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.464)
Step: 7757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.455)
Step: 7957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.446)
Step: 8157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.437)
Step: 8357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.428)
Step: 8557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.419)
Step: 8757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.411)
Step: 8957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.403)
Step: 9157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.395)
Step: 9357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.387)
Step: 9557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.379)
Step: 9757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.372)
Step: 9957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.364)
Step: 10157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.357)
Step: 10357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.350)
Step: 10557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.343)
Step: 10757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.336)
Step: 10957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.329)
Step: 11157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.323)
Step: 11357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.316)
Step: 11557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.310)
Step: 11757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.304)
Step: 11957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.298)
Step: 12157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.292)
Step: 12357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.286)
Step: 12557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.280)
Step: 12757, Reward: -200.0000 [0.00], Avg: -200.0000 (0.274)
Step: 12957, Reward: -200.0000 [0.00], Avg: -200.0000 (0.269)
Step: 13157, Reward: -200.0000 [0.00], Avg: -200.0000 (0.264)
Step: 13357, Reward: -200.0000 [0.00], Avg: -200.0000 (0.258)
Step: 13557, Reward: -200.0000 [0.00], Avg: -200.0000 (0.253)
Step: 13742, Reward: -200.0000 [0.00], Avg: -200.0000 (0.248)
Step: 13942, Reward: -200.0000 [0.00], Avg: -200.0000 (0.243)
Step: 14142, Reward: -200.0000 [0.00], Avg: -200.0000 (0.238)
Step: 14342, Reward: -200.0000 [0.00], Avg: -200.0000 (0.233)
Step: 14542, Reward: -200.0000 [0.00], Avg: -200.0000 (0.229)
Step: 14742, Reward: -200.0000 [0.00], Avg: -200.0000 (0.224)
Step: 14942, Reward: -200.0000 [0.00], Avg: -200.0000 (0.220)
Step: 15142, Reward: -200.0000 [0.00], Avg: -200.0000 (0.215)
Step: 15342, Reward: -200.0000 [0.00], Avg: -200.0000 (0.211)
Step: 15542, Reward: -200.0000 [0.00], Avg: -200.0000 (0.207)
Step: 15742, Reward: -200.0000 [0.00], Avg: -200.0000 (0.203)
Step: 15942, Reward: -200.0000 [0.00], Avg: -200.0000 (0.199)
Step: 16142, Reward: -200.0000 [0.00], Avg: -200.0000 (0.195)
Step: 16342, Reward: -200.0000 [0.00], Avg: -200.0000 (0.191)
Step: 16542, Reward: -200.0000 [0.00], Avg: -200.0000 (0.187)
Step: 16742, Reward: -200.0000 [0.00], Avg: -200.0000 (0.183)
Step: 16942, Reward: -200.0000 [0.00], Avg: -200.0000 (0.180)
Step: 17142, Reward: -200.0000 [0.00], Avg: -200.0000 (0.176)
Step: 17342, Reward: -200.0000 [0.00], Avg: -200.0000 (0.172)
Step: 17542, Reward: -200.0000 [0.00], Avg: -200.0000 (0.169)
Step: 17742, Reward: -200.0000 [0.00], Avg: -200.0000 (0.166)
Step: 17942, Reward: -200.0000 [0.00], Avg: -200.0000 (0.162)
Step: 18142, Reward: -200.0000 [0.00], Avg: -200.0000 (0.159)
Step: 18342, Reward: -200.0000 [0.00], Avg: -200.0000 (0.156)
Step: 18513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.153)
Step: 18713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.150)
Step: 18913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.147)
Step: 19113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.144)
Step: 19313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.141)
Step: 19513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.138)
Step: 19713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.135)
Step: 19913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.133)
Step: 20113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.130)
Step: 20313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.127)
Step: 20513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.125)
Step: 20713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.122)
Step: 20913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.120)
Step: 21113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.117)
Step: 21313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.115)
Step: 21513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.113)
Step: 21713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.111)
Step: 21913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.108)
Step: 22113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.106)
Step: 22313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.104)
Step: 22513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.102)
Step: 22713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.100)
Step: 22913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.098)
Step: 23113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.096)
Step: 23313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.094)
Step: 23513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.092)
Step: 23713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.090)
Step: 23913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.089)
Step: 24113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.087)
Step: 24313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.085)
Step: 24513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.083)
Step: 24713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.082)
Step: 24913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.080)
Step: 25113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.078)
Step: 25313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.077)
Step: 25513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.075)
Step: 25713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.074)
Step: 25913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.072)
Step: 26113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.071)
Step: 26313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.069)
Step: 26513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.068)
Step: 26713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.067)
Step: 26913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.065)
Step: 27113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.064)
Step: 27313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.063)
Step: 27513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.062)
Step: 27713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.060)
Step: 27913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.059)
Step: 28113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.058)
Step: 28313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.057)
Step: 28513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.056)
Step: 28713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.055)
Step: 28913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.053)
Step: 29113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.052)
Step: 29313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.051)
Step: 29513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.050)
Step: 29713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.049)
Step: 29913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.048)
Step: 30113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.047)
Step: 30313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.046)
Step: 30513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.045)
Step: 30713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.045)
Step: 30913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.044)
Step: 31113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.043)
Step: 31313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.042)
Step: 31513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.041)
Step: 31713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.040)
Step: 31913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.039)
Step: 32113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.039)
Step: 32313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.038)
Step: 32513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.037)
Step: 32713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.036)
Step: 32913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.036)
Step: 33113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.035)
Step: 33313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.034)
Step: 33513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.034)
Step: 33713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.033)
Step: 33913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.032)
Step: 34113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.032)
Step: 34313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.031)
Step: 34513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.030)
Step: 34713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.030)
Step: 34913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.029)
Step: 35113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.029)
Step: 35313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.028)
Step: 35513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.027)
Step: 35713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.027)
Step: 35913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.026)
Step: 36113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.026)
Step: 36313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.025)
Step: 36513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.025)
Step: 36713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.024)
Step: 36913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.024)
Step: 37113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.023)
Step: 37313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.023)
Step: 37513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.022)
Step: 37713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.022)
Step: 37913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.022)
Step: 38113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.021)
Step: 38313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.021)
Step: 38513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 38713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 38913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99113, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99313, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99513, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99713, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99913, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)

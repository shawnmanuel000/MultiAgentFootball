Model: <class 'multiagent.coma.COMAAgent'>, Dir: 5_vs_5, Date: 10/03/2020 03:32:37
num_envs: 16,
state_size: [(1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115)],
action_size: [[1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19]],
action_space: [MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19])],
envs: <class 'utils.envs.EnvManager'>,
reward_shape: False,
icm: False,

import torch
import numpy as np
from models.rand import MultiagentReplayBuffer3
from utils.network import PTACNetwork, PTACAgent, PTCritic, INPUT_LAYER, ACTOR_HIDDEN, CRITIC_HIDDEN, LEARN_RATE, NUM_STEPS, EPS_MIN, ADVANTAGE_DECAY, DISCOUNT_RATE, one_hot_from_indices

EPS_MIN = 0.1               	# The lower limit proportion of random to greedy actions to take
EPS_DECAY = 0.99             	# The rate at which eps decays from EPS_MAX to EPS_MIN
LEARN_RATE = 0.0005				# Sets how much we want to update the network weights at each training step
TARGET_UPDATE_RATE = 0.001		# How frequently we want to copy the local network to the target network (for double DQNs)
REPLAY_BATCH_SIZE = 10			# Number of episodes to train on for each train step
EPISODE_BUFFER = 64				# Sets the maximum length of the replay buffer
TIME_BATCHES = 25				# The number of batches of time steps to train critic in reverse time sequence
NUM_STEPS = 500					# The number of steps to collect experience in sequence for each GAE calculation

class COMAActor(torch.nn.Module):
	def __init__(self, state_size, action_size):
		super().__init__()
		self.layer1 = torch.nn.Linear(state_size[-1], ACTOR_HIDDEN)
		self.layer2 = torch.nn.Linear(ACTOR_HIDDEN, ACTOR_HIDDEN)
		self.action_probs = torch.nn.Linear(ACTOR_HIDDEN, action_size[-1])
		self.apply(lambda m: torch.nn.init.xavier_normal_(m.weight) if type(m) in [torch.nn.Conv2d, torch.nn.Linear] else None)

	def forward(self, state, eps):
		state = self.layer1(state).relu()
		state = self.layer2(state).relu()
		action_probs = self.action_probs(state).softmax(-1)
		action_probs = ((1 - eps) * action_probs + torch.ones_like(action_probs).to(state.device) * eps/action_probs.size(-1))
		action = torch.distributions.Categorical(action_probs).sample().long()
		return one_hot_from_indices(action, action_probs.size(-1)), action_probs

class COMANetwork(PTACNetwork):
	def __init__(self, state_size, action_size, lr=LEARN_RATE, tau=TARGET_UPDATE_RATE, gpu=True, load=""):
		self.n_agents = len(state_size)
		self.actor = COMAActor([state_size[0][-1] + action_size[0][-1] + self.n_agents], action_size[0])
		self.critic = lambda s,a: PTCritic([np.sum([np.prod(s) for s in state_size]) + 2*np.sum([np.prod(a) for a in action_size]) + state_size[0][-1] + self.n_agents], action_size[0])
		super().__init__(state_size, action_size, actor=lambda s,a: self.actor, critic=self.critic, gpu=gpu, load=load, name="coma")

	def get_action_probs(self, inputs, eps, grad=False, numpy=False):
		with torch.enable_grad() if grad else torch.no_grad():
			action, action_probs = self.actor_local(inputs, eps)
			return [x.cpu().numpy() if numpy else x for x in [action, action_probs]]

	def optimize(self, actions, critic_inputs, actor_inputs, rewards, dones, eps):
		q_next_value = self.critic_target(critic_inputs)
		q_target_taken = torch.gather(q_next_value, dim=-1, index=actions.argmax(-1, keepdims=True)).squeeze(-1)
		q_target_taken = torch.cat([q_target_taken, torch.zeros_like(q_target_taken[:,-1]).unsqueeze(1)], dim=1)
		q_target = self.build_td_lambda_targets(rewards, dones, q_target_taken, self.n_agents)
		q_value = torch.zeros_like(q_next_value)
		t_batch = max(rewards.size(1)//TIME_BATCHES, 1)
		for t in reversed(range(0,min(rewards.size(1), t_batch*TIME_BATCHES),t_batch)):
			q_value[:,t:t+t_batch] = self.critic_local(critic_inputs[:,t:t+t_batch])
			q_taken = torch.gather(q_value[:,t:t+t_batch], dim=-1, index=actions[:,t:t+t_batch].argmax(-1, keepdims=True)).squeeze(-1)
			critic_error = (q_taken - q_target[:,t:t+t_batch].detach())
			critic_loss = critic_error.pow(2).mean()
			self.step(self.critic_optimizer, critic_loss, self.critic_local.parameters(), retain=t>0)
		self.soft_copy(self.critic_local, self.critic_target)

		action_probs = self.get_action_probs(actor_inputs, eps, grad=True)[1]
		q_value = q_value.reshape(-1, action_probs.shape[-1])
		pi = action_probs.view(-1, action_probs.shape[-1])
		baseline = (pi * q_value).sum(-1).detach()
		q_taken = torch.gather(q_value, dim=1, index=actions.argmax(-1).reshape(-1, 1)).squeeze(1)
		pi_taken = torch.gather(pi, dim=1, index=actions.argmax(-1).reshape(-1, 1)).squeeze(1)
		advantages = (q_taken - baseline).detach()
		actor_loss = - (advantages * pi_taken.log()).mean()
		self.step(self.actor_optimizer, actor_loss, self.actor_local.parameters())

	@staticmethod
	def build_td_lambda_targets(rewards, done, target_qs, n_agents, gamma=DISCOUNT_RATE, lamda=ADVANTAGE_DECAY):
		ret = target_qs.new_zeros(*target_qs.shape)
		ret[:,-1] = target_qs[:,-1]*(1-torch.sum(done, dim=1))
		for t in range(ret.shape[1]-2, -1, -1):
			ret[:,t] = lamda*gamma*ret[:,t+1] + (rewards[:,t]+(1-lamda)*gamma*target_qs[:,t+1]*(1-done[:,t]))
		return ret[:,0:-1]

	def save_model(self, dirname="pytorch", name="best"):
		super().save_model(self.name, dirname, name)
		
	def load_model(self, dirname="pytorch", name="best"):
		super().load_model(self.name, dirname, name)

class COMAAgent(PTACAgent):
	def __init__(self, state_size, action_size, update_freq=NUM_STEPS, lr=LEARN_RATE, decay=EPS_DECAY, gpu=True, load=None):
		super().__init__(state_size, action_size, COMANetwork, lr=lr, update_freq=update_freq, decay=decay, gpu=gpu, load=load)
		self.replay_buffer = MultiagentReplayBuffer3(EPISODE_BUFFER, state_size, action_size)
		self.n_agents = len(action_size)

	def get_action(self, state, eps=None, sample=True, numpy=True):
		eps = self.eps if eps is None else eps
		obs = np.concatenate(state, -2)
		if not hasattr(self, "action"): self.action = np.zeros([*obs.shape[:-1], self.action_size[0][-1]])
		agent_ids = np.repeat(np.expand_dims(np.eye(self.n_agents), 0), repeats=obs.shape[0], axis=0)
		inputs = torch.from_numpy(np.concatenate([obs, self.action, agent_ids], -1)).float().to(self.network.device)
		self.action = self.network.get_action_probs(inputs, eps=self.eps, numpy=True)[0]
		return np.split(self.action, len(self.action_size), axis=-2)

	def train(self, state, action, next_state, reward, done):
		self.step = 0 if not hasattr(self, "step") else self.step + 1
		self.buffer.append((state, action, reward, done))
		if np.any(done[0]):
			states, actions, rewards, dones = map(lambda x: [np.stack(t, axis=1) for t in list(zip(*x))], zip(*self.buffer))
			self.replay_buffer.add((states, actions, rewards, dones))
			self.buffer.clear()
		if (self.step % self.update_freq)==0 and len(self.replay_buffer) >= REPLAY_BATCH_SIZE:
			sample = self.replay_buffer.sample(REPLAY_BATCH_SIZE, lambda x: torch.Tensor(x).to(self.network.device))
			states, actions, rewards, dones = map(lambda x: torch.stack(x,2), sample)
			obs, actions = [x.squeeze(-2) for x in [states, actions]]
			state = states.repeat(1,1,1,self.n_agents,1).view(*states.shape[:3],-1)
			actions_joint = actions.view(*actions.shape[:2],1,-1).repeat(1,1,self.n_agents,1)
			agent_mask = (1-torch.eye(self.n_agents, device=self.network.device))
			agent_mask = agent_mask.view(-1, 1).repeat(1, self.action_size[0][-1]).view(self.n_agents, -1).unsqueeze(0).unsqueeze(0)
			last_actions = torch.cat([torch.zeros_like(actions[:, 0:1]), actions[:, :-1]], dim=1)
			last_actions_joint = last_actions.view(*last_actions.shape[:2],1,-1).repeat(1,1,self.n_agents,1)
			agent_inds = torch.eye(self.n_agents, device=self.network.device).unsqueeze(0).unsqueeze(0).expand(*obs.shape[:2],-1,-1)
			critic_inputs = torch.cat([state, obs, actions_joint * agent_mask, last_actions_joint, agent_inds], dim=-1)
			actor_inputs = torch.cat([obs, last_actions, agent_inds], dim=-1)
			self.network.optimize(actions, critic_inputs, actor_inputs, rewards.mean(-1, keepdims=True), dones.mean(-1, keepdims=True), self.eps)
		if np.any(done[0]): self.eps = max(self.eps * self.decay, EPS_MIN)

REG_LAMBDA = 1e-6             	# Penalty multiplier to apply for the size of the network weights
LEARN_RATE = 0.0003           	# Sets how much we want to update the network weights at each training step
TARGET_UPDATE_RATE = 0.001   	# How frequently we want to copy the local network to the target network (for double DQNs)
INPUT_LAYER = 256				# The number of output nodes from the first layer to Actor and Critic networks
ACTOR_HIDDEN = 256				# The number of nodes in the hidden layers of the Actor network
CRITIC_HIDDEN = 512				# The number of nodes in the hidden layers of the Critic networks
DISCOUNT_RATE = 0.998			# The discount rate to use in the Bellman Equation
NUM_STEPS = 500					# The number of steps to collect experience in sequence for each GAE calculation
EPS_MAX = 1.0                 	# The starting proportion of random to greedy actions to take
EPS_MIN = 0.001               	# The lower limit proportion of random to greedy actions to take
EPS_DECAY = 0.980             	# The rate at which eps decays from EPS_MAX to EPS_MIN
ADVANTAGE_DECAY = 0.95			# The discount factor for the cumulative GAE calculation
MAX_BUFFER_SIZE = 1000000      	# Sets the maximum length of the replay buffer
REPLAY_BATCH_SIZE = 32        	# How many experience tuples to sample from the buffer for each train step

import gym
import argparse
import numpy as np
import particle_envs.make_env as pgym
import football.gfootball.env as ggym
from models.ppo import PPOAgent
from models.sac import SACAgent
from models.ddqn import DDQNAgent
from models.ddpg import DDPGAgent
from models.rand import RandomAgent
from multiagent.coma import COMAAgent
from multiagent.maddpg import MADDPGAgent
from multiagent.mappo import MAPPOAgent
from utils.wrappers import ParallelAgent, DoubleAgent, SelfPlayAgent, ParticleTeamEnv, FootballTeamEnv, TrainEnv
from utils.envs import EnsembleEnv, EnvManager, EnvWorker, MPI_SIZE, MPI_RANK
from utils.misc import Logger, rollout
np.set_printoptions(precision=3)

gym_envs = ["CartPole-v0", "MountainCar-v0", "Acrobot-v1", "Pendulum-v0", "MountainCarContinuous-v0", "CarRacing-v0", "BipedalWalker-v2", "BipedalWalkerHardcore-v2", "LunarLander-v2", "LunarLanderContinuous-v2"]
gfb_envs = ["academy_empty_goal_close", "academy_empty_goal", "academy_run_to_score", "academy_run_to_score_with_keeper", "academy_single_goal_versus_lazy", "academy_3_vs_1_with_keeper", "1_vs_1_easy", "3_vs_3_custom", "5_vs_5", "11_vs_11_stochastic", "test_example_multiagent"]
ptc_envs = ["simple_adversary", "simple_speaker_listener", "simple_tag", "simple_spread", "simple_push"]
env_name = gym_envs[0]
env_name = gfb_envs[-3]
# env_name = ptc_envs[-2]

def make_env(env_name=env_name, log=False, render=False, reward_shape=False):
	if env_name in gym_envs: return TrainEnv(gym.make(env_name))
	if env_name in ptc_envs: return ParticleTeamEnv(pgym.make_env(env_name))
	ballr = lambda x,y: (np.maximum if x>0 else np.minimum)(x - np.abs(y)*np.sign(x), 0.5*x)
	reward_fn = lambda obs,reward: [(ballr(o[0,88], o[0,89])*int((o[0,95]-o[0,96])>=0) + 7*r)/8 for o,r in zip(obs,reward)]
	return FootballTeamEnv(ggym, env_name, reward_fn if reward_shape else None)

def train(model, steps=10000, ports=16, env_name=env_name, trial_at=10000, save_at=10, checkpoint=True, save_best=False, log=True, render=False, reward_shape=False, icm=False):
	envs = (EnvManager if type(ports) == list or MPI_SIZE > 1 else EnsembleEnv)(lambda: make_env(env_name, reward_shape=reward_shape), ports)
	agent = (DoubleAgent if envs.env.self_play else ParallelAgent)(envs.state_size, envs.action_size, model, envs.num_envs, load="", gpu=True, agent2=RandomAgent, save_dir=env_name, icm=icm) 
	logger = Logger(model, env_name, num_envs=envs.num_envs, state_size=agent.state_size, action_size=envs.action_size, action_space=envs.env.action_space, envs=type(envs), reward_shape=reward_shape, icm=icm)
	states = envs.reset(train=True)
	total_rewards = []
	for s in range(steps+1):
		env_actions, actions, states = agent.get_env_action(envs.env, states)
		next_states, rewards, dones, _ = envs.step(env_actions, train=True)
		agent.train(states, actions, next_states, rewards, dones)
		states = next_states
		if s%trial_at == 0:
			rollouts = rollout(envs, agent, render=render)
			total_rewards.append(np.mean(rollouts, axis=-1))
			if checkpoint and len(total_rewards) % save_at==0: agent.save_model(env_name, "checkpoint")
			if save_best and np.all(total_rewards[-1] >= np.max(total_rewards, axis=-1)): agent.save_model(env_name)
			if log: logger.log(f"Step: {s:7d}, Reward: {total_rewards[-1]} [{np.std(rollouts):4.3f}], Avg: {np.mean(total_rewards, axis=0)} ({agent.eps:.4f})", agent.get_stats())

def trial(model, env_name, render):
	envs = EnsembleEnv(lambda: make_env(env_name, log=True, render=render), 0)
	agent = (DoubleAgent if envs.env.self_play else ParallelAgent)(envs.state_size, envs.action_size, model, gpu=False, load=f"{env_name}", agent2=RandomAgent, save_dir=env_name)
	print(f"Reward: {np.mean([rollout(envs.env, agent, eps=0.0, render=True) for _ in range(5)], axis=0)}")
	envs.close()

def parse_args():
	parser = argparse.ArgumentParser(description="A3C Trainer")
	parser.add_argument("--workerports", type=int, default=[16], nargs="+", help="The list of worker ports to connect to")
	parser.add_argument("--selfport", type=int, default=None, help="Which port to listen on (as a worker server)")
	parser.add_argument("--model", type=str, default="coma", help="Which reinforcement learning algorithm to use")
	parser.add_argument("--steps", type=int, default=200000, help="Number of steps to train the agent")
	parser.add_argument("--reward_shape", action="store_true", help="Whether to shape rewards for football")
	parser.add_argument("--icm", action="store_true", help="Whether to use intrinsic motivation")
	parser.add_argument("--render", action="store_true", help="Whether to render during training")
	parser.add_argument("--trial", action="store_true", help="Whether to show a trial run")
	parser.add_argument("--env", type=str, default="", help="Name of env to use")
	return parser.parse_args()

if __name__ == "__main__":
	args = parse_args()
	env_name = env_name if args.env not in [*gym_envs, *gfb_envs, *ptc_envs] else args.env
	models = {"ddpg":DDPGAgent, "ppo":PPOAgent, "sac":SACAgent, "ddqn":DDQNAgent, "maddpg":MADDPGAgent, "mappo":MAPPOAgent, "coma":COMAAgent, "rand":RandomAgent}
	model = models[args.model] if args.model in models else RandomAgent
	if args.selfport is not None or MPI_RANK>0:
		EnvWorker(self_port=args.selfport, make_env=make_env).start()
	elif args.trial:
		trial(model=model, env_name=env_name, render=args.render)
	else:
		train(model=model, steps=args.steps, ports=args.workerports[0] if len(args.workerports)==1 else args.workerports, env_name=env_name, render=args.render, reward_shape=args.reward_shape, icm=args.icm)


Step:       0, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.031], Avg: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] (1.0000) <00:00:00> ({r_i: None, r_t: [ 0.000  0.000  0.000  0.000  0.000], eps: 1.0})
Step:   10000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [0.750], Avg: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] (0.9703) <00:03:21> ({r_i: None, r_t: [-0.188 -0.188 -0.188 -0.188 -0.188], eps: 0.97})
Step:   20000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.299], Avg: [-0.021 -0.021 -0.021 -0.021 -0.021  0.021  0.021  0.021  0.021  0.021] (0.9415) <00:06:49> ({r_i: None, r_t: [-0.875 -0.875 -0.875 -0.875 -0.875], eps: 0.941})
Step:   30000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.118], Avg: [ 0.016  0.016  0.016  0.016  0.016 -0.016 -0.016 -0.016 -0.016 -0.016] (0.9044) <00:10:16> ({r_i: None, r_t: [-0.312 -0.312 -0.312 -0.312 -0.312], eps: 0.904})
Step:   40000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [1.090], Avg: [ 0.050  0.050  0.050  0.050  0.050 -0.050 -0.050 -0.050 -0.050 -0.050] (0.8775) <00:13:45> ({r_i: None, r_t: [-0.062 -0.062 -0.062 -0.062 -0.062], eps: 0.878})
Step:   50000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.031], Avg: [ 0.094  0.094  0.094  0.094  0.094 -0.094 -0.094 -0.094 -0.094 -0.094] (0.8515) <00:17:15> ({r_i: None, r_t: [-0.625 -0.625 -0.625 -0.625 -0.625], eps: 0.851})
Step:   60000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.612], Avg: [ 0.098  0.098  0.098  0.098  0.098 -0.098 -0.098 -0.098 -0.098 -0.098] (0.8179) <00:20:47> ({r_i: None, r_t: [ 0.625  0.625  0.625  0.625  0.625], eps: 0.818})
Step:   70000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.148  0.148  0.148  0.148  0.148 -0.148 -0.148 -0.148 -0.148 -0.148] (0.7936) <00:24:18> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.794})
Step:   80000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.031], Avg: [ 0.167  0.167  0.167  0.167  0.167 -0.167 -0.167 -0.167 -0.167 -0.167] (0.7700) <00:27:50> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.77})
Step:   90000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.968], Avg: [ 0.156  0.156  0.156  0.156  0.156 -0.156 -0.156 -0.156 -0.156 -0.156] (0.7397) <00:31:22> ({r_i: None, r_t: [ 0.812  0.812  0.812  0.812  0.812], eps: 0.74})
Step:  100000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.176  0.176  0.176  0.176  0.176 -0.176 -0.176 -0.176 -0.176 -0.176] (0.7177) <00:34:54> ({r_i: None, r_t: [ 1.438  1.438  1.438  1.438  1.438], eps: 0.718})
Step:  110000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.250], Avg: [ 0.229  0.229  0.229  0.229  0.229 -0.229 -0.229 -0.229 -0.229 -0.229] (0.6964) <00:38:27> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.696})
Step:  120000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.661], Avg: [ 0.216  0.216  0.216  0.216  0.216 -0.216 -0.216 -0.216 -0.216 -0.216] (0.6690) <00:41:58> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.669})
Step:  130000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.661], Avg: [ 0.223  0.223  0.223  0.223  0.223 -0.223 -0.223 -0.223 -0.223 -0.223] (0.6491) <00:45:31> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.649})
Step:  140000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.935], Avg: [ 0.217  0.217  0.217  0.217  0.217 -0.217 -0.217 -0.217 -0.217 -0.217] (0.6298) <00:49:04> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.63})
Step:  150000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.000], Avg: [ 0.203  0.203  0.203  0.203  0.203 -0.203 -0.203 -0.203 -0.203 -0.203] (0.6050) <00:52:38> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.605})
Step:  160000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.791], Avg: [ 0.199  0.199  0.199  0.199  0.199 -0.199 -0.199 -0.199 -0.199 -0.199] (0.5870) <00:56:12> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.587})
Step:  170000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [1.346], Avg: [ 0.212  0.212  0.212  0.212  0.212 -0.212 -0.212 -0.212 -0.212 -0.212] (0.5696) <00:59:45> ({r_i: None, r_t: [ 2.250  2.250  2.250  2.250  2.250], eps: 0.57})
Step:  180000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.500], Avg: [ 0.214  0.214  0.214  0.214  0.214 -0.214 -0.214 -0.214 -0.214 -0.214] (0.5472) <01:03:19> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.547})
Step:  190000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.935], Avg: [ 0.222  0.222  0.222  0.222  0.222 -0.222 -0.222 -0.222 -0.222 -0.222] (0.5309) <01:06:53> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.531})
Step:  200000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.661], Avg: [ 0.214  0.214  0.214  0.214  0.214 -0.214 -0.214 -0.214 -0.214 -0.214] (0.5151) <01:10:27> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.515})
Step:  210000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.866], Avg: [ 0.210  0.210  0.210  0.210  0.210 -0.210 -0.210 -0.210 -0.210 -0.210] (0.4948) <01:14:02> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.495})
Step:  220000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.901], Avg: [ 0.215  0.215  0.215  0.215  0.215 -0.215 -0.215 -0.215 -0.215 -0.215] (0.4801) <01:17:37> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.48})
Step:  230000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [1.458], Avg: [ 0.221  0.221  0.221  0.221  0.221 -0.221 -0.221 -0.221 -0.221 -0.221] (0.4659) <01:21:13> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.466})
Step:  240000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.118], Avg: [ 0.233  0.233  0.233  0.233  0.233 -0.233 -0.233 -0.233 -0.233 -0.233] (0.4475) <01:24:48> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.448})
Step:  250000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.436], Avg: [ 0.255  0.255  0.255  0.255  0.255 -0.255 -0.255 -0.255 -0.255 -0.255] (0.4342) <01:28:23> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.434})
Step:  260000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.264  0.264  0.264  0.264  0.264 -0.264 -0.264 -0.264 -0.264 -0.264] (0.4213) <01:31:59> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.421})
Step:  270000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.268  0.268  0.268  0.268  0.268 -0.268 -0.268 -0.268 -0.268 -0.268] (0.4047) <01:35:36> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.405})
Step:  280000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.225], Avg: [ 0.284  0.284  0.284  0.284  0.284 -0.284 -0.284 -0.284 -0.284 -0.284] (0.3927) <01:39:11> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.393})
Step:  290000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.275], Avg: [ 0.300  0.300  0.300  0.300  0.300 -0.300 -0.300 -0.300 -0.300 -0.300] (0.3810) <01:42:46> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.381})
Step:  300000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.661], Avg: [ 0.292  0.292  0.292  0.292  0.292 -0.292 -0.292 -0.292 -0.292 -0.292] (0.3660) <01:46:22> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.366})
Step:  310000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.612], Avg: [ 0.287  0.287  0.287  0.287  0.287 -0.287 -0.287 -0.287 -0.287 -0.287] (0.3552) <01:49:58> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.355})
Step:  320000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.090], Avg: [ 0.299  0.299  0.299  0.299  0.299 -0.299 -0.299 -0.299 -0.299 -0.299] (0.3446) <01:53:35> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.345})
Step:  330000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.707], Avg: [ 0.294  0.294  0.294  0.294  0.294 -0.294 -0.294 -0.294 -0.294 -0.294] (0.3310) <01:57:12> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.331})
Step:  340000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.300  0.300  0.300  0.300  0.300 -0.300 -0.300 -0.300 -0.300 -0.300] (0.3212) <02:00:47> ({r_i: None, r_t: [ 0.875  0.875  0.875  0.875  0.875], eps: 0.321})
Step:  350000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.118], Avg: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] (0.3117) <02:04:22> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.312})
Step:  360000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.311  0.311  0.311  0.311  0.311 -0.311 -0.311 -0.311 -0.311 -0.311] (0.2994) <02:07:58> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.299})
Step:  370000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.661], Avg: [ 0.308  0.308  0.308  0.308  0.308 -0.308 -0.308 -0.308 -0.308 -0.308] (0.2905) <02:11:33> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.29})
Step:  380000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.436], Avg: [ 0.324  0.324  0.324  0.324  0.324 -0.324 -0.324 -0.324 -0.324 -0.324] (0.2819) <02:15:10> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.282})
Step:  390000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.118], Avg: [ 0.334  0.334  0.334  0.334  0.334 -0.334 -0.334 -0.334 -0.334 -0.334] (0.2708) <02:18:46> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.271})
Step:  400000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.335  0.335  0.335  0.335  0.335 -0.335 -0.335 -0.335 -0.335 -0.335] (0.2627) <02:22:24> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.263})
Step:  410000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.031], Avg: [ 0.335  0.335  0.335  0.335  0.335 -0.335 -0.335 -0.335 -0.335 -0.335] (0.2549) <02:26:02> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.255})
Step:  420000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.118], Avg: [ 0.339  0.339  0.339  0.339  0.339 -0.339 -0.339 -0.339 -0.339 -0.339] (0.2449) <02:29:39> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.245})
Step:  430000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.829], Avg: [ 0.338  0.338  0.338  0.338  0.338 -0.338 -0.338 -0.338 -0.338 -0.338] (0.2376) <02:33:15> ({r_i: None, r_t: [ 2.562  2.562  2.562  2.562  2.562], eps: 0.238})
Step:  440000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.433], Avg: [ 0.332  0.332  0.332  0.332  0.332 -0.332 -0.332 -0.332 -0.332 -0.332] (0.2305) <02:36:51> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.231})
Step:  450000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.436], Avg: [ 0.348  0.348  0.348  0.348  0.348 -0.348 -0.348 -0.348 -0.348 -0.348] (0.2215) <02:40:28> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.221})
Step:  460000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.935], Avg: [ 0.348  0.348  0.348  0.348  0.348 -0.348 -0.348 -0.348 -0.348 -0.348] (0.2149) <02:44:06> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.215})
Step:  470000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.349  0.349  0.349  0.349  0.349 -0.349 -0.349 -0.349 -0.349 -0.349] (0.2085) <02:47:43> ({r_i: None, r_t: [ 2.438  2.438  2.438  2.438  2.438], eps: 0.208})
Step:  480000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.901], Avg: [ 0.353  0.353  0.353  0.353  0.353 -0.353 -0.353 -0.353 -0.353 -0.353] (0.2003) <02:51:21> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.2})
Step:  490000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.791], Avg: [ 0.349  0.349  0.349  0.349  0.349 -0.349 -0.349 -0.349 -0.349 -0.349] (0.1943) <02:54:58> ({r_i: None, r_t: [ 1.438  1.438  1.438  1.438  1.438], eps: 0.194})
Step:  500000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.707], Avg: [ 0.349  0.349  0.349  0.349  0.349 -0.349 -0.349 -0.349 -0.349 -0.349] (0.1886) <02:58:36> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.189})
Step:  510000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.661], Avg: [ 0.346  0.346  0.346  0.346  0.346 -0.346 -0.346 -0.346 -0.346 -0.346] (0.1811) <03:02:13> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.181})
Step:  520000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.351  0.351  0.351  0.351  0.351 -0.351 -0.351 -0.351 -0.351 -0.351] (0.1757) <03:05:51> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.176})
Step:  530000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.935], Avg: [ 0.350  0.350  0.350  0.350  0.350 -0.350 -0.350 -0.350 -0.350 -0.350] (0.1705) <03:09:29> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.171})
Step:  540000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.612], Avg: [ 0.348  0.348  0.348  0.348  0.348 -0.348 -0.348 -0.348 -0.348 -0.348] (0.1638) <03:13:06> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.164})
Step:  550000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.348  0.348  0.348  0.348  0.348 -0.348 -0.348 -0.348 -0.348 -0.348] (0.1589) <03:16:42> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.159})
Step:  560000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.829], Avg: [ 0.345  0.345  0.345  0.345  0.345 -0.345 -0.345 -0.345 -0.345 -0.345] (0.1542) <03:20:19> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.154})
Step:  570000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.829], Avg: [ 0.347  0.347  0.347  0.347  0.347 -0.347 -0.347 -0.347 -0.347 -0.347] (0.1481) <03:23:58> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.148})
Step:  580000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.559], Avg: [ 0.344  0.344  0.344  0.344  0.344 -0.344 -0.344 -0.344 -0.344 -0.344] (0.1437) <03:27:37> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.144})
Step:  590000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.829], Avg: [ 0.346  0.346  0.346  0.346  0.346 -0.346 -0.346 -0.346 -0.346 -0.346] (0.1395) <03:31:15> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.139})
Step:  600000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.829], Avg: [ 0.347  0.347  0.347  0.347  0.347 -0.347 -0.347 -0.347 -0.347 -0.347] (0.1340) <03:34:53> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.134})
Step:  610000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.350  0.350  0.350  0.350  0.350 -0.350 -0.350 -0.350 -0.350 -0.350] (0.1300) <03:38:32> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.13})
Step:  620000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.433], Avg: [ 0.347  0.347  0.347  0.347  0.347 -0.347 -0.347 -0.347 -0.347 -0.347] (0.1261) <03:42:11> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.126})
Step:  630000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.661], Avg: [ 0.347  0.347  0.347  0.347  0.347 -0.347 -0.347 -0.347 -0.347 -0.347] (0.1212) <03:45:49> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.121})
Step:  640000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.612], Avg: [ 0.345  0.345  0.345  0.345  0.345 -0.345 -0.345 -0.345 -0.345 -0.345] (0.1176) <03:49:26> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.118})
Step:  650000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.500], Avg: [ 0.344  0.344  0.344  0.344  0.344 -0.344 -0.344 -0.344 -0.344 -0.344] (0.1141) <03:53:05> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.114})
Step:  660000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.348  0.348  0.348  0.348  0.348 -0.348 -0.348 -0.348 -0.348 -0.348] (0.1096) <03:56:44> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.11})
Step:  670000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.250], Avg: [ 0.342  0.342  0.342  0.342  0.342 -0.342 -0.342 -0.342 -0.342 -0.342] (0.1063) <04:00:23> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.106})
Step:  680000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.707], Avg: [ 0.344  0.344  0.344  0.344  0.344 -0.344 -0.344 -0.344 -0.344 -0.344] (0.1032) <04:04:02> ({r_i: None, r_t: [ 2.125  2.125  2.125  2.125  2.125], eps: 0.103})
Step:  690000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.612], Avg: [ 0.345  0.345  0.345  0.345  0.345 -0.345 -0.345 -0.345 -0.345 -0.345] (0.1000) <04:07:40> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.1})
Step:  700000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.829], Avg: [ 0.346  0.346  0.346  0.346  0.346 -0.346 -0.346 -0.346 -0.346 -0.346] (0.1000) <04:11:21> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.1})
Step:  710000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.323], Avg: [ 0.352  0.352  0.352  0.352  0.352 -0.352 -0.352 -0.352 -0.352 -0.352] (0.1000) <04:14:59> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.1})
Step:  720000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.968], Avg: [ 0.354  0.354  0.354  0.354  0.354 -0.354 -0.354 -0.354 -0.354 -0.354] (0.1000) <04:18:38> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step:  730000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.356  0.356  0.356  0.356  0.356 -0.356 -0.356 -0.356 -0.356 -0.356] (0.1000) <04:22:16> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step:  740000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.146], Avg: [ 0.364  0.364  0.364  0.364  0.364 -0.364 -0.364 -0.364 -0.364 -0.364] (0.1000) <04:25:54> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.1})
Step:  750000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.364  0.364  0.364  0.364  0.364 -0.364 -0.364 -0.364 -0.364 -0.364] (0.1000) <04:29:33> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step:  760000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.090], Avg: [ 0.369  0.369  0.369  0.369  0.369 -0.369 -0.369 -0.369 -0.369 -0.369] (0.1000) <04:33:11> ({r_i: None, r_t: [ 0.625  0.625  0.625  0.625  0.625], eps: 0.1})
Step:  770000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.370  0.370  0.370  0.370  0.370 -0.370 -0.370 -0.370 -0.370 -0.370] (0.1000) <04:36:50> ({r_i: None, r_t: [ 2.062  2.062  2.062  2.062  2.062], eps: 0.1})
Step:  780000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.968], Avg: [ 0.373  0.373  0.373  0.373  0.373 -0.373 -0.373 -0.373 -0.373 -0.373] (0.1000) <04:40:30> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step:  790000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.371  0.371  0.371  0.371  0.371 -0.371 -0.371 -0.371 -0.371 -0.371] (0.1000) <04:44:08> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.1})
Step:  800000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.829], Avg: [ 0.370  0.370  0.370  0.370  0.370 -0.370 -0.370 -0.370 -0.370 -0.370] (0.1000) <04:47:48> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step:  810000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.433], Avg: [ 0.368  0.368  0.368  0.368  0.368 -0.368 -0.368 -0.368 -0.368 -0.368] (0.1000) <04:51:26> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step:  820000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.661], Avg: [ 0.367  0.367  0.367  0.367  0.367 -0.367 -0.367 -0.367 -0.367 -0.367] (0.1000) <04:55:05> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step:  830000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.366  0.366  0.366  0.366  0.366 -0.366 -0.366 -0.366 -0.366 -0.366] (0.1000) <04:58:42> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step:  840000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.368  0.368  0.368  0.368  0.368 -0.368 -0.368 -0.368 -0.368 -0.368] (0.1000) <05:02:21> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step:  850000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.031], Avg: [ 0.371  0.371  0.371  0.371  0.371 -0.371 -0.371 -0.371 -0.371 -0.371] (0.1000) <05:06:00> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.1})
Step:  860000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.371  0.371  0.371  0.371  0.371 -0.371 -0.371 -0.371 -0.371 -0.371] (0.1000) <05:09:37> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step:  870000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.436], Avg: [ 0.378  0.378  0.378  0.378  0.378 -0.378 -0.378 -0.378 -0.378 -0.378] (0.1000) <05:13:15> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.1})
Step:  880000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.173], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <05:16:52> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step:  890000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.750], Avg: [ 0.378  0.378  0.378  0.378  0.378 -0.378 -0.378 -0.378 -0.378 -0.378] (0.1000) <05:20:31> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.1})
Step:  900000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.323], Avg: [ 0.383  0.383  0.383  0.383  0.383 -0.383 -0.383 -0.383 -0.383 -0.383] (0.1000) <05:24:09> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step:  910000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.901], Avg: [ 0.382  0.382  0.382  0.382  0.382 -0.382 -0.382 -0.382 -0.382 -0.382] (0.1000) <05:27:48> ({r_i: None, r_t: [ 1.438  1.438  1.438  1.438  1.438], eps: 0.1})
Step:  920000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.935], Avg: [ 0.383  0.383  0.383  0.383  0.383 -0.383 -0.383 -0.383 -0.383 -0.383] (0.1000) <05:31:27> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.1})
Step:  930000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.559], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <05:35:07> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step:  940000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.612], Avg: [ 0.380  0.380  0.380  0.380  0.380 -0.380 -0.380 -0.380 -0.380 -0.380] (0.1000) <05:38:46> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.1})
Step:  950000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <05:42:26> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step:  960000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [0.968], Avg: [ 0.384  0.384  0.384  0.384  0.384 -0.384 -0.384 -0.384 -0.384 -0.384] (0.1000) <05:46:05> ({r_i: None, r_t: [ 2.188  2.188  2.188  2.188  2.188], eps: 0.1})
Step:  970000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.559], Avg: [ 0.383  0.383  0.383  0.383  0.383 -0.383 -0.383 -0.383 -0.383 -0.383] (0.1000) <05:49:45> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step:  980000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.383  0.383  0.383  0.383  0.383 -0.383 -0.383 -0.383 -0.383 -0.383] (0.1000) <05:53:23> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step:  990000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.323], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <05:57:00> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1000000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.612], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <06:00:39> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1010000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.901], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <06:04:19> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1020000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.829], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <06:07:56> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1030000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <06:11:36> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.1})
Step: 1040000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.968], Avg: [ 0.387  0.387  0.387  0.387  0.387 -0.387 -0.387 -0.387 -0.387 -0.387] (0.1000) <06:15:15> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step: 1050000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.500], Avg: [ 0.383  0.383  0.383  0.383  0.383 -0.383 -0.383 -0.383 -0.383 -0.383] (0.1000) <06:18:54> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1060000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.383  0.383  0.383  0.383  0.383 -0.383 -0.383 -0.383 -0.383 -0.383] (0.1000) <06:22:34> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1070000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.829], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <06:26:13> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.1})
Step: 1080000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.935], Avg: [ 0.380  0.380  0.380  0.380  0.380 -0.380 -0.380 -0.380 -0.380 -0.380] (0.1000) <06:29:54> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1090000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.500], Avg: [ 0.378  0.378  0.378  0.378  0.378 -0.378 -0.378 -0.378 -0.378 -0.378] (0.1000) <06:33:33> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1100000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.559], Avg: [ 0.377  0.377  0.377  0.377  0.377 -0.377 -0.377 -0.377 -0.377 -0.377] (0.1000) <06:37:14> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step: 1110000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.968], Avg: [ 0.376  0.376  0.376  0.376  0.376 -0.376 -0.376 -0.376 -0.376 -0.376] (0.1000) <06:40:53> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1120000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.935], Avg: [ 0.376  0.376  0.376  0.376  0.376 -0.376 -0.376 -0.376 -0.376 -0.376] (0.1000) <06:44:34> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1130000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.376  0.376  0.376  0.376  0.376 -0.376 -0.376 -0.376 -0.376 -0.376] (0.1000) <06:48:13> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.1})
Step: 1140000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.661], Avg: [ 0.374  0.374  0.374  0.374  0.374 -0.374 -0.374 -0.374 -0.374 -0.374] (0.1000) <06:51:54> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.1})
Step: 1150000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.829], Avg: [ 0.373  0.373  0.373  0.373  0.373 -0.373 -0.373 -0.373 -0.373 -0.373] (0.1000) <06:55:35> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1160000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.829], Avg: [ 0.374  0.374  0.374  0.374  0.374 -0.374 -0.374 -0.374 -0.374 -0.374] (0.1000) <06:59:13> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.1})
Step: 1170000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.612], Avg: [ 0.374  0.374  0.374  0.374  0.374 -0.374 -0.374 -0.374 -0.374 -0.374] (0.1000) <07:02:53> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.1})
Step: 1180000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] (0.1000) <07:06:32> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1190000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.000], Avg: [ 0.372  0.372  0.372  0.372  0.372 -0.372 -0.372 -0.372 -0.372 -0.372] (0.1000) <07:10:13> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.1})
Step: 1200000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.090], Avg: [ 0.374  0.374  0.374  0.374  0.374 -0.374 -0.374 -0.374 -0.374 -0.374] (0.1000) <07:13:53> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1210000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.376  0.376  0.376  0.376  0.376 -0.376 -0.376 -0.376 -0.376 -0.376] (0.1000) <07:17:33> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1220000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.376  0.376  0.376  0.376  0.376 -0.376 -0.376 -0.376 -0.376 -0.376] (0.1000) <07:21:13> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1230000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.559], Avg: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] (0.1000) <07:24:53> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1240000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.750], Avg: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] (0.1000) <07:28:33> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1250000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.374  0.374  0.374  0.374  0.374 -0.374 -0.374 -0.374 -0.374 -0.374] (0.1000) <07:32:14> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1260000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.061], Avg: [ 0.373  0.373  0.373  0.373  0.373 -0.373 -0.373 -0.373 -0.373 -0.373] (0.1000) <07:35:54> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step: 1270000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.750], Avg: [ 0.372  0.372  0.372  0.372  0.372 -0.372 -0.372 -0.372 -0.372 -0.372] (0.1000) <07:39:35> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.1})
Step: 1280000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.829], Avg: [ 0.374  0.374  0.374  0.374  0.374 -0.374 -0.374 -0.374 -0.374 -0.374] (0.1000) <07:43:15> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.1})
Step: 1290000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.373  0.373  0.373  0.373  0.373 -0.373 -0.373 -0.373 -0.373 -0.373] (0.1000) <07:46:55> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step: 1300000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.968], Avg: [ 0.374  0.374  0.374  0.374  0.374 -0.374 -0.374 -0.374 -0.374 -0.374] (0.1000) <07:50:36> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1310000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] (0.1000) <07:54:14> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.1})
Step: 1320000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.935], Avg: [ 0.376  0.376  0.376  0.376  0.376 -0.376 -0.376 -0.376 -0.376 -0.376] (0.1000) <07:57:54> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.1})
Step: 1330000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.935], Avg: [ 0.377  0.377  0.377  0.377  0.377 -0.377 -0.377 -0.377 -0.377 -0.377] (0.1000) <08:01:34> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1340000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [0.901], Avg: [ 0.379  0.379  0.379  0.379  0.379 -0.379 -0.379 -0.379 -0.379 -0.379] (0.1000) <08:05:14> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1350000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [0.866], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <08:08:54> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.1})
Step: 1360000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.707], Avg: [ 0.379  0.379  0.379  0.379  0.379 -0.379 -0.379 -0.379 -0.379 -0.379] (0.1000) <08:12:35> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1370000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.031], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <08:16:15> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1380000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.559], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <08:19:56> ({r_i: None, r_t: [ 2.125  2.125  2.125  2.125  2.125], eps: 0.1})
Step: 1390000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.380  0.380  0.380  0.380  0.380 -0.380 -0.380 -0.380 -0.380 -0.380] (0.1000) <08:23:36> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1400000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.935], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <08:27:16> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1410000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.829], Avg: [ 0.382  0.382  0.382  0.382  0.382 -0.382 -0.382 -0.382 -0.382 -0.382] (0.1000) <08:30:57> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.1})
Step: 1420000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.500], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <08:34:38> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1430000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.381  0.381  0.381  0.381  0.381 -0.381 -0.381 -0.381 -0.381 -0.381] (0.1000) <08:38:17> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.1})
Step: 1440000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.612], Avg: [ 0.379  0.379  0.379  0.379  0.379 -0.379 -0.379 -0.379 -0.379 -0.379] (0.1000) <08:42:06> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1450000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.118], Avg: [ 0.382  0.382  0.382  0.382  0.382 -0.382 -0.382 -0.382 -0.382 -0.382] (0.1000) <08:45:57> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1460000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.392], Avg: [ 0.385  0.385  0.385  0.385  0.385 -0.385 -0.385 -0.385 -0.385 -0.385] (0.1000) <08:49:52> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1470000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <08:53:50> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.1})
Step: 1480000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.061], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <08:57:50> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1490000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.661], Avg: [ 0.387  0.387  0.387  0.387  0.387 -0.387 -0.387 -0.387 -0.387 -0.387] (0.1000) <09:01:48> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1500000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.387  0.387  0.387  0.387  0.387 -0.387 -0.387 -0.387 -0.387 -0.387] (0.1000) <09:05:50> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.1})
Step: 1510000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.118], Avg: [ 0.389  0.389  0.389  0.389  0.389 -0.389 -0.389 -0.389 -0.389 -0.389] (0.1000) <09:09:54> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1520000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <09:13:54> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step: 1530000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <09:17:54> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step: 1540000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.389  0.389  0.389  0.389  0.389 -0.389 -0.389 -0.389 -0.389 -0.389] (0.1000) <09:21:55> ({r_i: None, r_t: [ 2.188  2.188  2.188  2.188  2.188], eps: 0.1})
Step: 1550000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.661], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <09:25:57> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1560000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.935], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <09:29:42> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1570000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.661], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <09:33:27> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.1})
Step: 1580000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.750], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <09:37:10> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1590000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.901], Avg: [ 0.387  0.387  0.387  0.387  0.387 -0.387 -0.387 -0.387 -0.387 -0.387] (0.1000) <09:40:59> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step: 1600000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.829], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <09:44:45> ({r_i: None, r_t: [ 0.875  0.875  0.875  0.875  0.875], eps: 0.1})
Step: 1610000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.387  0.387  0.387  0.387  0.387 -0.387 -0.387 -0.387 -0.387 -0.387] (0.1000) <09:48:51> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.1})
Step: 1620000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.750], Avg: [ 0.387  0.387  0.387  0.387  0.387 -0.387 -0.387 -0.387 -0.387 -0.387] (0.1000) <09:52:55> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1630000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <09:57:07> ({r_i: None, r_t: [ 1.438  1.438  1.438  1.438  1.438], eps: 0.1})
Step: 1640000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.559], Avg: [ 0.385  0.385  0.385  0.385  0.385 -0.385 -0.385 -0.385 -0.385 -0.385] (0.1000) <10:01:15> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.1})
Step: 1650000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.750], Avg: [ 0.384  0.384  0.384  0.384  0.384 -0.384 -0.384 -0.384 -0.384 -0.384] (0.1000) <10:05:13> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1660000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.061], Avg: [ 0.385  0.385  0.385  0.385  0.385 -0.385 -0.385 -0.385 -0.385 -0.385] (0.1000) <10:09:16> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.1})
Step: 1670000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.901], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <10:13:07> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1680000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.901], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <10:16:58> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1690000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.707], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <10:20:49> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1700000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.387  0.387  0.387  0.387  0.387 -0.387 -0.387 -0.387 -0.387 -0.387] (0.1000) <10:24:40> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1710000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.559], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <10:28:30> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step: 1720000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.968], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <10:32:29> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1730000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.750], Avg: [ 0.386  0.386  0.386  0.386  0.386 -0.386 -0.386 -0.386 -0.386 -0.386] (0.1000) <10:36:28> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1740000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.061], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <10:40:15> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1750000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.661], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <10:44:00> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step: 1760000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.389  0.389  0.389  0.389  0.389 -0.389 -0.389 -0.389 -0.389 -0.389] (0.1000) <10:47:43> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1770000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.661], Avg: [ 0.389  0.389  0.389  0.389  0.389 -0.389 -0.389 -0.389 -0.389 -0.389] (0.1000) <10:51:28> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1780000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.612], Avg: [ 0.389  0.389  0.389  0.389  0.389 -0.389 -0.389 -0.389 -0.389 -0.389] (0.1000) <10:55:11> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1790000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <10:58:53> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1800000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.750], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <11:02:36> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step: 1810000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.323], Avg: [ 0.392  0.392  0.392  0.392  0.392 -0.392 -0.392 -0.392 -0.392 -0.392] (0.1000) <11:06:20> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.1})
Step: 1820000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.392  0.392  0.392  0.392  0.392 -0.392 -0.392 -0.392 -0.392 -0.392] (0.1000) <11:10:04> ({r_i: None, r_t: [ 1.438  1.438  1.438  1.438  1.438], eps: 0.1})
Step: 1830000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.612], Avg: [ 0.391  0.391  0.391  0.391  0.391 -0.391 -0.391 -0.391 -0.391 -0.391] (0.1000) <11:13:50> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.1})
Step: 1840000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.829], Avg: [ 0.391  0.391  0.391  0.391  0.391 -0.391 -0.391 -0.391 -0.391 -0.391] (0.1000) <11:17:35> ({r_i: None, r_t: [ 2.125  2.125  2.125  2.125  2.125], eps: 0.1})
Step: 1850000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.901], Avg: [ 0.391  0.391  0.391  0.391  0.391 -0.391 -0.391 -0.391 -0.391 -0.391] (0.1000) <11:21:19> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1860000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.391  0.391  0.391  0.391  0.391 -0.391 -0.391 -0.391 -0.391 -0.391] (0.1000) <11:25:04> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.1})
Step: 1870000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <11:28:48> ({r_i: None, r_t: [ 0.875  0.875  0.875  0.875  0.875], eps: 0.1})
Step: 1880000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.791], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <11:32:32> ({r_i: None, r_t: [ 1.438  1.438  1.438  1.438  1.438], eps: 0.1})
Step: 1890000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <11:36:18> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1900000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.661], Avg: [ 0.389  0.389  0.389  0.389  0.389 -0.389 -0.389 -0.389 -0.389 -0.389] (0.1000) <11:39:59> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.1})
Step: 1910000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.829], Avg: [ 0.389  0.389  0.389  0.389  0.389 -0.389 -0.389 -0.389 -0.389 -0.389] (0.1000) <11:43:42> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1920000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.433], Avg: [ 0.388  0.388  0.388  0.388  0.388 -0.388 -0.388 -0.388 -0.388 -0.388] (0.1000) <11:47:26> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.1})
Step: 1930000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.146], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <11:51:17> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.1})
Step: 1940000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [1.250], Avg: [ 0.391  0.391  0.391  0.391  0.391 -0.391 -0.391 -0.391 -0.391 -0.391] (0.1000) <11:55:02> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1950000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.661], Avg: [ 0.391  0.391  0.391  0.391  0.391 -0.391 -0.391 -0.391 -0.391 -0.391] (0.1000) <11:58:48> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1960000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.391  0.391  0.391  0.391  0.391 -0.391 -0.391 -0.391 -0.391 -0.391] (0.1000) <12:02:34> ({r_i: None, r_t: [ 1.000  1.000  1.000  1.000  1.000], eps: 0.1})
Step: 1970000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.433], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <12:06:21> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1980000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.392  0.392  0.392  0.392  0.392 -0.392 -0.392 -0.392 -0.392 -0.392] (0.1000) <12:10:06> ({r_i: None, r_t: [ 1.312  1.312  1.312  1.312  1.312], eps: 0.1})
Step: 1990000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.391  0.391  0.391  0.391  0.391 -0.391 -0.391 -0.391 -0.391 -0.391] (0.1000) <12:13:50> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.1})
Step: 2000000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.500], Avg: [ 0.390  0.390  0.390  0.390  0.390 -0.390 -0.390 -0.390 -0.390 -0.390] (0.1000) <12:17:31> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})

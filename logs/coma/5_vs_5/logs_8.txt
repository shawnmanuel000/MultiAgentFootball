Model: <class 'multiagent.coma.COMAAgent'>, Dir: 5_vs_5, Date: 08/03/2020 14:45:56
num_envs: 16,
state_size: [(1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115), (1, 115)],
action_size: [[1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19], [1, 19]],
action_space: [MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19]), MultiDiscrete([19])],
envs: <class 'utils.envs.EnvManager'>,
reward_shape: False,
icm: False,

import copy
import torch
import numpy as np
from models.rand import MultiagentReplayBuffer3
from utils.network import PTACNetwork, PTACAgent, Conv, INPUT_LAYER, ACTOR_HIDDEN, CRITIC_HIDDEN, LEARN_RATE, NUM_STEPS, EPS_MIN, ADVANTAGE_DECAY, DISCOUNT_RATE, one_hot_from_indices

EPS_MIN = 0.1               	# The lower limit proportion of random to greedy actions to take
EPS_DECAY = 0.99             	# The rate at which eps decays from EPS_MAX to EPS_MIN
LEARN_RATE = 0.0003				# Sets how much we want to update the network weights at each training step
TARGET_UPDATE_RATE = 0.001		# How frequently we want to copy the local network to the target network (for double DQNs)
REPLAY_BATCH_SIZE = 10			# Number of episodes to train on for each train step
EPISODE_BUFFER = 64				# Sets the maximum length of the replay buffer
TIME_BATCHES = 50				# The number of batches of time steps to train critic in reverse time sequence
NUM_STEPS = 500					# The number of steps to collect experience in sequence for each GAE calculation

class COMAActor(torch.nn.Module):
	def __init__(self, state_size, action_size):
		super().__init__()
		self.layer1 = torch.nn.Linear(state_size[-1], ACTOR_HIDDEN)
		self.layer2 = torch.nn.Linear(ACTOR_HIDDEN, ACTOR_HIDDEN)
		self.layer3 = torch.nn.Linear(ACTOR_HIDDEN, action_size[-1])

	def forward(self, state, eps):
		state = self.layer1(state).relu()
		state = self.layer2(state).relu()
		action_probs = self.layer3(state).softmax(-1)
		action_probs = ((1 - eps) * action_probs + torch.ones_like(action_probs).to(state.device) * eps/action_probs.size(-1))
		action = torch.distributions.Categorical(action_probs).sample().long()
		return one_hot_from_indices(action, action_probs.size(-1)), action_probs

class COMACritic(torch.nn.Module):
	def __init__(self, state_size, action_size):
		super().__init__()
		self.layer1 = torch.nn.Linear(state_size[-1], CRITIC_HIDDEN)
		self.layer2 = torch.nn.Linear(CRITIC_HIDDEN, CRITIC_HIDDEN)
		self.layer3 = torch.nn.Linear(CRITIC_HIDDEN, action_size[-1])

	def forward(self, state):
		state = self.layer1(state).relu()
		state = self.layer2(state).relu()
		q_values = self.layer3(state)
		return q_values

class COMANetwork(PTACNetwork):
	def __init__(self, state_size, action_size, lr=LEARN_RATE, tau=TARGET_UPDATE_RATE, gpu=True, load=""):
		self.n_agents = len(state_size)
		self.actor = COMAActor([state_size[0][-1] + action_size[0][-1] + self.n_agents], action_size[0])
		self.critic = lambda s,a: COMACritic([np.sum([np.prod(s) for s in state_size]) + 2*np.sum([np.prod(a) for a in action_size]) + state_size[0][-1] + self.n_agents], action_size[0])
		super().__init__(state_size, action_size, actor=lambda s,a: self.actor, critic=self.critic, gpu=gpu, load=load, name="coma")

	def get_action(self, inputs, eps, grad=False, numpy=False):
		with torch.enable_grad() if grad else torch.no_grad():
			action, action_probs = self.actor_local(inputs, eps)
			return [x.cpu().numpy() if numpy else x for x in [action, action_probs]]

	def optimize(self, actions, critic_inputs, actor_inputs, rewards, dones, eps):
		q_next_value = self.critic_target(critic_inputs)
		q_target_taken = torch.gather(q_next_value, dim=-1, index=actions.argmax(-1, keepdims=True)).squeeze(-1)
		q_target_taken = torch.cat([q_target_taken, torch.zeros_like(q_target_taken[:,-1]).unsqueeze(1)], dim=1)
		q_target = self.build_td_lambda_targets(rewards, dones, q_target_taken, self.n_agents)
		q_value = torch.zeros_like(q_next_value)
		t_batch = max(rewards.size(1)//TIME_BATCHES, 1)
		for t in reversed(range(0,min(rewards.size(1), t_batch*TIME_BATCHES),t_batch)):
			q_value[:,t:t+t_batch] = self.critic_local(critic_inputs[:,t:t+t_batch])
			q_taken = torch.gather(q_value[:,t:t+t_batch], dim=-1, index=actions[:,t:t+t_batch].argmax(-1, keepdims=True)).squeeze(-1)
			critic_error = (q_taken - q_target[:,t:t+t_batch].detach())
			critic_loss = critic_error.pow(2).mean()
			self.step(self.critic_optimizer, critic_loss, self.critic_local.parameters(), retain=t>0)
		self.soft_copy(self.critic_local, self.critic_target)

		mac_out = torch.stack([self.get_action(actor_inputs[:,t], eps, grad=True)[1] for t in range(actor_inputs.shape[1])], dim=1)
		q_value = q_value.reshape(-1, mac_out.shape[-1])
		pi = mac_out.view(-1, mac_out.shape[-1])
		baseline = (pi * q_value).sum(-1).detach()
		q_taken = torch.gather(q_value, dim=1, index=actions.argmax(-1).reshape(-1, 1)).squeeze(1)
		pi_taken = torch.gather(pi, dim=1, index=actions.argmax(-1).reshape(-1, 1)).squeeze(1)
		advantages = (q_taken - baseline).detach()
		actor_loss = - (advantages * pi_taken.log()).mean()
		self.step(self.actor_optimizer, actor_loss, self.actor_local.parameters())

	@staticmethod
	def build_td_lambda_targets(rewards, done, target_qs, n_agents, gamma=DISCOUNT_RATE, lamda=ADVANTAGE_DECAY):
		ret = target_qs.new_zeros(*target_qs.shape)
		ret[:,-1] = target_qs[:,-1]*(1-torch.sum(done, dim=1))
		for t in range(ret.shape[1]-2, -1, -1):
			ret[:,t] = lamda*gamma*ret[:,t+1] + (rewards[:,t]+(1-lamda)*gamma*target_qs[:,t+1]*(1-done[:,t]))
		return ret[:,0:-1]

	def save_model(self, dirname="pytorch", name="best"):
		super().save_model(self.name, dirname, name)
		
	def load_model(self, dirname="pytorch", name="best"):
		super().load_model(self.name, dirname, name)

class COMAAgent(PTACAgent):
	def __init__(self, state_size, action_size, update_freq=NUM_STEPS, lr=LEARN_RATE, decay=EPS_DECAY, gpu=True, load=None):
		super().__init__(state_size, action_size, COMANetwork, lr=lr, update_freq=update_freq, decay=decay, gpu=gpu, load=load)
		self.replay_buffer = MultiagentReplayBuffer3(EPISODE_BUFFER, state_size, action_size)
		self.n_agents = len(action_size)

	def get_action(self, state, eps=None, sample=True, numpy=True):
		eps = self.eps if eps is None else eps
		obs = np.concatenate(state, -2)
		if not hasattr(self, "action"): self.action = np.zeros([*obs.shape[:-1], self.action_size[0][-1]])
		agent_ids = np.repeat(np.expand_dims(np.eye(self.n_agents), 0), repeats=obs.shape[0], axis=0)
		inputs = torch.from_numpy(np.concatenate([obs, self.action, agent_ids], -1)).float().to(self.network.device)
		self.action = self.network.get_action(inputs, eps=self.eps, numpy=True)[0]
		return np.split(self.action, len(self.action_size), axis=-2)

	def train(self, state, action, next_state, reward, done):
		self.step = 0 if not hasattr(self, "step") else self.step + 1
		self.buffer.append((state, action, reward, done))
		if np.any(done[0]):
			states, actions, rewards, dones = map(lambda x: [np.stack(t, axis=1) for t in list(zip(*x))], zip(*self.buffer))
			self.buffer.clear()
			self.replay_buffer.add((states, actions, rewards, dones))
		if (self.step % self.update_freq)==0 and len(self.replay_buffer) >= REPLAY_BATCH_SIZE:
			sample = self.replay_buffer.sample(REPLAY_BATCH_SIZE, lambda x: torch.Tensor(x).to(self.network.device))
			states, actions, rewards, dones = map(lambda x: torch.stack(x,2), sample)
			state = states.repeat(1,1,1,self.n_agents,1).view(*states.shape[:3],-1)
			obs = states.squeeze(-2)
			actions = actions.squeeze(-2)
			actions_joint = actions.view(*actions.shape[:2],1,-1).repeat(1,1,self.n_agents,1)
			agent_mask = (1 - torch.eye(self.n_agents, device=self.network.device))
			agent_mask = agent_mask.view(-1, 1).repeat(1, self.action_size[0][-1]).view(self.n_agents, -1).unsqueeze(0).unsqueeze(0)
			action_masked = actions_joint * agent_mask
			last_actions = torch.cat([torch.zeros_like(actions[:, 0:1]), actions[:, :-1]], dim=1)
			last_actions_joint = last_actions.view(*last_actions.shape[:2],1,-1).repeat(1,1,self.n_agents,1)
			agent_inds = torch.eye(self.n_agents, device=self.network.device).unsqueeze(0).unsqueeze(0).expand(*obs.shape[:2],-1,-1)
			critic_inputs = torch.cat([state, obs, action_masked, last_actions_joint, agent_inds], dim=-1)
			actor_inputs = torch.cat([obs, last_actions, agent_inds], dim=-1)
			self.network.optimize(actions, critic_inputs, actor_inputs, rewards.mean(-1, keepdims=True), dones.mean(-1, keepdims=True), self.eps)
		if np.any(done[0]): self.eps = max(self.eps * self.decay, EPS_MIN)

REG_LAMBDA = 1e-6             	# Penalty multiplier to apply for the size of the network weights
LEARN_RATE = 0.0003           	# Sets how much we want to update the network weights at each training step
TARGET_UPDATE_RATE = 0.001   	# How frequently we want to copy the local network to the target network (for double DQNs)
INPUT_LAYER = 256				# The number of output nodes from the first layer to Actor and Critic networks
ACTOR_HIDDEN = 256				# The number of nodes in the hidden layers of the Actor network
CRITIC_HIDDEN = 512				# The number of nodes in the hidden layers of the Critic networks
DISCOUNT_RATE = 0.998			# The discount rate to use in the Bellman Equation
NUM_STEPS = 500					# The number of steps to collect experience in sequence for each GAE calculation
EPS_MAX = 1.0                 	# The starting proportion of random to greedy actions to take
EPS_MIN = 0.001               	# The lower limit proportion of random to greedy actions to take
EPS_DECAY = 0.980             	# The rate at which eps decays from EPS_MAX to EPS_MIN
ADVANTAGE_DECAY = 0.95			# The discount factor for the cumulative GAE calculation
MAX_BUFFER_SIZE = 1000000      	# Sets the maximum length of the replay buffer
REPLAY_BATCH_SIZE = 32        	# How many experience tuples to sample from the buffer for each train step

import gym
import argparse
import numpy as np
import particle_envs.make_env as pgym
import football.gfootball.env as ggym
from models.ppo import PPOAgent
from models.sac import SACAgent
from models.ddqn import DDQNAgent
from models.ddpg import DDPGAgent
from models.rand import RandomAgent
from multiagent.coma import COMAAgent
from multiagent.maddpg import MADDPGAgent
from multiagent.mappo import MAPPOAgent
from utils.wrappers import ParallelAgent, DoubleAgent, SelfPlayAgent, ParticleTeamEnv, FootballTeamEnv, TrainEnv
from utils.envs import EnsembleEnv, EnvManager, EnvWorker, MPI_SIZE, MPI_RANK
from utils.misc import Logger, rollout
np.set_printoptions(precision=3)

gym_envs = ["CartPole-v0", "MountainCar-v0", "Acrobot-v1", "Pendulum-v0", "MountainCarContinuous-v0", "CarRacing-v0", "BipedalWalker-v2", "BipedalWalkerHardcore-v2", "LunarLander-v2", "LunarLanderContinuous-v2"]
gfb_envs = ["academy_empty_goal_close", "academy_empty_goal", "academy_run_to_score", "academy_run_to_score_with_keeper", "academy_single_goal_versus_lazy", "academy_3_vs_1_with_keeper", "1_vs_1_easy", "3_vs_3_custom", "5_vs_5", "11_vs_11_stochastic", "test_example_multiagent"]
ptc_envs = ["simple_adversary", "simple_speaker_listener", "simple_tag", "simple_spread", "simple_push"]
env_name = gym_envs[0]
env_name = gfb_envs[-3]
# env_name = ptc_envs[-2]

def make_env(env_name=env_name, log=False, render=False, reward_shape=False):
	if env_name in gym_envs: return TrainEnv(gym.make(env_name))
	if env_name in ptc_envs: return ParticleTeamEnv(pgym.make_env(env_name))
	ballr = lambda x,y: (np.maximum if x>0 else np.minimum)(x - np.abs(y)*np.sign(x), 0.5*x)
	reward_fn = lambda obs,reward: [(ballr(o[0,88], o[0,89]) + o[0,95]-o[0,96] + 2*r)/4 for o,r in zip(obs,reward)]
	return FootballTeamEnv(ggym, env_name, reward_fn if reward_shape else None)

def run(model, steps=10000, ports=16, env_name=env_name, trial_at=10000, save_at=10, checkpoint=True, save_best=False, log=True, render=False, reward_shape=False, icm=False):
	envs = (EnvManager if type(ports) == list or MPI_SIZE > 1 else EnsembleEnv)(lambda: make_env(env_name, reward_shape=reward_shape), ports)
	agent = (DoubleAgent if envs.env.self_play else ParallelAgent)(envs.state_size, envs.action_size, model, envs.num_envs, load="", gpu=True, agent2=RandomAgent, save_dir=env_name, icm=icm) 
	logger = Logger(model, env_name, num_envs=envs.num_envs, state_size=agent.state_size, action_size=envs.action_size, action_space=envs.env.action_space, envs=type(envs), reward_shape=reward_shape, icm=icm)
	states = envs.reset(train=True)
	total_rewards = []
	for s in range(steps+1):
		env_actions, actions, states = agent.get_env_action(envs.env, states)
		next_states, rewards, dones, _ = envs.step(env_actions, train=True)
		agent.train(states, actions, next_states, rewards, dones)
		states = next_states
		if s%trial_at == 0:
			rollouts = rollout(envs, agent, render=render)
			total_rewards.append(np.mean(rollouts, axis=-1))
			if checkpoint and len(total_rewards) % save_at==0: agent.save_model(env_name, "checkpoint")
			if save_best and np.all(total_rewards[-1] >= np.max(total_rewards, axis=-1)): agent.save_model(env_name)
			if log: logger.log(f"Step: {s:7d}, Reward: {total_rewards[-1]} [{np.std(rollouts):4.3f}], Avg: {np.mean(total_rewards, axis=0)} ({agent.eps:.4f})", agent.get_stats())

def trial(model, env_name, render):
	envs = EnsembleEnv(lambda: make_env(env_name, log=True, render=render), 0)
	agent = (DoubleAgent if envs.env.self_play else ParallelAgent)(envs.state_size, envs.action_size, model, gpu=False, load=f"{env_name}", agent2=RandomAgent, save_dir=env_name)
	print(f"Reward: {np.mean([rollout(envs.env, agent, eps=0.0, render=True) for _ in range(5)], axis=0)}")
	envs.close()

def parse_args():
	parser = argparse.ArgumentParser(description="A3C Trainer")
	parser.add_argument("--workerports", type=int, default=[16], nargs="+", help="The list of worker ports to connect to")
	parser.add_argument("--selfport", type=int, default=None, help="Which port to listen on (as a worker server)")
	parser.add_argument("--model", type=str, default="coma", help="Which reinforcement learning algorithm to use")
	parser.add_argument("--steps", type=int, default=200000, help="Number of steps to train the agent")
	parser.add_argument("--reward_shape", action="store_true", help="Whether to shape rewards for football")
	parser.add_argument("--icm", action="store_true", help="Whether to use intrinsic motivation")
	parser.add_argument("--render", action="store_true", help="Whether to render during training")
	parser.add_argument("--trial", action="store_true", help="Whether to show a trial run")
	parser.add_argument("--env", type=str, default="", help="Name of env to use")
	return parser.parse_args()

if __name__ == "__main__":
	args = parse_args()
	env_name = env_name if args.env not in [*gym_envs, *gfb_envs, *ptc_envs] else args.env
	models = {"ddpg":DDPGAgent, "ppo":PPOAgent, "sac":SACAgent, "ddqn":DDQNAgent, "maddpg":MADDPGAgent, "mappo":MAPPOAgent, "coma":COMAAgent, "rand":RandomAgent}
	model = models[args.model] if args.model in models else RandomAgent
	if args.trial:
		trial(model=model, env_name=env_name, render=args.render)
	elif args.selfport is not None or MPI_RANK>0 :
		EnvWorker(self_port=args.selfport, make_env=make_env).start()
	else:
		run(model=model, steps=args.steps, ports=args.workerports[0] if len(args.workerports)==1 else args.workerports, env_name=env_name, render=args.render, reward_shape=args.reward_shape, icm=args.icm)


Step:       0, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] (1.0000) <00:00:00> ({r_i: None, r_t: [ 0.000  0.000  0.000  0.000  0.000], eps: 1.0})
Step:   10000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.559], Avg: [ 0.344  0.344  0.344  0.344  0.344 -0.344 -0.344 -0.344 -0.344 -0.344] (0.9703) <00:04:47> ({r_i: None, r_t: [-0.062 -0.062 -0.062 -0.062 -0.062], eps: 0.97})
Step:   20000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.935], Avg: [ 0.271  0.271  0.271  0.271  0.271 -0.271 -0.271 -0.271 -0.271 -0.271] (0.9415) <00:10:01> ({r_i: None, r_t: [-0.062 -0.062 -0.062 -0.062 -0.062], eps: 0.941})
Step:   30000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [0.661], Avg: [ 0.156  0.156  0.156  0.156  0.156 -0.156 -0.156 -0.156 -0.156 -0.156] (0.9044) <00:15:06> ({r_i: None, r_t: [ 0.438  0.438  0.438  0.438  0.438], eps: 0.904})
Step:   40000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [1.225], Avg: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] (0.8775) <00:20:10> ({r_i: None, r_t: [-1.000 -1.000 -1.000 -1.000 -1.000], eps: 0.878})
Step:   50000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.521], Avg: [ 0.115  0.115  0.115  0.115  0.115 -0.115 -0.115 -0.115 -0.115 -0.115] (0.8515) <00:25:16> ({r_i: None, r_t: [-0.250 -0.250 -0.250 -0.250 -0.250], eps: 0.851})
Step:   60000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.000], Avg: [ 0.116  0.116  0.116  0.116  0.116 -0.116 -0.116 -0.116 -0.116 -0.116] (0.8179) <00:30:20> ({r_i: None, r_t: [ 0.125  0.125  0.125  0.125  0.125], eps: 0.818})
Step:   70000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.000], Avg: [ 0.133  0.133  0.133  0.133  0.133 -0.133 -0.133 -0.133 -0.133 -0.133] (0.7936) <00:35:26> ({r_i: None, r_t: [ 0.125  0.125  0.125  0.125  0.125], eps: 0.794})
Step:   80000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.299], Avg: [ 0.153  0.153  0.153  0.153  0.153 -0.153 -0.153 -0.153 -0.153 -0.153] (0.7700) <00:40:32> ({r_i: None, r_t: [ 0.875  0.875  0.875  0.875  0.875], eps: 0.77})
Step:   90000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.162  0.162  0.162  0.162  0.162 -0.162 -0.162 -0.162 -0.162 -0.162] (0.7397) <00:45:39> ({r_i: None, r_t: [ 0.562  0.562  0.562  0.562  0.562], eps: 0.74})
Step:  100000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.935], Avg: [ 0.148  0.148  0.148  0.148  0.148 -0.148 -0.148 -0.148 -0.148 -0.148] (0.7177) <00:50:50> ({r_i: None, r_t: [ 0.812  0.812  0.812  0.812  0.812], eps: 0.718})
Step:  110000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.000], Avg: [ 0.146  0.146  0.146  0.146  0.146 -0.146 -0.146 -0.146 -0.146 -0.146] (0.6964) <00:56:05> ({r_i: None, r_t: [ 0.562  0.562  0.562  0.562  0.562], eps: 0.696})
Step:  120000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.173  0.173  0.173  0.173  0.173 -0.173 -0.173 -0.173 -0.173 -0.173] (0.6690) <01:00:49> ({r_i: None, r_t: [ 0.125  0.125  0.125  0.125  0.125], eps: 0.669})
Step:  130000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [1.061], Avg: [ 0.179  0.179  0.179  0.179  0.179 -0.179 -0.179 -0.179 -0.179 -0.179] (0.6491) <01:05:19> ({r_i: None, r_t: [ 0.375  0.375  0.375  0.375  0.375], eps: 0.649})
Step:  140000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [1.090], Avg: [ 0.196  0.196  0.196  0.196  0.196 -0.196 -0.196 -0.196 -0.196 -0.196] (0.6298) <01:09:52> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.63})
Step:  150000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.791], Avg: [ 0.199  0.199  0.199  0.199  0.199 -0.199 -0.199 -0.199 -0.199 -0.199] (0.6050) <01:14:19> ({r_i: None, r_t: [ 1.250  1.250  1.250  1.250  1.250], eps: 0.605})
Step:  160000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [1.225], Avg: [ 0.195  0.195  0.195  0.195  0.195 -0.195 -0.195 -0.195 -0.195 -0.195] (0.5870) <01:18:52> ({r_i: None, r_t: [ 1.062  1.062  1.062  1.062  1.062], eps: 0.587})
Step:  170000, Reward: [-0.438 -0.438 -0.438 -0.438 -0.438  0.438  0.438  0.438  0.438  0.438] [1.250], Avg: [ 0.160  0.160  0.160  0.160  0.160 -0.160 -0.160 -0.160 -0.160 -0.160] (0.5696) <01:23:16> ({r_i: None, r_t: [ 0.125  0.125  0.125  0.125  0.125], eps: 0.57})
Step:  180000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [1.031], Avg: [ 0.148  0.148  0.148  0.148  0.148 -0.148 -0.148 -0.148 -0.148 -0.148] (0.5472) <01:27:38> ({r_i: None, r_t: [-0.250 -0.250 -0.250 -0.250 -0.250], eps: 0.547})
Step:  190000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.968], Avg: [ 0.150  0.150  0.150  0.150  0.150 -0.150 -0.150 -0.150 -0.150 -0.150] (0.5309) <01:31:59> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.531})
Step:  200000, Reward: [-0.125 -0.125 -0.125 -0.125 -0.125  0.125  0.125  0.125  0.125  0.125] [1.173], Avg: [ 0.137  0.137  0.137  0.137  0.137 -0.137 -0.137 -0.137 -0.137 -0.137] (0.5151) <01:36:21> ({r_i: None, r_t: [-0.250 -0.250 -0.250 -0.250 -0.250], eps: 0.515})
Step:  210000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [0.750], Avg: [ 0.116  0.116  0.116  0.116  0.116 -0.116 -0.116 -0.116 -0.116 -0.116] (0.4948) <01:40:53> ({r_i: None, r_t: [-0.688 -0.688 -0.688 -0.688 -0.688], eps: 0.495})
Step:  220000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.829], Avg: [ 0.109  0.109  0.109  0.109  0.109 -0.109 -0.109 -0.109 -0.109 -0.109] (0.4801) <01:45:24> ({r_i: None, r_t: [ 0.438  0.438  0.438  0.438  0.438], eps: 0.48})
Step:  230000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.901], Avg: [ 0.117  0.117  0.117  0.117  0.117 -0.117 -0.117 -0.117 -0.117 -0.117] (0.4659) <01:49:58> ({r_i: None, r_t: [-0.188 -0.188 -0.188 -0.188 -0.188], eps: 0.466})
Step:  240000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.500], Avg: [ 0.112  0.112  0.112  0.112  0.112 -0.112 -0.112 -0.112 -0.112 -0.112] (0.4475) <01:54:32> ({r_i: None, r_t: [-0.188 -0.188 -0.188 -0.188 -0.188], eps: 0.448})
Step:  250000, Reward: [-0.250 -0.250 -0.250 -0.250 -0.250  0.250  0.250  0.250  0.250  0.250] [1.061], Avg: [ 0.099  0.099  0.099  0.099  0.099 -0.099 -0.099 -0.099 -0.099 -0.099] (0.4342) <01:59:05> ({r_i: None, r_t: [-0.312 -0.312 -0.312 -0.312 -0.312], eps: 0.434})
Step:  260000, Reward: [-0.312 -0.312 -0.312 -0.312 -0.312  0.312  0.312  0.312  0.312  0.312] [1.090], Avg: [ 0.083  0.083  0.083  0.083  0.083 -0.083 -0.083 -0.083 -0.083 -0.083] (0.4213) <02:03:47> ({r_i: None, r_t: [-0.812 -0.812 -0.812 -0.812 -0.812], eps: 0.421})
Step:  270000, Reward: [-0.375 -0.375 -0.375 -0.375 -0.375  0.375  0.375  0.375  0.375  0.375] [0.935], Avg: [ 0.067  0.067  0.067  0.067  0.067 -0.067 -0.067 -0.067 -0.067 -0.067] (0.4047) <02:08:32> ({r_i: None, r_t: [-0.938 -0.938 -0.938 -0.938 -0.938], eps: 0.405})
Step:  280000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [1.090], Avg: [ 0.058  0.058  0.058  0.058  0.058 -0.058 -0.058 -0.058 -0.058 -0.058] (0.3927) <02:13:16> ({r_i: None, r_t: [-0.250 -0.250 -0.250 -0.250 -0.250], eps: 0.393})
Step:  290000, Reward: [-0.188 -0.188 -0.188 -0.188 -0.188  0.188  0.188  0.188  0.188  0.188] [0.433], Avg: [ 0.050  0.050  0.050  0.050  0.050 -0.050 -0.050 -0.050 -0.050 -0.050] (0.3810) <02:18:02> ({r_i: None, r_t: [ 0.125  0.125  0.125  0.125  0.125], eps: 0.381})
Step:  300000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.661], Avg: [ 0.050  0.050  0.050  0.050  0.050 -0.050 -0.050 -0.050 -0.050 -0.050] (0.3660) <02:22:46> ({r_i: None, r_t: [ 0.812  0.812  0.812  0.812  0.812], eps: 0.366})
Step:  310000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.791], Avg: [ 0.053  0.053  0.053  0.053  0.053 -0.053 -0.053 -0.053 -0.053 -0.053] (0.3552) <02:27:24> ({r_i: None, r_t: [ 0.750  0.750  0.750  0.750  0.750], eps: 0.355})
Step:  320000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.612], Avg: [ 0.055  0.055  0.055  0.055  0.055 -0.055 -0.055 -0.055 -0.055 -0.055] (0.3446) <02:32:07> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.345})
Step:  330000, Reward: [ 0.125  0.125  0.125  0.125  0.125 -0.125 -0.125 -0.125 -0.125 -0.125] [0.707], Avg: [ 0.057  0.057  0.057  0.057  0.057 -0.057 -0.057 -0.057 -0.057 -0.057] (0.3310) <02:36:51> ({r_i: None, r_t: [ 1.188  1.188  1.188  1.188  1.188], eps: 0.331})
Step:  340000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.559], Avg: [ 0.054  0.054  0.054  0.054  0.054 -0.054 -0.054 -0.054 -0.054 -0.054] (0.3212) <02:41:29> ({r_i: None, r_t: [ 0.938  0.938  0.938  0.938  0.938], eps: 0.321})
Step:  350000, Reward: [-0.375 -0.375 -0.375 -0.375 -0.375  0.375  0.375  0.375  0.375  0.375] [1.414], Avg: [ 0.042  0.042  0.042  0.042  0.042 -0.042 -0.042 -0.042 -0.042 -0.042] (0.3117) <02:46:05> ({r_i: None, r_t: [-0.938 -0.938 -0.938 -0.938 -0.938], eps: 0.312})
Step:  360000, Reward: [ 0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000  0.000] [0.707], Avg: [ 0.041  0.041  0.041  0.041  0.041 -0.041 -0.041 -0.041 -0.041 -0.041] (0.2994) <02:50:38> ({r_i: None, r_t: [-1.375 -1.375 -1.375 -1.375 -1.375], eps: 0.299})
Step:  370000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.829], Avg: [ 0.054  0.054  0.054  0.054  0.054 -0.054 -0.054 -0.054 -0.054 -0.054] (0.2905) <02:55:11> ({r_i: None, r_t: [-0.562 -0.562 -0.562 -0.562 -0.562], eps: 0.29})
Step:  380000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.118], Avg: [ 0.066  0.066  0.066  0.066  0.066 -0.066 -0.066 -0.066 -0.066 -0.066] (0.2819) <02:59:46> ({r_i: None, r_t: [ 0.812  0.812  0.812  0.812  0.812], eps: 0.282})
Step:  390000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.935], Avg: [ 0.077  0.077  0.077  0.077  0.077 -0.077 -0.077 -0.077 -0.077 -0.077] (0.2708) <03:04:26> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.271})
Step:  400000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.087  0.087  0.087  0.087  0.087 -0.087 -0.087 -0.087 -0.087 -0.087] (0.2627) <03:09:02> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.263})
Step:  410000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.707], Avg: [ 0.094  0.094  0.094  0.094  0.094 -0.094 -0.094 -0.094 -0.094 -0.094] (0.2549) <03:13:31> ({r_i: None, r_t: [ 1.375  1.375  1.375  1.375  1.375], eps: 0.255})
Step:  420000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.323], Avg: [ 0.115  0.115  0.115  0.115  0.115 -0.115 -0.115 -0.115 -0.115 -0.115] (0.2449) <03:18:04> ({r_i: None, r_t: [ 2.375  2.375  2.375  2.375  2.375], eps: 0.245})
Step:  430000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [1.146], Avg: [ 0.122  0.122  0.122  0.122  0.122 -0.122 -0.122 -0.122 -0.122 -0.122] (0.2376) <03:22:34> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.238})
Step:  440000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.521], Avg: [ 0.143  0.143  0.143  0.143  0.143 -0.143 -0.143 -0.143 -0.143 -0.143] (0.2305) <03:27:04> ({r_i: None, r_t: [ 3.562  3.562  3.562  3.562  3.562], eps: 0.231})
Step:  450000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.346], Avg: [ 0.158  0.158  0.158  0.158  0.158 -0.158 -0.158 -0.158 -0.158 -0.158] (0.2215) <03:31:35> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.221})
Step:  460000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.168  0.168  0.168  0.168  0.168 -0.168 -0.168 -0.168 -0.168 -0.168] (0.2149) <03:36:06> ({r_i: None, r_t: [ 3.500  3.500  3.500  3.500  3.500], eps: 0.215})
Step:  470000, Reward: [ 1.125  1.125  1.125  1.125  1.125 -1.125 -1.125 -1.125 -1.125 -1.125] [1.732], Avg: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] (0.2085) <03:40:42> ({r_i: None, r_t: [ 2.250  2.250  2.250  2.250  2.250], eps: 0.208})
Step:  480000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.194  0.194  0.194  0.194  0.194 -0.194 -0.194 -0.194 -0.194 -0.194] (0.2003) <03:45:18> ({r_i: None, r_t: [ 2.562  2.562  2.562  2.562  2.562], eps: 0.2})
Step:  490000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.200  0.200  0.200  0.200  0.200 -0.200 -0.200 -0.200 -0.200 -0.200] (0.1943) <03:50:02> ({r_i: None, r_t: [ 2.750  2.750  2.750  2.750  2.750], eps: 0.194})
Step:  500000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.714], Avg: [ 0.217  0.217  0.217  0.217  0.217 -0.217 -0.217 -0.217 -0.217 -0.217] (0.1886) <03:54:40> ({r_i: None, r_t: [ 2.750  2.750  2.750  2.750  2.750], eps: 0.189})
Step:  510000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.199], Avg: [ 0.228  0.228  0.228  0.228  0.228 -0.228 -0.228 -0.228 -0.228 -0.228] (0.1811) <03:59:20> ({r_i: None, r_t: [ 3.000  3.000  3.000  3.000  3.000], eps: 0.181})
Step:  520000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.323], Avg: [ 0.241  0.241  0.241  0.241  0.241 -0.241 -0.241 -0.241 -0.241 -0.241] (0.1757) <04:04:03> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.176})
Step:  530000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.000], Avg: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] (0.1705) <04:08:45> ({r_i: None, r_t: [ 2.500  2.500  2.500  2.500  2.500], eps: 0.171})
Step:  540000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.436], Avg: [ 0.265  0.265  0.265  0.265  0.265 -0.265 -0.265 -0.265 -0.265 -0.265] (0.1638) <04:13:26> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.164})
Step:  550000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.901], Avg: [ 0.270  0.270  0.270  0.270  0.270 -0.270 -0.270 -0.270 -0.270 -0.270] (0.1589) <04:18:06> ({r_i: None, r_t: [ 2.562  2.562  2.562  2.562  2.562], eps: 0.159})
Step:  560000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.061], Avg: [ 0.279  0.279  0.279  0.279  0.279 -0.279 -0.279 -0.279 -0.279 -0.279] (0.1542) <04:22:45> ({r_i: None, r_t: [ 2.688  2.688  2.688  2.688  2.688], eps: 0.154})
Step:  570000, Reward: [ 1.125  1.125  1.125  1.125  1.125 -1.125 -1.125 -1.125 -1.125 -1.125] [1.732], Avg: [ 0.293  0.293  0.293  0.293  0.293 -0.293 -0.293 -0.293 -0.293 -0.293] (0.1481) <04:27:23> ({r_i: None, r_t: [ 2.500  2.500  2.500  2.500  2.500], eps: 0.148})
Step:  580000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.414], Avg: [ 0.305  0.305  0.305  0.305  0.305 -0.305 -0.305 -0.305 -0.305 -0.305] (0.1437) <04:32:02> ({r_i: None, r_t: [ 2.500  2.500  2.500  2.500  2.500], eps: 0.144})
Step:  590000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.299], Avg: [ 0.311  0.311  0.311  0.311  0.311 -0.311 -0.311 -0.311 -0.311 -0.311] (0.1395) <04:36:40> ({r_i: None, r_t: [ 3.125  3.125  3.125  3.125  3.125], eps: 0.139})
Step:  600000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.199], Avg: [ 0.320  0.320  0.320  0.320  0.320 -0.320 -0.320 -0.320 -0.320 -0.320] (0.1340) <04:41:10> ({r_i: None, r_t: [ 3.062  3.062  3.062  3.062  3.062], eps: 0.134})
Step:  610000, Reward: [ 1.125  1.125  1.125  1.125  1.125 -1.125 -1.125 -1.125 -1.125 -1.125] [1.500], Avg: [ 0.333  0.333  0.333  0.333  0.333 -0.333 -0.333 -0.333 -0.333 -0.333] (0.1300) <04:45:38> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.13})
Step:  620000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.714], Avg: [ 0.344  0.344  0.344  0.344  0.344 -0.344 -0.344 -0.344 -0.344 -0.344] (0.1261) <04:50:06> ({r_i: None, r_t: [ 3.625  3.625  3.625  3.625  3.625], eps: 0.126})
Step:  630000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.750], Avg: [ 0.346  0.346  0.346  0.346  0.346 -0.346 -0.346 -0.346 -0.346 -0.346] (0.1212) <04:54:40> ({r_i: None, r_t: [ 3.062  3.062  3.062  3.062  3.062], eps: 0.121})
Step:  640000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.199], Avg: [ 0.353  0.353  0.353  0.353  0.353 -0.353 -0.353 -0.353 -0.353 -0.353] (0.1176) <04:59:17> ({r_i: None, r_t: [ 3.688  3.688  3.688  3.688  3.688], eps: 0.118})
Step:  650000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.479], Avg: [ 0.362  0.362  0.362  0.362  0.362 -0.362 -0.362 -0.362 -0.362 -0.362] (0.1141) <05:03:54> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.114})
Step:  660000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.661], Avg: [ 0.361  0.361  0.361  0.361  0.361 -0.361 -0.361 -0.361 -0.361 -0.361] (0.1096) <05:08:33> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.11})
Step:  670000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.359  0.359  0.359  0.359  0.359 -0.359 -0.359 -0.359 -0.359 -0.359] (0.1063) <05:13:15> ({r_i: None, r_t: [ 3.250  3.250  3.250  3.250  3.250], eps: 0.106})
Step:  680000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.707], Avg: [ 0.358  0.358  0.358  0.358  0.358 -0.358 -0.358 -0.358 -0.358 -0.358] (0.1032) <05:17:57> ({r_i: None, r_t: [ 2.750  2.750  2.750  2.750  2.750], eps: 0.103})
Step:  690000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.829], Avg: [ 0.359  0.359  0.359  0.359  0.359 -0.359 -0.359 -0.359 -0.359 -0.359] (0.1000) <05:22:37> ({r_i: None, r_t: [ 3.062  3.062  3.062  3.062  3.062], eps: 0.1})
Step:  700000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.275], Avg: [ 0.364  0.364  0.364  0.364  0.364 -0.364 -0.364 -0.364 -0.364 -0.364] (0.1000) <05:27:18> ({r_i: None, r_t: [ 2.438  2.438  2.438  2.438  2.438], eps: 0.1})
Step:  710000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.299], Avg: [ 0.372  0.372  0.372  0.372  0.372 -0.372 -0.372 -0.372 -0.372 -0.372] (0.1000) <05:32:02> ({r_i: None, r_t: [ 2.750  2.750  2.750  2.750  2.750], eps: 0.1})
Step:  720000, Reward: [ 1.438  1.438  1.438  1.438  1.438 -1.438 -1.438 -1.438 -1.438 -1.438] [1.984], Avg: [ 0.387  0.387  0.387  0.387  0.387 -0.387 -0.387 -0.387 -0.387 -0.387] (0.1000) <05:36:46> ({r_i: None, r_t: [ 2.562  2.562  2.562  2.562  2.562], eps: 0.1})
Step:  730000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.031], Avg: [ 0.393  0.393  0.393  0.393  0.393 -0.393 -0.393 -0.393 -0.393 -0.393] (0.1000) <05:41:29> ({r_i: None, r_t: [ 3.438  3.438  3.438  3.438  3.438], eps: 0.1})
Step:  740000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.250], Avg: [ 0.398  0.398  0.398  0.398  0.398 -0.398 -0.398 -0.398 -0.398 -0.398] (0.1000) <05:46:14> ({r_i: None, r_t: [ 2.750  2.750  2.750  2.750  2.750], eps: 0.1})
Step:  750000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.750], Avg: [ 0.400  0.400  0.400  0.400  0.400 -0.400 -0.400 -0.400 -0.400 -0.400] (0.1000) <05:50:57> ({r_i: None, r_t: [ 2.688  2.688  2.688  2.688  2.688], eps: 0.1})
Step:  760000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.173], Avg: [ 0.403  0.403  0.403  0.403  0.403 -0.403 -0.403 -0.403 -0.403 -0.403] (0.1000) <05:55:41> ({r_i: None, r_t: [ 2.438  2.438  2.438  2.438  2.438], eps: 0.1})
Step:  770000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.061], Avg: [ 0.408  0.408  0.408  0.408  0.408 -0.408 -0.408 -0.408 -0.408 -0.408] (0.1000) <06:00:26> ({r_i: None, r_t: [ 3.312  3.312  3.312  3.312  3.312], eps: 0.1})
Step:  780000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.061], Avg: [ 0.412  0.412  0.412  0.412  0.412 -0.412 -0.412 -0.412 -0.412 -0.412] (0.1000) <06:05:13> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.1})
Step:  790000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.413  0.413  0.413  0.413  0.413 -0.413 -0.413 -0.413 -0.413 -0.413] (0.1000) <06:09:57> ({r_i: None, r_t: [ 2.688  2.688  2.688  2.688  2.688], eps: 0.1})
Step:  800000, Reward: [ 1.312  1.312  1.312  1.312  1.312 -1.312 -1.312 -1.312 -1.312 -1.312] [1.750], Avg: [ 0.424  0.424  0.424  0.424  0.424 -0.424 -0.424 -0.424 -0.424 -0.424] (0.1000) <06:14:41> ({r_i: None, r_t: [ 2.625  2.625  2.625  2.625  2.625], eps: 0.1})
Step:  810000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [0.791], Avg: [ 0.427  0.427  0.427  0.427  0.427 -0.427 -0.427 -0.427 -0.427 -0.427] (0.1000) <06:19:21> ({r_i: None, r_t: [ 2.188  2.188  2.188  2.188  2.188], eps: 0.1})
Step:  820000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.639], Avg: [ 0.434  0.434  0.434  0.434  0.434 -0.434 -0.434 -0.434 -0.434 -0.434] (0.1000) <06:24:04> ({r_i: None, r_t: [ 3.375  3.375  3.375  3.375  3.375], eps: 0.1})
Step:  830000, Reward: [ 1.125  1.125  1.125  1.125  1.125 -1.125 -1.125 -1.125 -1.125 -1.125] [1.658], Avg: [ 0.443  0.443  0.443  0.443  0.443 -0.443 -0.443 -0.443 -0.443 -0.443] (0.1000) <06:28:44> ({r_i: None, r_t: [ 3.438  3.438  3.438  3.438  3.438], eps: 0.1})
Step:  840000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.323], Avg: [ 0.448  0.448  0.448  0.448  0.448 -0.448 -0.448 -0.448 -0.448 -0.448] (0.1000) <06:33:27> ({r_i: None, r_t: [ 2.875  2.875  2.875  2.875  2.875], eps: 0.1})
Step:  850000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.935], Avg: [ 0.448  0.448  0.448  0.448  0.448 -0.448 -0.448 -0.448 -0.448 -0.448] (0.1000) <06:38:12> ({r_i: None, r_t: [ 3.000  3.000  3.000  3.000  3.000], eps: 0.1})
Step:  860000, Reward: [ 1.188  1.188  1.188  1.188  1.188 -1.188 -1.188 -1.188 -1.188 -1.188] [1.639], Avg: [ 0.457  0.457  0.457  0.457  0.457 -0.457 -0.457 -0.457 -0.457 -0.457] (0.1000) <06:42:53> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.1})
Step:  870000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.299], Avg: [ 0.462  0.462  0.462  0.462  0.462 -0.462 -0.462 -0.462 -0.462 -0.462] (0.1000) <06:47:34> ({r_i: None, r_t: [ 2.625  2.625  2.625  2.625  2.625], eps: 0.1})
Step:  880000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.436], Avg: [ 0.468  0.468  0.468  0.468  0.468 -0.468 -0.468 -0.468 -0.468 -0.468] (0.1000) <06:52:16> ({r_i: None, r_t: [ 2.500  2.500  2.500  2.500  2.500], eps: 0.1})
Step:  890000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.612], Avg: [ 0.467  0.467  0.467  0.467  0.467 -0.467 -0.467 -0.467 -0.467 -0.467] (0.1000) <06:56:55> ({r_i: None, r_t: [ 2.625  2.625  2.625  2.625  2.625], eps: 0.1})
Step:  900000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.250], Avg: [ 0.470  0.470  0.470  0.470  0.470 -0.470 -0.470 -0.470 -0.470 -0.470] (0.1000) <07:01:27> ({r_i: None, r_t: [ 2.250  2.250  2.250  2.250  2.250], eps: 0.1})
Step:  910000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.392], Avg: [ 0.477  0.477  0.477  0.477  0.477 -0.477 -0.477 -0.477 -0.477 -0.477] (0.1000) <07:05:55> ({r_i: None, r_t: [ 3.125  3.125  3.125  3.125  3.125], eps: 0.1})
Step:  920000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.323], Avg: [ 0.481  0.481  0.481  0.481  0.481 -0.481 -0.481 -0.481 -0.481 -0.481] (0.1000) <07:10:21> ({r_i: None, r_t: [ 3.062  3.062  3.062  3.062  3.062], eps: 0.1})
Step:  930000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.392], Avg: [ 0.487  0.487  0.487  0.487  0.487 -0.487 -0.487 -0.487 -0.487 -0.487] (0.1000) <07:14:51> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.1})
Step:  940000, Reward: [ 1.250  1.250  1.250  1.250  1.250 -1.250 -1.250 -1.250 -1.250 -1.250] [1.696], Avg: [ 0.495  0.495  0.495  0.495  0.495 -0.495 -0.495 -0.495 -0.495 -0.495] (0.1000) <07:19:20> ({r_i: None, r_t: [ 2.812  2.812  2.812  2.812  2.812], eps: 0.1})
Step:  950000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.561], Avg: [ 0.501  0.501  0.501  0.501  0.501 -0.501 -0.501 -0.501 -0.501 -0.501] (0.1000) <07:23:50> ({r_i: None, r_t: [ 2.375  2.375  2.375  2.375  2.375], eps: 0.1})
Step:  960000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.090], Avg: [ 0.503  0.503  0.503  0.503  0.503 -0.503 -0.503 -0.503 -0.503 -0.503] (0.1000) <07:28:20> ({r_i: None, r_t: [ 2.875  2.875  2.875  2.875  2.875], eps: 0.1})
Step:  970000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.146], Avg: [ 0.506  0.506  0.506  0.506  0.506 -0.506 -0.506 -0.506 -0.506 -0.506] (0.1000) <07:32:48> ({r_i: None, r_t: [ 2.250  2.250  2.250  2.250  2.250], eps: 0.1})
Step:  980000, Reward: [ 1.312  1.312  1.312  1.312  1.312 -1.312 -1.312 -1.312 -1.312 -1.312] [1.677], Avg: [ 0.515  0.515  0.515  0.515  0.515 -0.515 -0.515 -0.515 -0.515 -0.515] (0.1000) <07:37:18> ({r_i: None, r_t: [ 3.562  3.562  3.562  3.562  3.562], eps: 0.1})
Step:  990000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [0.935], Avg: [ 0.516  0.516  0.516  0.516  0.516 -0.516 -0.516 -0.516 -0.516 -0.516] (0.1000) <07:41:52> ({r_i: None, r_t: [ 2.625  2.625  2.625  2.625  2.625], eps: 0.1})
Step: 1000000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.369], Avg: [ 0.520  0.520  0.520  0.520  0.520 -0.520 -0.520 -0.520 -0.520 -0.520] (0.1000) <07:46:28> ({r_i: None, r_t: [ 3.312  3.312  3.312  3.312  3.312], eps: 0.1})
Step: 1010000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.225], Avg: [ 0.525  0.525  0.525  0.525  0.525 -0.525 -0.525 -0.525 -0.525 -0.525] (0.1000) <07:51:10> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.1})
Step: 1020000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.275], Avg: [ 0.529  0.529  0.529  0.529  0.529 -0.529 -0.529 -0.529 -0.529 -0.529] (0.1000) <07:55:50> ({r_i: None, r_t: [ 2.688  2.688  2.688  2.688  2.688], eps: 0.1})
Step: 1030000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.581], Avg: [ 0.533  0.533  0.533  0.533  0.533 -0.533 -0.533 -0.533 -0.533 -0.533] (0.1000) <08:00:29> ({r_i: None, r_t: [ 3.250  3.250  3.250  3.250  3.250], eps: 0.1})
Step: 1040000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.323], Avg: [ 0.538  0.538  0.538  0.538  0.538 -0.538 -0.538 -0.538 -0.538 -0.538] (0.1000) <08:05:08> ({r_i: None, r_t: [ 3.312  3.312  3.312  3.312  3.312], eps: 0.1})
Step: 1050000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.118], Avg: [ 0.540  0.540  0.540  0.540  0.540 -0.540 -0.540 -0.540 -0.540 -0.540] (0.1000) <08:09:48> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.1})
Step: 1060000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.118], Avg: [ 0.541  0.541  0.541  0.541  0.541 -0.541 -0.541 -0.541 -0.541 -0.541] (0.1000) <08:14:29> ({r_i: None, r_t: [ 3.375  3.375  3.375  3.375  3.375], eps: 0.1})
Step: 1070000, Reward: [ 1.562  1.562  1.562  1.562  1.562 -1.562 -1.562 -1.562 -1.562 -1.562] [1.920], Avg: [ 0.551  0.551  0.551  0.551  0.551 -0.551 -0.551 -0.551 -0.551 -0.551] (0.1000) <08:19:09> ({r_i: None, r_t: [ 3.250  3.250  3.250  3.250  3.250], eps: 0.1})
Step: 1080000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.550  0.550  0.550  0.550  0.550 -0.550 -0.550 -0.550 -0.550 -0.550] (0.1000) <08:23:50> ({r_i: None, r_t: [ 3.125  3.125  3.125  3.125  3.125], eps: 0.1})
Step: 1090000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.173], Avg: [ 0.553  0.553  0.553  0.553  0.553 -0.553 -0.553 -0.553 -0.553 -0.553] (0.1000) <08:28:29> ({r_i: None, r_t: [ 3.125  3.125  3.125  3.125  3.125], eps: 0.1})
Step: 1100000, Reward: [ 1.375  1.375  1.375  1.375  1.375 -1.375 -1.375 -1.375 -1.375 -1.375] [1.936], Avg: [ 0.561  0.561  0.561  0.561  0.561 -0.561 -0.561 -0.561 -0.561 -0.561] (0.1000) <08:33:09> ({r_i: None, r_t: [ 3.250  3.250  3.250  3.250  3.250], eps: 0.1})
Step: 1110000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.436], Avg: [ 0.565  0.565  0.565  0.565  0.565 -0.565 -0.565 -0.565 -0.565 -0.565] (0.1000) <08:37:49> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.1})
Step: 1120000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.199], Avg: [ 0.567  0.567  0.567  0.567  0.567 -0.567 -0.567 -0.567 -0.567 -0.567] (0.1000) <08:42:27> ({r_i: None, r_t: [ 3.375  3.375  3.375  3.375  3.375], eps: 0.1})
Step: 1130000, Reward: [ 1.312  1.312  1.312  1.312  1.312 -1.312 -1.312 -1.312 -1.312 -1.312] [1.785], Avg: [ 0.574  0.574  0.574  0.574  0.574 -0.574 -0.574 -0.574 -0.574 -0.574] (0.1000) <08:47:03> ({r_i: None, r_t: [ 2.625  2.625  2.625  2.625  2.625], eps: 0.1})
Step: 1140000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.574  0.574  0.574  0.574  0.574 -0.574 -0.574 -0.574 -0.574 -0.574] (0.1000) <08:51:38> ({r_i: None, r_t: [ 2.562  2.562  2.562  2.562  2.562], eps: 0.1})
Step: 1150000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.561], Avg: [ 0.578  0.578  0.578  0.578  0.578 -0.578 -0.578 -0.578 -0.578 -0.578] (0.1000) <08:56:06> ({r_i: None, r_t: [ 3.375  3.375  3.375  3.375  3.375], eps: 0.1})
Step: 1160000, Reward: [ 1.250  1.250  1.250  1.250  1.250 -1.250 -1.250 -1.250 -1.250 -1.250] [1.837], Avg: [ 0.583  0.583  0.583  0.583  0.583 -0.583 -0.583 -0.583 -0.583 -0.583] (0.1000) <09:00:35> ({r_i: None, r_t: [ 3.375  3.375  3.375  3.375  3.375], eps: 0.1})
Step: 1170000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.583  0.583  0.583  0.583  0.583 -0.583 -0.583 -0.583 -0.583 -0.583] (0.1000) <09:05:13> ({r_i: None, r_t: [ 2.062  2.062  2.062  2.062  2.062], eps: 0.1})
Step: 1180000, Reward: [ 1.188  1.188  1.188  1.188  1.188 -1.188 -1.188 -1.188 -1.188 -1.188] [1.750], Avg: [ 0.588  0.588  0.588  0.588  0.588 -0.588 -0.588 -0.588 -0.588 -0.588] (0.1000) <09:09:50> ({r_i: None, r_t: [ 3.062  3.062  3.062  3.062  3.062], eps: 0.1})
Step: 1190000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [0.935], Avg: [ 0.588  0.588  0.588  0.588  0.588 -0.588 -0.588 -0.588 -0.588 -0.588] (0.1000) <09:14:29> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.1})
Step: 1200000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.000], Avg: [ 0.589  0.589  0.589  0.589  0.589 -0.589 -0.589 -0.589 -0.589 -0.589] (0.1000) <09:19:08> ({r_i: None, r_t: [ 2.812  2.812  2.812  2.812  2.812], eps: 0.1})
Step: 1210000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.250], Avg: [ 0.592  0.592  0.592  0.592  0.592 -0.592 -0.592 -0.592 -0.592 -0.592] (0.1000) <09:23:50> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.1})
Step: 1220000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.146], Avg: [ 0.594  0.594  0.594  0.594  0.594 -0.594 -0.594 -0.594 -0.594 -0.594] (0.1000) <09:28:29> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1230000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.901], Avg: [ 0.594  0.594  0.594  0.594  0.594 -0.594 -0.594 -0.594 -0.594 -0.594] (0.1000) <09:33:07> ({r_i: None, r_t: [ 2.875  2.875  2.875  2.875  2.875], eps: 0.1})
Step: 1240000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.061], Avg: [ 0.594  0.594  0.594  0.594  0.594 -0.594 -0.594 -0.594 -0.594 -0.594] (0.1000) <09:37:46> ({r_i: None, r_t: [ 2.938  2.938  2.938  2.938  2.938], eps: 0.1})
Step: 1250000, Reward: [ 1.125  1.125  1.125  1.125  1.125 -1.125 -1.125 -1.125 -1.125 -1.125] [1.581], Avg: [ 0.598  0.598  0.598  0.598  0.598 -0.598 -0.598 -0.598 -0.598 -0.598] (0.1000) <09:42:27> ({r_i: None, r_t: [ 3.438  3.438  3.438  3.438  3.438], eps: 0.1})
Step: 1260000, Reward: [ 2.062  2.062  2.062  2.062  2.062 -2.062 -2.062 -2.062 -2.062 -2.062] [2.332], Avg: [ 0.610  0.610  0.610  0.610  0.610 -0.610 -0.610 -0.610 -0.610 -0.610] (0.1000) <09:47:10> ({r_i: None, r_t: [ 4.000  4.000  4.000  4.000  4.000], eps: 0.1})
Step: 1270000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.146], Avg: [ 0.611  0.611  0.611  0.611  0.611 -0.611 -0.611 -0.611 -0.611 -0.611] (0.1000) <09:51:53> ({r_i: None, r_t: [ 4.812  4.812  4.812  4.812  4.812], eps: 0.1})
Step: 1280000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [1.541], Avg: [ 0.609  0.609  0.609  0.609  0.609 -0.609 -0.609 -0.609 -0.609 -0.609] (0.1000) <09:56:26> ({r_i: None, r_t: [ 1.438  1.438  1.438  1.438  1.438], eps: 0.1})
Step: 1290000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [1.146], Avg: [ 0.609  0.609  0.609  0.609  0.609 -0.609 -0.609 -0.609 -0.609 -0.609] (0.1000) <10:00:59> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1300000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.901], Avg: [ 0.608  0.608  0.608  0.608  0.608 -0.608 -0.608 -0.608 -0.608 -0.608] (0.1000) <10:05:34> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1310000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [1.061], Avg: [ 0.606  0.606  0.606  0.606  0.606 -0.606 -0.606 -0.606 -0.606 -0.606] (0.1000) <10:10:09> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.1})
Step: 1320000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.000], Avg: [ 0.607  0.607  0.607  0.607  0.607 -0.607 -0.607 -0.607 -0.607 -0.607] (0.1000) <10:14:43> ({r_i: None, r_t: [ 1.125  1.125  1.125  1.125  1.125], eps: 0.1})
Step: 1330000, Reward: [-1.750 -1.750 -1.750 -1.750 -1.750  1.750  1.750  1.750  1.750  1.750] [2.345], Avg: [ 0.590  0.590  0.590  0.590  0.590 -0.590 -0.590 -0.590 -0.590 -0.590] (0.1000) <10:19:19> ({r_i: None, r_t: [-0.438 -0.438 -0.438 -0.438 -0.438], eps: 0.1})
Step: 1340000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [1.090], Avg: [ 0.587  0.587  0.587  0.587  0.587 -0.587 -0.587 -0.587 -0.587 -0.587] (0.1000) <10:23:51> ({r_i: None, r_t: [-2.250 -2.250 -2.250 -2.250 -2.250], eps: 0.1})
Step: 1350000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.146], Avg: [ 0.584  0.584  0.584  0.584  0.584 -0.584 -0.584 -0.584 -0.584 -0.584] (0.1000) <10:28:19> ({r_i: None, r_t: [ 0.562  0.562  0.562  0.562  0.562], eps: 0.1})
Step: 1360000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.968], Avg: [ 0.582  0.582  0.582  0.582  0.582 -0.582 -0.582 -0.582 -0.582 -0.582] (0.1000) <10:32:39> ({r_i: None, r_t: [-0.312 -0.312 -0.312 -0.312 -0.312], eps: 0.1})
Step: 1370000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [1.031], Avg: [ 0.578  0.578  0.578  0.578  0.578 -0.578 -0.578 -0.578 -0.578 -0.578] (0.1000) <10:36:58> ({r_i: None, r_t: [-0.250 -0.250 -0.250 -0.250 -0.250], eps: 0.1})
Step: 1380000, Reward: [-0.062 -0.062 -0.062 -0.062 -0.062  0.062  0.062  0.062  0.062  0.062] [0.968], Avg: [ 0.573  0.573  0.573  0.573  0.573 -0.573 -0.573 -0.573 -0.573 -0.573] (0.1000) <10:41:17> ({r_i: None, r_t: [ 0.625  0.625  0.625  0.625  0.625], eps: 0.1})
Step: 1390000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.968], Avg: [ 0.570  0.570  0.570  0.570  0.570 -0.570 -0.570 -0.570 -0.570 -0.570] (0.1000) <10:45:38> ({r_i: None, r_t: [ 0.812  0.812  0.812  0.812  0.812], eps: 0.1})
Step: 1400000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.569  0.569  0.569  0.569  0.569 -0.569 -0.569 -0.569 -0.569 -0.569] (0.1000) <10:49:56> ({r_i: None, r_t: [ 0.625  0.625  0.625  0.625  0.625], eps: 0.1})
Step: 1410000, Reward: [ 0.062  0.062  0.062  0.062  0.062 -0.062 -0.062 -0.062 -0.062 -0.062] [0.901], Avg: [ 0.566  0.566  0.566  0.566  0.566 -0.566 -0.566 -0.566 -0.566 -0.566] (0.1000) <10:54:14> ({r_i: None, r_t: [-0.062 -0.062 -0.062 -0.062 -0.062], eps: 0.1})
Step: 1420000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.146], Avg: [ 0.567  0.567  0.567  0.567  0.567 -0.567 -0.567 -0.567 -0.567 -0.567] (0.1000) <10:58:34> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1430000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.750], Avg: [ 0.566  0.566  0.566  0.566  0.566 -0.566 -0.566 -0.566 -0.566 -0.566] (0.1000) <11:02:57> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1440000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.118], Avg: [ 0.567  0.567  0.567  0.567  0.567 -0.567 -0.567 -0.567 -0.567 -0.567] (0.1000) <11:07:21> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1450000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.901], Avg: [ 0.567  0.567  0.567  0.567  0.567 -0.567 -0.567 -0.567 -0.567 -0.567] (0.1000) <11:11:45> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1460000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.567  0.567  0.567  0.567  0.567 -0.567 -0.567 -0.567 -0.567 -0.567] (0.1000) <11:16:10> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1470000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.346], Avg: [ 0.570  0.570  0.570  0.570  0.570 -0.570 -0.570 -0.570 -0.570 -0.570] (0.1000) <11:20:35> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1480000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.369], Avg: [ 0.573  0.573  0.573  0.573  0.573 -0.573 -0.573 -0.573 -0.573 -0.573] (0.1000) <11:25:00> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.1})
Step: 1490000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.901], Avg: [ 0.572  0.572  0.572  0.572  0.572 -0.572 -0.572 -0.572 -0.572 -0.572] (0.1000) <11:29:25> ({r_i: None, r_t: [ 2.375  2.375  2.375  2.375  2.375], eps: 0.1})
Step: 1500000, Reward: [ 0.188  0.188  0.188  0.188  0.188 -0.188 -0.188 -0.188 -0.188 -0.188] [0.433], Avg: [ 0.570  0.570  0.570  0.570  0.570 -0.570 -0.570 -0.570 -0.570 -0.570] (0.1000) <11:33:49> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1510000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.968], Avg: [ 0.570  0.570  0.570  0.570  0.570 -0.570 -0.570 -0.570 -0.570 -0.570] (0.1000) <11:38:15> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1520000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.750], Avg: [ 0.569  0.569  0.569  0.569  0.569 -0.569 -0.569 -0.569 -0.569 -0.569] (0.1000) <11:42:39> ({r_i: None, r_t: [ 1.688  1.688  1.688  1.688  1.688], eps: 0.1})
Step: 1530000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.569  0.569  0.569  0.569  0.569 -0.569 -0.569 -0.569 -0.569 -0.569] (0.1000) <11:47:03> ({r_i: None, r_t: [ 2.125  2.125  2.125  2.125  2.125], eps: 0.1})
Step: 1540000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.250], Avg: [ 0.570  0.570  0.570  0.570  0.570 -0.570 -0.570 -0.570 -0.570 -0.570] (0.1000) <11:51:28> ({r_i: None, r_t: [ 1.500  1.500  1.500  1.500  1.500], eps: 0.1})
Step: 1550000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.225], Avg: [ 0.572  0.572  0.572  0.572  0.572 -0.572 -0.572 -0.572 -0.572 -0.572] (0.1000) <11:55:53> ({r_i: None, r_t: [ 2.438  2.438  2.438  2.438  2.438], eps: 0.1})
Step: 1560000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.250], Avg: [ 0.573  0.573  0.573  0.573  0.573 -0.573 -0.573 -0.573 -0.573 -0.573] (0.1000) <12:00:20> ({r_i: None, r_t: [ 2.250  2.250  2.250  2.250  2.250], eps: 0.1})
Step: 1570000, Reward: [ 0.750  0.750  0.750  0.750  0.750 -0.750 -0.750 -0.750 -0.750 -0.750] [1.000], Avg: [ 0.574  0.574  0.574  0.574  0.574 -0.574 -0.574 -0.574 -0.574 -0.574] (0.1000) <12:04:44> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1580000, Reward: [ 0.375  0.375  0.375  0.375  0.375 -0.375 -0.375 -0.375 -0.375 -0.375] [0.866], Avg: [ 0.573  0.573  0.573  0.573  0.573 -0.573 -0.573 -0.573 -0.573 -0.573] (0.1000) <12:09:07> ({r_i: None, r_t: [ 2.062  2.062  2.062  2.062  2.062], eps: 0.1})
Step: 1590000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.750], Avg: [ 0.572  0.572  0.572  0.572  0.572 -0.572 -0.572 -0.572 -0.572 -0.572] (0.1000) <12:13:31> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1600000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.090], Avg: [ 0.573  0.573  0.573  0.573  0.573 -0.573 -0.573 -0.573 -0.573 -0.573] (0.1000) <12:17:55> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.1})
Step: 1610000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.346], Avg: [ 0.575  0.575  0.575  0.575  0.575 -0.575 -0.575 -0.575 -0.575 -0.575] (0.1000) <12:22:19> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1620000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.250], Avg: [ 0.576  0.576  0.576  0.576  0.576 -0.576 -0.576 -0.576 -0.576 -0.576] (0.1000) <12:26:43> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.1})
Step: 1630000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.118], Avg: [ 0.576  0.576  0.576  0.576  0.576 -0.576 -0.576 -0.576 -0.576 -0.576] (0.1000) <12:31:08> ({r_i: None, r_t: [ 2.125  2.125  2.125  2.125  2.125], eps: 0.1})
Step: 1640000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.146], Avg: [ 0.577  0.577  0.577  0.577  0.577 -0.577 -0.577 -0.577 -0.577 -0.577] (0.1000) <12:35:32> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.1})
Step: 1650000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.576  0.576  0.576  0.576  0.576 -0.576 -0.576 -0.576 -0.576 -0.576] (0.1000) <12:39:59> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1660000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [0.968], Avg: [ 0.577  0.577  0.577  0.577  0.577 -0.577 -0.577 -0.577 -0.577 -0.577] (0.1000) <12:44:23> ({r_i: None, r_t: [ 2.125  2.125  2.125  2.125  2.125], eps: 0.1})
Step: 1670000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.061], Avg: [ 0.577  0.577  0.577  0.577  0.577 -0.577 -0.577 -0.577 -0.577 -0.577] (0.1000) <12:48:47> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.1})
Step: 1680000, Reward: [ 1.062  1.062  1.062  1.062  1.062 -1.062 -1.062 -1.062 -1.062 -1.062] [1.436], Avg: [ 0.580  0.580  0.580  0.580  0.580 -0.580 -0.580 -0.580 -0.580 -0.580] (0.1000) <12:53:11> ({r_i: None, r_t: [ 2.062  2.062  2.062  2.062  2.062], eps: 0.1})
Step: 1690000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.829], Avg: [ 0.580  0.580  0.580  0.580  0.580 -0.580 -0.580 -0.580 -0.580 -0.580] (0.1000) <12:57:36> ({r_i: None, r_t: [ 2.188  2.188  2.188  2.188  2.188], eps: 0.1})
Step: 1700000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.173], Avg: [ 0.582  0.582  0.582  0.582  0.582 -0.582 -0.582 -0.582 -0.582 -0.582] (0.1000) <13:02:00> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.1})
Step: 1710000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.199], Avg: [ 0.582  0.582  0.582  0.582  0.582 -0.582 -0.582 -0.582 -0.582 -0.582] (0.1000) <13:06:26> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.1})
Step: 1720000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.866], Avg: [ 0.582  0.582  0.582  0.582  0.582 -0.582 -0.582 -0.582 -0.582 -0.582] (0.1000) <13:10:49> ({r_i: None, r_t: [ 2.125  2.125  2.125  2.125  2.125], eps: 0.1})
Step: 1730000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.901], Avg: [ 0.582  0.582  0.582  0.582  0.582 -0.582 -0.582 -0.582 -0.582 -0.582] (0.1000) <13:15:12> ({r_i: None, r_t: [ 2.062  2.062  2.062  2.062  2.062], eps: 0.1})
Step: 1740000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.829], Avg: [ 0.581  0.581  0.581  0.581  0.581 -0.581 -0.581 -0.581 -0.581 -0.581] (0.1000) <13:19:37> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1750000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.541], Avg: [ 0.584  0.584  0.584  0.584  0.584 -0.584 -0.584 -0.584 -0.584 -0.584] (0.1000) <13:24:04> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.1})
Step: 1760000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.750], Avg: [ 0.583  0.583  0.583  0.583  0.583 -0.583 -0.583 -0.583 -0.583 -0.583] (0.1000) <13:28:30> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1770000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.118], Avg: [ 0.583  0.583  0.583  0.583  0.583 -0.583 -0.583 -0.583 -0.583 -0.583] (0.1000) <13:32:56> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1780000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.436], Avg: [ 0.585  0.585  0.585  0.585  0.585 -0.585 -0.585 -0.585 -0.585 -0.585] (0.1000) <13:37:23> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1790000, Reward: [ 0.812  0.812  0.812  0.812  0.812 -0.812 -0.812 -0.812 -0.812 -0.812] [1.146], Avg: [ 0.586  0.586  0.586  0.586  0.586 -0.586 -0.586 -0.586 -0.586 -0.586] (0.1000) <13:41:47> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1800000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.000], Avg: [ 0.586  0.586  0.586  0.586  0.586 -0.586 -0.586 -0.586 -0.586 -0.586] (0.1000) <13:46:11> ({r_i: None, r_t: [ 1.625  1.625  1.625  1.625  1.625], eps: 0.1})
Step: 1810000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.061], Avg: [ 0.586  0.586  0.586  0.586  0.586 -0.586 -0.586 -0.586 -0.586 -0.586] (0.1000) <13:50:35> ({r_i: None, r_t: [ 2.250  2.250  2.250  2.250  2.250], eps: 0.1})
Step: 1820000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [1.118], Avg: [ 0.586  0.586  0.586  0.586  0.586 -0.586 -0.586 -0.586 -0.586 -0.586] (0.1000) <13:54:59> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.1})
Step: 1830000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [1.031], Avg: [ 0.586  0.586  0.586  0.586  0.586 -0.586 -0.586 -0.586 -0.586 -0.586] (0.1000) <13:59:24> ({r_i: None, r_t: [ 2.188  2.188  2.188  2.188  2.188], eps: 0.1})
Step: 1840000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [0.935], Avg: [ 0.586  0.586  0.586  0.586  0.586 -0.586 -0.586 -0.586 -0.586 -0.586] (0.1000) <14:03:48> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.1})
Step: 1850000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.587  0.587  0.587  0.587  0.587 -0.587 -0.587 -0.587 -0.587 -0.587] (0.1000) <14:08:14> ({r_i: None, r_t: [ 2.875  2.875  2.875  2.875  2.875], eps: 0.1})
Step: 1860000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.000], Avg: [ 0.587  0.587  0.587  0.587  0.587 -0.587 -0.587 -0.587 -0.587 -0.587] (0.1000) <14:12:38> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1870000, Reward: [ 0.688  0.688  0.688  0.688  0.688 -0.688 -0.688 -0.688 -0.688 -0.688] [0.968], Avg: [ 0.587  0.587  0.587  0.587  0.587 -0.587 -0.587 -0.587 -0.587 -0.587] (0.1000) <14:17:01> ({r_i: None, r_t: [ 2.312  2.312  2.312  2.312  2.312], eps: 0.1})
Step: 1880000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [0.935], Avg: [ 0.588  0.588  0.588  0.588  0.588 -0.588 -0.588 -0.588 -0.588 -0.588] (0.1000) <14:21:26> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.1})
Step: 1890000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.829], Avg: [ 0.587  0.587  0.587  0.587  0.587 -0.587 -0.587 -0.587 -0.587 -0.587] (0.1000) <14:25:49> ({r_i: None, r_t: [ 1.938  1.938  1.938  1.938  1.938], eps: 0.1})
Step: 1900000, Reward: [ 0.438  0.438  0.438  0.438  0.438 -0.438 -0.438 -0.438 -0.438 -0.438] [0.750], Avg: [ 0.587  0.587  0.587  0.587  0.587 -0.587 -0.587 -0.587 -0.587 -0.587] (0.1000) <14:30:13> ({r_i: None, r_t: [ 1.875  1.875  1.875  1.875  1.875], eps: 0.1})
Step: 1910000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.791], Avg: [ 0.586  0.586  0.586  0.586  0.586 -0.586 -0.586 -0.586 -0.586 -0.586] (0.1000) <14:34:38> ({r_i: None, r_t: [ 2.062  2.062  2.062  2.062  2.062], eps: 0.1})
Step: 1920000, Reward: [ 1.000  1.000  1.000  1.000  1.000 -1.000 -1.000 -1.000 -1.000 -1.000] [1.458], Avg: [ 0.588  0.588  0.588  0.588  0.588 -0.588 -0.588 -0.588 -0.588 -0.588] (0.1000) <14:39:03> ({r_i: None, r_t: [ 2.125  2.125  2.125  2.125  2.125], eps: 0.1})
Step: 1930000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.414], Avg: [ 0.590  0.590  0.590  0.590  0.590 -0.590 -0.590 -0.590 -0.590 -0.590] (0.1000) <14:43:26> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1940000, Reward: [ 0.250  0.250  0.250  0.250  0.250 -0.250 -0.250 -0.250 -0.250 -0.250] [0.500], Avg: [ 0.588  0.588  0.588  0.588  0.588 -0.588 -0.588 -0.588 -0.588 -0.588] (0.1000) <14:47:51> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1950000, Reward: [ 0.875  0.875  0.875  0.875  0.875 -0.875 -0.875 -0.875 -0.875 -0.875] [1.275], Avg: [ 0.590  0.590  0.590  0.590  0.590 -0.590 -0.590 -0.590 -0.590 -0.590] (0.1000) <14:52:15> ({r_i: None, r_t: [ 1.750  1.750  1.750  1.750  1.750], eps: 0.1})
Step: 1960000, Reward: [ 0.500  0.500  0.500  0.500  0.500 -0.500 -0.500 -0.500 -0.500 -0.500] [0.707], Avg: [ 0.589  0.589  0.589  0.589  0.589 -0.589 -0.589 -0.589 -0.589 -0.589] (0.1000) <14:56:41> ({r_i: None, r_t: [ 1.812  1.812  1.812  1.812  1.812], eps: 0.1})
Step: 1970000, Reward: [ 0.938  0.938  0.938  0.938  0.938 -0.938 -0.938 -0.938 -0.938 -0.938] [1.199], Avg: [ 0.591  0.591  0.591  0.591  0.591 -0.591 -0.591 -0.591 -0.591 -0.591] (0.1000) <15:01:07> ({r_i: None, r_t: [ 2.000  2.000  2.000  2.000  2.000], eps: 0.1})
Step: 1980000, Reward: [ 0.562  0.562  0.562  0.562  0.562 -0.562 -0.562 -0.562 -0.562 -0.562] [0.901], Avg: [ 0.591  0.591  0.591  0.591  0.591 -0.591 -0.591 -0.591 -0.591 -0.591] (0.1000) <15:05:32> ({r_i: None, r_t: [ 1.562  1.562  1.562  1.562  1.562], eps: 0.1})
Step: 1990000, Reward: [ 0.625  0.625  0.625  0.625  0.625 -0.625 -0.625 -0.625 -0.625 -0.625] [1.118], Avg: [ 0.591  0.591  0.591  0.591  0.591 -0.591 -0.591 -0.591 -0.591 -0.591] (0.1000) <15:09:58> ({r_i: None, r_t: [ 2.062  2.062  2.062  2.062  2.062], eps: 0.1})
Step: 2000000, Reward: [ 0.312  0.312  0.312  0.312  0.312 -0.312 -0.312 -0.312 -0.312 -0.312] [0.901], Avg: [ 0.590  0.590  0.590  0.590  0.590 -0.590 -0.590 -0.590 -0.590 -0.590] (0.1000) <15:14:23> ({r_i: None, r_t: [ 1.438  1.438  1.438  1.438  1.438], eps: 0.1})

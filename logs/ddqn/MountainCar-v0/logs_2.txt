Model: <class 'models.ddqn.DDQNAgent'>, Dir: MountainCar-v0
num_envs: 16, state_size: (2,), action_size: [3], action_space: Discrete(3),

import os
import math
import torch
import random
import numpy as np
from models.rand import RandomAgent, PrioritizedReplayBuffer, ReplayBuffer
from utils.network import PTQNetwork, PTACAgent, LEARN_RATE, NUM_STEPS, EPS_MIN, EPS_DECAY, REPLAY_BATCH_SIZE

class DDQNetwork(PTQNetwork):
	def __init__(self, state_size, action_size, lr=LEARN_RATE, gpu=True, load=None): 
		super().__init__(state_size, action_size, lr=lr, gpu=gpu, load=load)

	def get_action(self, state, use_target=False, numpy=True, sample=True):
		with torch.no_grad():
			q_values = self.critic_local(state) if not use_target else self.critic_target(state)
			return q_values.softmax(-1).cpu().numpy() if numpy else q_values.softmax(-1)

	def get_q_value(self, state, action, use_target=False, numpy=True):
		with torch.no_grad():
			q_values = self.critic_local(state) if not use_target else self.critic_target(state)
			out_dims = q_values.size()[:-1]
			q_values = q_values.reshape(-1, q_values.size(-1))
			q_indices = action.argmax(-1).reshape(-1)
			q_selected = q_values[np.arange(q_indices.size(0)), q_indices].reshape(*out_dims, 1)
			return q_selected.cpu().numpy() if numpy else q_selected
	
	def optimize(self, states, actions, q_targets, importances=1):
		q_values = self.critic_local(states)[np.arange(actions.size(0)), actions.argmax(-1)].unsqueeze(-1)
		critic_error = q_values - q_targets.detach()
		critic_loss = importances.to(self.device) * critic_error.pow(2)
		self.step(self.critic_optimizer, critic_loss.mean())
		self.soft_copy(self.critic_local, self.critic_target)
		return critic_error.cpu().detach().numpy().squeeze(-1)
	
	def save_model(self, dirname="pytorch", name="best"):
		super().save_model("ddqn", dirname, name)
		
	def load_model(self, dirname="pytorch", name="best"):
		super().load_model("ddqn", dirname, name)

class DDQNAgent(PTACAgent):
	def __init__(self, state_size, action_size, decay=EPS_DECAY, lr=LEARN_RATE, update_freq=NUM_STEPS, gpu=True, load=None):
		super().__init__(state_size, action_size, DDQNetwork, lr=lr, update_freq=update_freq, decay=decay, gpu=gpu, load=load)

	def get_action(self, state, eps=None, sample=True, e_greedy=True):
		eps = self.eps if eps is None else eps
		action_random = super().get_action(state, eps)
		if e_greedy and random.random() < eps: return action_random
		action_greedy = self.network.get_action(self.to_tensor(state), sample=sample)
		return action_greedy
		
	def train(self, state, action, next_state, reward, done):
		self.buffer.append((state, action, reward, done))
		if done[0] or len(self.buffer) >= self.update_freq:
			states, actions, rewards, dones = map(self.to_tensor, zip(*self.buffer))
			self.buffer.clear()	
			next_state = self.to_tensor(next_state)
			next_action = self.network.get_action(next_state, use_target=False, numpy=False)
			values = self.network.get_q_value(states, actions, use_target=True, numpy=False)
			next_value = self.network.get_q_value(next_state, next_action, use_target=True, numpy=False)
			targets, _ = self.compute_gae(next_value, rewards.unsqueeze(-1), dones.unsqueeze(-1), values)
			states, actions, targets = [x.view(x.size(0)*x.size(1), *x.size()[2:]).cpu().numpy() for x in (states, actions, targets)]
			self.replay_buffer.extend(list(zip(states, actions, targets)), shuffle=True)	
		if len(self.replay_buffer) > 0:
			(states, actions, targets), indices, importances = self.replay_buffer.sample(REPLAY_BATCH_SIZE, dtype=self.to_tensor)
			errors = self.network.optimize(states, actions, targets, importances**(1-self.eps))
			self.replay_buffer.update_priorities(indices, errors)
			if done[0]: self.eps = max(self.eps * self.decay, EPS_MIN)

REG_LAMBDA = 1e-6             	# Penalty multiplier to apply for the size of the network weights
LEARN_RATE = 0.0001           	# Sets how much we want to update the network weights at each training step
TARGET_UPDATE_RATE = 0.0004   	# How frequently we want to copy the local network to the target network (for double DQNs)
INPUT_LAYER = 512				# The number of output nodes from the first layer to Actor and Critic networks
ACTOR_HIDDEN = 256				# The number of nodes in the hidden layers of the Actor network
CRITIC_HIDDEN = 1024			# The number of nodes in the hidden layers of the Critic networks
DISCOUNT_RATE = 0.99			# The discount rate to use in the Bellman Equation
NUM_STEPS = 500 				# The number of steps to collect experience in sequence for each GAE calculation
EPS_MAX = 1.0                 	# The starting proportion of random to greedy actions to take
EPS_MIN = 0.020               	# The lower limit proportion of random to greedy actions to take
EPS_DECAY = 0.980             	# The rate at which eps decays from EPS_MAX to EPS_MIN
ADVANTAGE_DECAY = 0.95			# The discount factor for the cumulative GAE calculation
MAX_BUFFER_SIZE = 100000      	# Sets the maximum length of the replay buffer
REPLAY_BATCH_SIZE = 32        	# How many experience tuples to sample from the buffer for each train step

import gym
import argparse
import numpy as np
# import gfootball.env as ggym
from collections import deque
from models.ppo import PPOAgent
from models.ddqn import DDQNAgent
from models.ddpg import DDPGAgent
from models.rand import RandomAgent
from utils.envs import EnsembleEnv, EnvManager, EnvWorker, ImgStack, RawStack
from utils.misc import Logger, rollout

parser = argparse.ArgumentParser(description="A3C Trainer")
parser.add_argument("--workerports", type=int, default=[16], nargs="+", help="The list of worker ports to connect to")
parser.add_argument("--selfport", type=int, default=None, help="Which port to listen on (as a worker server)")
parser.add_argument("--model", type=str, default="ddpg", choices=["ddqn", "ddpg", "ppo", "rand"], help="Which reinforcement learning algorithm to use")
parser.add_argument("--steps", type=int, default=100000, help="Number of steps to train the agent")
args = parser.parse_args()

gym_envs = ["CartPole-v0", "MountainCar-v0", "Acrobot-v1", "Pendulum-v0", "MountainCarContinuous-v0", "CarRacing-v0", "BipedalWalker-v2", "BipedalWalkerHardcore-v2", "LunarLander-v2", "LunarLanderContinuous-v2"]
gfb_envs = ["11_vs_11_stochastic", "academy_empty_goal_close"]
env_name = gym_envs[1]

def make_env(env_name=env_name, log=False):
	if env_name in gym_envs: return gym.make(env_name)
	reps = ["pixels", "pixels_gray", "extracted", "simple115"]
	env = ggym.create_environment(env_name=env_name, representation=reps[3], logdir='/football/logs/', render=False)
	env.spec = gym.envs.registration.EnvSpec(env_name + "-v0", max_episode_steps=env.unwrapped._config._scenario_cfg.game_duration)
	if log: print(f"State space: {env.observation_space.shape} \nAction space: {env.action_space.n}")
	return env

class AsyncAgent(RandomAgent):
	def __init__(self, state_size, action_size, num_envs, agent, load="", gpu=True, train=True):
		super().__init__(state_size, action_size)
		statemodel = RawStack if len(state_size) == 1 else ImgStack
		self.stack = statemodel(state_size, num_envs, load=load, gpu=gpu)
		self.agent = agent(self.stack.state_size, action_size, load="" if train else load, gpu=gpu)

	def get_env_action(self, env, state, eps=None, sample=True):
		state = self.stack.get_state(state)
		env_action, action = self.agent.get_env_action(env, state, eps, sample)
		return env_action, action, state

	def train(self, state, action, next_state, reward, done):
		next_state = self.stack.get_state(next_state)
		self.agent.train(state, action, next_state, reward, done)

	def reset(self, num_envs=None):
		num_envs = self.stack.num_envs if num_envs is None else num_envs
		self.stack.reset(num_envs, restore=False)
		return self

	def save_model(self, dirname="pytorch", name="best"):
		if hasattr(self.agent, "network"): self.agent.network.save_model(dirname, name)

def run(model, steps=10000, ports=16, eval_at=1000):
	num_envs = len(ports) if type(ports) == list else min(ports, 64)
	envs = EnvManager(make_env, ports) if type(ports) == list else EnsembleEnv(make_env, ports)
	agent = AsyncAgent(envs.state_size, envs.action_size, num_envs, model)
	logger = Logger(model, env_name, num_envs=num_envs, state_size=agent.stack.state_size, action_size=envs.action_size, action_space=envs.env.action_space)
	states = envs.reset()
	total_rewards = []
	for s in range(steps):
		agent.reset(num_envs)
		env_actions, actions, states = agent.get_env_action(envs.env, states)
		next_states, rewards, dones, _ = envs.step(env_actions)
		agent.train(states, actions, next_states, rewards, dones)
		states = next_states
		if dones[0]:
			rollouts = [rollout(envs.env, agent.reset(1)) for _ in range(5)]
			test_reward = np.mean(rollouts) - np.std(rollouts)
			total_rewards.append(test_reward)
			agent.save_model(env_name, "checkpoint")
			if env_name in gfb_envs and total_rewards[-1] >= max(total_rewards): agent.save_model(env_name)
			logger.log(f"Step: {s}, Reward: {test_reward+np.std(rollouts):.4f} [{np.std(rollouts):.2f}], Avg: {np.mean(total_rewards):.4f} ({agent.agent.eps:.3f})")

if __name__ == "__main__":
	model = DDPGAgent if args.model == "ddpg" else PPOAgent if args.model == "ppo" else DDQNAgent if args.model == "ddqn" else RandomAgent
	if args.selfport is not None:
		EnvWorker(args.selfport, make_env).start()
	else:
		if len(args.workerports) == 1: args.workerports = args.workerports[0]
		run(model, args.steps, args.workerports)
	print(f"Training finished")

Step: 199, Reward: -200.0000 [0.00], Avg: -200.0000 (0.980)
Step: 399, Reward: -200.0000 [0.00], Avg: -200.0000 (0.960)
Step: 599, Reward: -200.0000 [0.00], Avg: -200.0000 (0.941)
Step: 799, Reward: -200.0000 [0.00], Avg: -200.0000 (0.922)
Step: 999, Reward: -200.0000 [0.00], Avg: -200.0000 (0.904)
Step: 1199, Reward: -200.0000 [0.00], Avg: -200.0000 (0.886)
Step: 1399, Reward: -200.0000 [0.00], Avg: -200.0000 (0.868)
Step: 1599, Reward: -200.0000 [0.00], Avg: -200.0000 (0.851)
Step: 1799, Reward: -200.0000 [0.00], Avg: -200.0000 (0.834)
Step: 1999, Reward: -200.0000 [0.00], Avg: -200.0000 (0.817)
Step: 2199, Reward: -200.0000 [0.00], Avg: -200.0000 (0.801)
Step: 2399, Reward: -200.0000 [0.00], Avg: -200.0000 (0.785)
Step: 2599, Reward: -200.0000 [0.00], Avg: -200.0000 (0.769)
Step: 2799, Reward: -200.0000 [0.00], Avg: -200.0000 (0.754)
Step: 2999, Reward: -200.0000 [0.00], Avg: -200.0000 (0.739)
Step: 3199, Reward: -200.0000 [0.00], Avg: -200.0000 (0.724)
Step: 3399, Reward: -200.0000 [0.00], Avg: -200.0000 (0.709)
Step: 3566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.695)
Step: 3766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.681)
Step: 3966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.668)
Step: 4166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.654)
Step: 4366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.641)
Step: 4566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.628)
Step: 4766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.616)
Step: 4966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.603)
Step: 5166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.591)
Step: 5366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.580)
Step: 5566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.568)
Step: 5766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.557)
Step: 5966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.545)
Step: 6166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.535)
Step: 6366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.524)
Step: 6566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.513)
Step: 6766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.503)
Step: 6966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.493)
Step: 7166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.483)
Step: 7366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.474)
Step: 7566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.464)
Step: 7766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.455)
Step: 7966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.446)
Step: 8166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.437)
Step: 8366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.428)
Step: 8566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.419)
Step: 8766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.411)
Step: 8966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.403)
Step: 9166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.395)
Step: 9366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.387)
Step: 9566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.379)
Step: 9766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.372)
Step: 9966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.364)
Step: 10166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.357)
Step: 10366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.350)
Step: 10566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.343)
Step: 10766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.336)
Step: 10966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.329)
Step: 11166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.323)
Step: 11366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.316)
Step: 11566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.310)
Step: 11766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.304)
Step: 11966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.298)
Step: 12166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.292)
Step: 12366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.286)
Step: 12566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.280)
Step: 12766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.274)
Step: 12966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.269)
Step: 13166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.264)
Step: 13366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.258)
Step: 13566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.253)
Step: 13766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.248)
Step: 13966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.243)
Step: 14166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.238)
Step: 14366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.233)
Step: 14566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.229)
Step: 14766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.224)
Step: 14966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.220)
Step: 15166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.215)
Step: 15366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.211)
Step: 15566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.207)
Step: 15766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.203)
Step: 15966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.199)
Step: 16166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.195)
Step: 16366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.191)
Step: 16566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.187)
Step: 16766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.183)
Step: 16966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.180)
Step: 17166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.176)
Step: 17366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.172)
Step: 17566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.169)
Step: 17766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.166)
Step: 17966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.162)
Step: 18166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.159)
Step: 18366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.156)
Step: 18566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.153)
Step: 18766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.150)
Step: 18966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.147)
Step: 19166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.144)
Step: 19366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.141)
Step: 19566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.138)
Step: 19766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.135)
Step: 19966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.133)
Step: 20166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.130)
Step: 20366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.127)
Step: 20566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.125)
Step: 20766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.122)
Step: 20966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.120)
Step: 21166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.117)
Step: 21366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.115)
Step: 21566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.113)
Step: 21766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.111)
Step: 21966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.108)
Step: 22166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.106)
Step: 22366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.104)
Step: 22566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.102)
Step: 22766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.100)
Step: 22966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.098)
Step: 23166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.096)
Step: 23366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.094)
Step: 23566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.092)
Step: 23766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.090)
Step: 23966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.089)
Step: 24166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.087)
Step: 24366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.085)
Step: 24566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.083)
Step: 24766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.082)
Step: 24966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.080)
Step: 25166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.078)
Step: 25366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.077)
Step: 25566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.075)
Step: 25766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.074)
Step: 25966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.072)
Step: 26166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.071)
Step: 26366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.069)
Step: 26566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.068)
Step: 26766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.067)
Step: 26966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.065)
Step: 27166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.064)
Step: 27366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.063)
Step: 27566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.062)
Step: 27766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.060)
Step: 27966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.059)
Step: 28166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.058)
Step: 28366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.057)
Step: 28566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.056)
Step: 28766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.055)
Step: 28966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.053)
Step: 29166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.052)
Step: 29366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.051)
Step: 29566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.050)
Step: 29766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.049)
Step: 29966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.048)
Step: 30166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.047)
Step: 30366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.046)
Step: 30566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.045)
Step: 30766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.045)
Step: 30966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.044)
Step: 31166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.043)
Step: 31366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.042)
Step: 31566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.041)
Step: 31766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.040)
Step: 31966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.039)
Step: 32166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.039)
Step: 32366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.038)
Step: 32566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.037)
Step: 32766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.036)
Step: 32966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.036)
Step: 33166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.035)
Step: 33366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.034)
Step: 33566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.034)
Step: 33766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.033)
Step: 33966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.032)
Step: 34166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.032)
Step: 34366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.031)
Step: 34566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.030)
Step: 34766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.030)
Step: 34966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.029)
Step: 35166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.029)
Step: 35366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.028)
Step: 35566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.027)
Step: 35766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.027)
Step: 35966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.026)
Step: 36166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.026)
Step: 36366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.025)
Step: 36566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.025)
Step: 36766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.024)
Step: 36966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.024)
Step: 37166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.023)
Step: 37366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.023)
Step: 37566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.022)
Step: 37766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.022)
Step: 37966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.022)
Step: 38166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.021)
Step: 38366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.021)
Step: 38566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 38766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 38966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 39966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 40966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 41966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 42966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 43966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 44966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 45966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 46966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 47966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 48966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 49966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 50966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 51966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 52966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 53966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 54966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 55966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 56966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 57966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 58966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 59966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 60966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 61966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 62966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 63966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 64966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 65966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 66966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 67966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 68966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 69966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 70966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 71966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 72966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 73966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 74966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 75966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 76966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 77966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 78966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 79966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 80966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 81966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 82966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 83966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 84966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 85966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 86966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 87966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 88966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 89966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 90966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 91966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 92966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 93966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 94966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 95966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 96966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 97966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 98966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99166, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99366, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99566, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99766, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
Step: 99966, Reward: -200.0000 [0.00], Avg: -200.0000 (0.020)
